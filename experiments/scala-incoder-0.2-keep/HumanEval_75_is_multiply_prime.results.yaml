language: scala
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isMultiplyPrime = a % primes.head == 0\n      \
    \  primes.dropWhile(p => isMultiplyPrime).takeWhile(p => a % p == 0).length ==\
    \ primesCount\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwnjepmua.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu3tyadym.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if(isMultiplyPrime) {\n            val isPrime = primes.takeWhile(p => a\
    \ % p != 0).forall(p => a % p == 0)\n            if(isPrime) {\n             \
    \   val isMultiplyPrime2 = primes.takeWhile(p => a % p != 0).forall(p => a % p\
    \ == 0)\n                if(isMultiplyPrime2) {\n                    val isMultiplyPrime3\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n              \
    \      if(isMultiplyPrime3) {\n                        val isMultiplyPrime4 =\
    \ primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n                \
    \        if(isMultiplyPrime4) {\n                            val isMultiplyPrime5\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n              \
    \              if(isMultiplyPrime5) {\n                                val isMultiplyPrime6\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n              \
    \                  if(isMultiplyPrime6) {\n                                  \
    \  val isMultiplyPrime7 = primes.takeWhile(p => a % p != 0).forall(p => a % p\
    \ == 0)\n                                    if(isMultiplyPrime7) {\n        \
    \                                val isMultiplyPrime8 = primes.takeWhile(p =>\
    \ a % p != 0).forall(p => a % p == 0)\n                                      \
    \  if(isMultiplyPrime8) {\n                                            val isMultiplyPrime9\
    \ = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n              \
    \                              if(isMultiplyPrime9) {\n                      \
    \                          val isMultiplyPrime10 = primes.takeWhile(p => a % p\
    \ != 0).forall(p => a % p == 0)\n                                            \
    \    if(isMultiplyPrime10) {\n                                               \
    \     val isMultiplyPrime11 = primes.takeWhile(p => a % p != 0).forall(p => a\
    \ % p == 0)\n                                                    if(isMultiplyPrime11)\
    \ {\n                                                        val isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_qc639h3.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_qc639h3.scala:53:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m53 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp_qc639h3.scala:11:21 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmp_qc639h3.scala:39:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m39 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_q2azpw.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_q2azpw.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            val lastPrime = primes.last\n      \
    \      val lastPrimeIndex = primes.lastIndex\n            val isPrime = primes.contains(a)\n\
    \            val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex\
    \ = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n    \
    \        val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex =\
    \ primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n      \
    \      val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n\
    \            val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex\
    \ = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n    \
    \        val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex =\
    \ primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n      \
    \      val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n\
    \            val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex\
    \ = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n    \
    \        val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex =\
    \ primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n      \
    \      val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n\
    \            val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex\
    \ = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n    \
    \        val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex =\
    \ primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n      \
    \      val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n\
    \            val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex\
    \ = primes.indexOf(a)\n            val isPrimeIndex = primes.indexOf(a)\n    \
    \        val isPrimeIndex = primes.indexOf(a)\n            val isPrimeIndex =\
    \ primes.indexOf(a)\n            \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy9jjlw6w.scala:71:0 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9jjlw6w.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpy9jjlw6w.scala:19:16 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36misPrimeIndex\e[0m =\
    \ primes.indexOf(a)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIndex is already defined as \e[33mvalue\e[0m \e[35misPrimeIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy9jjlw6w.scala:20:16 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m            \e[33mval\e[0m \e[36misPrimeIndex\e[0m = primes.indexOf(a)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0misPrimeIndex is already defined as \e[33mvalue\e[0m \e[35misPrimeIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy9jjlw6w.scala:21:16 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m            \e[33mval\e[0m \e[36misPrimeIndex\e[0m = primes.indexOf(a)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0misPrimeIndex is a"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28 = mut\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_kxlg8t.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc_kxlg8t.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc_kxlg8t.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_kxlg8t.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpc_kxlg8t.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Fo"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.size\n\
    \        var isMultiplyPrime = true\n        for (i <- 0 until primesCount) {\n\
    \            if (a % primes(i) == 0) {\n                isMultiplyPrime = false\n\
    \                break\n            }\n        }\n        return isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqxgg7nb3.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqxgg7nb3.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val factors = mutable.ArrayBuffer(a,\
    \ a / 2, a / 3, a / 5)\n        val isPrime = a % 2 == 0\n        val isMultiplyPrime\
    \ = primes.forall(p => factors.forall(f => f % p == 0))\n        isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2z6wwec.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2z6wwec.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(a, a / \e[31m2\e[0m, a / \e[31m3\e[0m,\
    \ a / \e[31m5\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     primes.dropWhile(p => a % p.equals(0)).forall(p => a % p.equals(0))\n  \
    \      isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxyl21tmd.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime27 = mutable.ArrayBuffer.empty\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp144xjdxy.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp144xjdxy.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp144xjdxy.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp144xjdxy.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp144xjdxy.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tm"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount <= 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphm_qcpk8.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            for (i <- primes.dropRight(primesCount\
    \ - 1)) {\n                if (a % i == 0) {\n                    isMultiplyPrime\
    \ = false\n                    break\n                }\n            }\n     \
    \   }\n        return isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprapf0zqs.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val isPri\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfjngzx8a.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn6zgs9_e.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6zgs9_e.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6zgs9_e.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6zgs9_e.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6zgs9_e.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpn6zgs9_e.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes(primesCount - 1) !=\
    \ 0\n        primesCount - 1 match {\n            case 0 => isMultiplyPrime\n\
    \            case _ => isMultiplyPrime && isMultiplyPrime(primes(primesCount -\
    \ 2))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpooh9ieyu.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdblwxb2n.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.size\n\
    \        val isMultiplyPrime = a <= 100\n        if (isMultiplyPrime) {\n    \
    \        val isPrime = primes.exists(_ % a == 0)\n            if (isPrime) {\n\
    \                val isMultiplyPrime = primes.exists(_ * a % _ == 0)\n       \
    \         if (isMultiplyPrime) {\n                    true\n                }\
    \ else {\n                    false\n                }\n            } else {\n\
    \                false\n            }\n        } else {\n            false\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdgpcaubu.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaq7g185v.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu3tyadym.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isMultiplyPrime = a % primes.head == 0\n      \
    \  primes.dropWhile(p => a % p == 0).takeWhile(p => a % p == 0).forall(p => isMultiplyPrime)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmrcrye3f.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            val isPrime = primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2srw40qs.scala:16:4 ----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2srw40qs.scala:31:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m31 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp2srw40qs.scala:11:21 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2srw40qs.scala:30:1\
    \ ---------------------\e[0m\e[0m\n\e[31m30 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmp2srw40qs.scala:17:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m17 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n4 errors found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0)\n        primes.takeWhile(p => a % p\
    \ != 0).forall(p => a % p == 0)\n        isPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxqgg80g.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val factors = mutable.ArrayBuffer(2,\
    \ 3)\n        val isPrime = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false, true)\n   \
    \     val isMultiplyPrime4 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false, true)\n   \
    \     val isMultiplyPrime8 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false, true)\n  \
    \      val isMultiplyPrime12 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false, true)\n  \
    \      val isMultiplyPrime16 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false, true)\n  \
    \      val isMultiplyPrime20 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false, true)\n  \
    \      val isMultiplyPrime24 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ true)\n        val isMultiplyPrime27 = mutable.ArrayBuffer(false, true)\n  \
    \      val isMultiplyPrime28 = mutable.ArrayBuffer(false, true)\n        val isMultiplyPrime29\
    \ = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4wf3b7h7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp4wf3b7h7.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e\
    [0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e\
    [31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e\
    [0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m,\
    \ \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e\
    [31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4wf3b7h7.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp4wf3b7h7.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e\
    [0m, \e[31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp4wf3b7h7.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m                      \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                              Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanat"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val is\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplj_97cwu.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj_97cwu.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj_97cwu.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj_97cwu.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj_97cwu.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj_97cwu.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer expl"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count\n        val isPrime = a % primes.head == 0\n        val isMultiplyPrime\
    \ = primes.takeWhile(p => p < a).forall(p => a % p == 0)\n        primesCount\
    \ - isPrime - isMultiplyPrime == 0\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2jo0kwt9.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count\n        val isMultiplyPrime = a % primesCount == 0\n       \
    \ primes.clear()\n        return isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbiozly_f.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaq7g185v.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime27 = mutable.ArrayBuffer.empty\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7jff1vud.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp7jff1vud.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7jff1vud.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp7jff1vud.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7jff1vud.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count\n        val isPrime = a % primes.head == 0\n        val isMultiplyPrime\
    \ = primes.takeWhile(p => isPrime && a % p == 0).length == primesCount\n     \
    \   isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn02sjsmx.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount <= 100\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmns1vjnd.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpci6unrj1.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpci6unrj1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpci6unrj1.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu75i6tta.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primesCount = mutable.ListBuffer[Long]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount3 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount7 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount11 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount15 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount19 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount23 = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimeCount24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPri\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptpzur_nk.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptpzur_nk.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptpzur_nk.scala:12:26\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmptpzur_nk.scala:13:30 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptpzur_nk.scala:14:35 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimeCount\e[0m\
    \ = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmptpzur_nk.scala:15:36 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrimeCount2\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     primes.drop(primesCount - 1).forall(x => a % x.equals(0))\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpry1pl1kn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.exists(primesSet.contains(_))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpenmk2dv2.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val factors = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primeFactors = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val factorsCount = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primeFactorsCount = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primeFactorsCount2 = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val\
    \ primeFactorsCount3 = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primeFactorsCount4\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primeFactorsCount5 = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primeFactorsCount6 = mutable.ArrayBuffer(2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97)\n        val primeFactorsCount7 = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primeFactorsCount8 = mutable.ArrayBuffer(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, \n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcblf692w.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcblf692w.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcblf692w.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcblf692w.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e\
    [0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m,\
    \ \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e\
    [31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e\
    [0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m,\
    \ \e"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipow8l9p.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.head == 0\n        primes.dropWhile(p\
    \ => a % p == 0).takeWhile(p => a % p == 0).forall {\n            p =>\n     \
    \           primesCount != primes.takeWhile(p => a % p == 0).size &&\n       \
    \         primesCount != primes.takeWhile(p => a % p == 0).takeWhile(p => a %\
    \ p == 0).size &&\n                primesCount != primes.takeWhile(p => a % p\
    \ == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).size &&\n      \
    \          primesCount != primes.takeWhile(p => a % p == 0).takeWhile(p => a %\
    \ p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).size &&\n    \
    \            primesCount != primes.takeWhile(p => a % p == 0).takeWhile(p => a\
    \ % p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).size &&\n                primesCount != primes.takeWhile(p =>\
    \ a % p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).size &&\n\
    \                primesCount != primes.takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).takeWhile(p => a % p == 0).size &&\n                primesCount\
    \ != primes.takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p => a % p == 0).takeWhile(p\
    \ => a % p == 0).size &&\n                primesCount != prime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpglfttkz_.scala:40:0 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpglfttkz_.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpglfttkz_.scala:39:1 ---------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:\
    \    Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[33m\e[33m--\
    \ Warning: /tmp/tmpglfttkz_.scala:26:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m26 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n3 errors found\n"
  stdout: ''
  timestamp: 1659794200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes(primesCount) == 0 &&\
    \ a.productIterator.forall(x => primes.contains(x))\n        primesCount match\
    \ {\n            case 0 => isMultiplyPrime\n            case _ => isMultiplyPrime\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt4kt93gx.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg2bgo5dk.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        if (primesCount < 3) {\n            return false\n\
    \        }\n        val isPrime = primes.exists(_ % _ == 0)\n        if (isPrime)\
    \ {\n            return true\n        }\n        val isMultiplyPrime = primes.exists(_\
    \ * _ == a)\n        if (isMultiplyPrime) {\n            return true\n       \
    \ }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplskh5fpd.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(_\
    \ < a).forall(x => a % x == 0)\n        primes.takeWhile(_ < a).forall(x => a\
    \ % x == 0) && isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwnxzpyee.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isNotMultiplyPrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime2 = mutable.Set[Long]()\n\
    \        val isNotMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isNotMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isNotMultiplyPrime4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime5 = mutable.Set[Long]()\n\
    \        val isNotMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isNotMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isNotMultiplyPrime7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime8 = mutable.Set[Long]()\n\
    \        val isNotMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isNotMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isNotMultiplyPrime10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime11 = mutable.Set[Long]()\n\
    \        val isNotMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isNotMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isNotMultiplyPrime13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime14 = mutable.Set[Long]()\n\
    \        val isNotMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3jll0ly6.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jll0ly6.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jll0ly6.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jll0ly6.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp3jll0ly6.scala:14:33 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misNotMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3jll0ly6.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not foun"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val n = a\n        for(i <-\
    \ 2 to n by 2){\n            if(n%i==0){\n                primes += i\n      \
    \      }\n        }\n        primes.contains(a) || primes.contains(n-1)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmgxx6643.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmgxx6643.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a <= 100\n        val isMultiplyPrime2\
    \ = a % primes(primesCount - 1) != 0\n        val isMultiplyPrime3 = a % primes(primesCount\
    \ - 2) == 0\n        val isMultiplyPrime4 = a % primes(primesCount - 3) == 0\n\
    \        val isMultiplyPrime5 = a % primes(primesCount - 4) == 0\n        val\
    \ isMultiplyPrime6 = a % primes(primesCount - 5) == 0\n        val isMultiplyPrime7\
    \ = a % primes(primesCount - 6) == 0\n        val isMultiplyPrime8 = a % primes(primesCount\
    \ - 7) == 0\n        val isMultiplyPrime9 = a % primes(primesCount - 8) == 0\n\
    \        val isMultiplyPrime10 = a % primes(primesCount - 9) == 0\n        val\
    \ isMultiplyPrime11 = a % primes(primesCount - 10) == 0\n        val isMultiplyPrime12\
    \ = a % primes(primesCount - 11) == 0\n        val isMultiplyPrime13 = a % primes(primesCount\
    \ - 12) == 0\n        val isMultiplyPrime14 = a % primes(primesCount - 13) ==\
    \ 0\n        val isMultiplyPrime15 = a % primes(primesCount - 14) == 0\n     \
    \   val isMultiplyPrime16 = a % primes(primesCount - 15) == 0\n        val isMultiplyPrime17\
    \ = a % primes(primesCount - 16) == 0\n        val isMultiplyPrime18 = a % primes(primesCount\
    \ - 17) == 0\n        val isMultiplyPrime19 = a % primes(primesCount - 18) ==\
    \ 0\n        val isMultiplyPrime20 = a % primes(primesCount - 19) == 0\n     \
    \   val isMultiplyPrime21 = a % primes(primesCount - 20) == 0\n        val isMultiplyPrime22\
    \ = a % primes(primesCount - 21) == 0\n        val isMultiplyPrime23 = a % primes(primesCount\
    \ - 22) == 0\n        val isMultiplyPrime24 = a % primes(primesCount - 23) ==\
    \ 0\n        \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc95g8wcz.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc95g8wcz.scala:38:5\
    \ ---------------------\e[0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            val isPrime = primes.takeWhile(p =>\
    \ a % p == 0).length == primesCount\n            if (isPrime) {\n            \
    \    val isMultiplyPrime = primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0)\n                if (isMultiplyPrime) {\n                    return true\n\
    \                }\n            }\n        }\n        return false\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8era5h49.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Boolean]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2bkcm59m.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2bkcm59m.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2bkcm59m.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2bkcm59m.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2bkcm59m.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2bkcm59m.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.exists(x => x == a)\n\
    \        if (isMultiplyPrime) {\n            primes.takeWhile(x => x <= a).forall(x\
    \ => a % x == 0)\n        } else {\n            false\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7swt6hts.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = a % primes.head == 0\n        val isMultiplyPrime\
    \ = primes.takeWhile(p => a % p == 0).size == primesCount\n        isPrime &&\
    \ isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn9tykgc0.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isPrime = a % primes.toSet.size == 0\n        val\
    \ isMultiplyPrime = primes.toSet.forall(x => a % x == 0)\n        isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj_qkcr_j.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqt3fneqf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu3tyadym.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu75i6tta.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n        val isPrimePrimePrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n   \
    \     val isPrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n   \
    \     val isPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrimePrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvpb1gxbf.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvpb1gxbf.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvpb1gxbf.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvpb1gxbf.scala:12:26\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvpb1gxbf.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpvpb1gxbf.scala:14:27 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m     "
  stdout: ''
  timestamp: 1659794203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        for(i <- 2 to a/2) {\n    \
    \        if(a%i == 0) {\n                primes += i\n            }\n        }\n\
    \        primes.forall(x => a % x == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj35o0r6q.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj35o0r6q.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to a/\e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m \
    \                     Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount = primes.count(_\
    \ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdblwxb2n.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaq7g185v.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            val isPrime = primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a % p.equals(0)).forall(p\
    \ => primes.takeWhile(p => a % p.equals(0)).forall(p => primes.takeWhile(p =>\
    \ a % p.equals(0)).forall(p => primes.takeWhile(p => a \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2srw40qs.scala:16:4 ----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2srw40qs.scala:31:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m31 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp2srw40qs.scala:11:21 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2srw40qs.scala:30:1\
    \ ---------------------\e[0m\e[0m\n\e[31m30 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmp2srw40qs.scala:17:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m17 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n4 errors found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isPrime = a % primes.toSet.size == 0\n        if (isPrime)\
    \ {\n            val isMultiplyPrime = primes.exists(x => a % x == 0)\n      \
    \      return isMultiplyPrime\n        }\n        return false\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwryd2zmx.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplication = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplying = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMulti\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcg4l39vh.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcg4l39vh.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcg4l39vh.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpcg4l39vh.scala:13:31 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplication\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpcg4l39vh.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplying\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpcg4l39vh.scala:15:33 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0"
  stdout: ''
  timestamp: 1659794203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isPrimeSet2 = mutable.Set[Long]()\n        val isPrimeSet3 = mutable.Set[Long]()\n\
    \        val isPrimeSet4 = mutable.Set[Long]()\n        val isPrimeSet5 = mutable.Set[Long]()\n\
    \        val isPrimeSet6 = mutable.Set[Long]()\n        val isPrimeSet7 = mutable.Set[Long]()\n\
    \        val isPrimeSet8 = mutable.Set[Long]()\n        val isPrimeSet9 = mutable.Set[Long]()\n\
    \        val isPrimeSet10 = mutable.Set[Long]()\n        val isPrimeSet11 = mutable.Set[Long]()\n\
    \        val isPrimeSet12 = mutable.Set[Long]()\n        val isPrimeSet13 = mutable.Set[Long]()\n\
    \        val isPrimeSet14 = mutable.Set[Long]()\n        val isPrimeSet15 = mutable.Set[Long]()\n\
    \        val isPrimeSet16 = mutable.Set[Long]()\n        val isPrimeSet17 = mutable.Set[Long]()\n\
    \        val isPrimeSet18 = mutable.Set[Long]()\n        val isPrimeSet19 = mutable.Set[Long]()\n\
    \        val isPrimeSet20 = mutable.Set[Long]()\n        val isPrimeSet21 = mutable.Set[Long]()\n\
    \        val isPrimeSet22 = mutable.Set[Long]()\n        val isPrimeSet23 = mutable.Set[Long]()\n\
    \        val isPrimeSet24 = mutable.Set[Long]()\n        val isPrimeSet25 = mutable.Set[Long]()\n\
    \        val isPrimeSet26 = mutable.Set[Long]()\n        val isPrimeSet27 = mutable.Set[Long]()\n\
    \        val isPrimeSet28 = mutable.Set[Long]()\n        val isPrimeSet29 = mutable.Set[Long]()\n\
    \        val isPrimeSet30 = mutable.Set[Long]()\n        val isPri\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfjngzx8a.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfjngzx8a.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p\
    \ => a % p != 0).forall(p => a % p == 0)\n        return isPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcssbvaez.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) // count how many primes less than a\n        primesCount\
    \ <= 3 // if there are less than 3 primes, return false\n        primes.takeWhile(_\
    \ < a).forall(a % _ == 0) // if there are not prime numbers less than a, return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_j1hz95.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.exists(primesSet.contains(_))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpenmk2dv2.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime = primes.exists(a % _ == 0)\n       \
    \ val isMultiplyPrime2 = primes.exists(a % _ == 0)\n        val isMultiplyPrime3\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime4 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime5 = primes.exists(a % _ == 0)\n      \
    \  val isMultiplyPrime6 = primes.exists(a % _ == 0)\n        val isMultiplyPrime7\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime8 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime9 = primes.exists(a % _ == 0)\n      \
    \  val isMultiplyPrime10 = primes.exists(a % _ == 0)\n        val isMultiplyPrime11\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime12 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime13 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime14 = primes.exists(a % _ == 0)\n        val isMultiplyPrime15\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime16 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime17 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime18 = primes.exists(a % _ == 0)\n        val isMultiplyPrime19\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime20 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime21 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime22 = primes.exists(a % _ == 0)\n        val isMultiplyPrime23\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime24 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime25 = primes.exists(a % _ == 0)\n     \
    \   val isMultiplyPrime26 = primes.exists(a % _ == 0)\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwpyc4_s_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwpyc4_s_.scala:40:5\
    \ ---------------------\e[0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer.empty[Long]\n        val primesCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrimeCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount2 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isMultiplyPrimeCount3 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount4\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount5 = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount6 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isMultiplyPrimeCount7 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount10 = mutable.ArrayBuffer.empty[Int]\n       \
    \ val isMultiplyPrimeCount11 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount12\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount13 = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount14 = mutable.ArrayBuffer.empty[Int]\n       \
    \ val isMultiplyPrimeCount15 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount16\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount17 = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount18 = mutable.ArrayBuffer.empty[Int]\n       \
    \ val isMultiplyPrimeCount19 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val isMultiplyPrimeCount22 = mutable.ArrayBuffer.empty[Int]\n       \
    \ val isMultiplyPrimeCount23 = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount24\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isMultiplyPrimeCount25 = \n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq_z40lq5.scala:39:36 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimeCount25\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                    expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_z40lq5.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_z40lq5.scala:12:26\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpq_z40lq5.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpq_z40lq5.scala:14:30 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_z40lq5."
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val factors = mutable.ArrayBuffer(2,\
    \ 3)\n        val isPrime = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false)\n \
    \       val isMultiplyPrime4 = mutable.ArrayBuffer(false, false)\n        val\
    \ isMultiplyPrime5 = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime6\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false)\n \
    \       val isMultiplyPrime9 = mutable.ArrayBuffer(false, false)\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false)\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false)\n        val\
    \ isMultiplyPrime20 = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false)\n        val\
    \ isMultiplyPrime25 = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(false, false)\n        val isMultiplyPrime27 = mutable.ArrayBuffer(false,\
    \ false)\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq4s3o9iq.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq4s3o9iq.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpq4s3o9iq.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq4s3o9iq.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                              Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq4s3o9iq.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime2"
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.filter(_ < a).length\n        val isMultiplyPrime = primes.filter(_\
    \ < a).forall(x => a % x == 0)\n        primesCount < 3 && isMultiplyPrime\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp90r805dt.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isPrime = primes.forall(p => a % p == 0)\n       \
    \ val isMultiplyPrime = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p != 0)))\n        val isMultiplyPrime2 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0)))\n        val isMultiplyPrime3 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime4 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime5 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime6 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime7 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime8 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime9 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime10 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime11 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime12 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime13 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime14 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiplyPrime15 = primes.forall(p => primesSet.subsetOf(primes.filter(_\
    \ % p == 0))) \n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpc12by_p0.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc12by_p0.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpc12by_p0.scala:30:5 ---------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.head == 0\n        if(isMultiplyPrime)\
    \ {\n            val isMultiplyPrime2 = a % primes.tail.head == 0\n          \
    \  if(isMultiplyPrime2) {\n                val isMultiplyPrime3 = a % primes.tail.tail.head\
    \ == 0\n                if(isMultiplyPrime3) {\n                    val isMultiplyPrime4\
    \ = a % primes.tail.tail.tail.head == 0\n                    if(isMultiplyPrime4)\
    \ {\n                        val isMultiplyPrime5 = a % primes.tail.tail.tail.tail.head\
    \ == 0\n                        if(isMultiplyPrime5) {\n                     \
    \       val isMultiplyPrime6 = a % primes.tail.tail.tail.tail.tail.head == 0\n\
    \                            if(isMultiplyPrime6) {\n                        \
    \        val isMultiplyPrime7 = a % primes.tail.tail.tail.tail.tail.tail.head\
    \ == 0\n                                if(isMultiplyPrime7) {\n             \
    \                       val isMultiplyPrime8 = a % primes.tail.tail.tail.tail.tail.tail.tail.head\
    \ == 0\n                                    if(isMultiplyPrime8) {\n         \
    \                               val isMultiplyPrime9 = a % primes.tail.tail.tail.tail.tail.tail.tail.tail.head\
    \ == 0\n                                        if(isMultiplyPrime9) {\n     \
    \                                       val isMultiplyPrime10 = a % primes.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\
    \ == 0\n                                            if(isMultiplyPrime10) {\n\
    \                                                val isMultiplyPrime11 = a % primes.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\
    \ == 0\n                                                if(isMultiplyPrime11)\
    \ {\n                                                    val isMultiplyPrime12\
    \ = a % primes.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head ==\
    \ 0\n                                                    if(isMultiplyPrime12)\
    \ {\n                                                        val isMultiplyPrime13\
    \ = a % primes.tail.tail.tail.tail.tail.tail.tail\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp250gz4an.scala:53:0 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp250gz4an.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp250gz4an.scala:14:8 ---------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mif\e[0m(isMultiplyPrime) {\n\e[31m\e[31m\
    \   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e\
    [0m        Required: Boolean\n\e[31m   |\e[0m        Maybe you are missing an\
    \ else part for the conditional?\n\e[31m15 |\e[0m            \e[33mval\e[0m \e\
    [36misMultiplyPrime2\e[0m = a % primes.tail.head == \e[31m0\e[0m\n\e[31m16 |\e\
    [0m            \e[33mif\e[0m(isMultiplyPrime2) {\n\e[31m17 |\e[0m            \
    \    \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m = a % primes.tail.tail.head ==\
    \ \e[31m0\e[0m\n\e[31m18 |\e[0m                \e[33mif\e[0m(isMultiplyPrime3)\
    \ {\n\e[31m19 |\e[0m                    \e[33mval\e[0m \e[36misMultiplyPrime4\e\
    [0m = a % primes.tail.tail.tail.head == \e[31m0\e[0m\n\e[31m20 |\e[0m        \
    \            \e[33mif\e[0m(isMultiplyPrime4) {\n\e[31m21 |\e[0m              \
    \          \e[33mval\e[0m \e[36misMultiplyPrime5\e[0m = a % primes.tail.tail.tail.tail.head\
    \ == \e[31m0\e[0m\n\e[31m22 |\e[0m                        \e[33mif\e[0m(isMultiplyPrime5)\
    \ {\n\e[31m23 |\e[0m                            \e[33mval\e[0m \e[36misMultiplyPrime6\e\
    [0m = a % primes.tail.tail.tail.tail.tail.head == \e[31m0\e[0m\n\e[31"
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a <= 100\n        val isMultiplyPrime2\
    \ = a % primesCount != 0\n        val isMultiplyPrime3 = primes.contains(a)\n\
    \        val isMultiplyPrime4 = primes.contains(a+1)\n        val isMultiplyPrime5\
    \ = primes.contains(a+2)\n        val isMultiplyPrime6 = primes.contains(a+3)\n\
    \        val isMultiplyPrime7 = primes.contains(a+4)\n        val isMultiplyPrime8\
    \ = primes.contains(a+5)\n        val isMultiplyPrime9 = primes.contains(a+6)\n\
    \        val isMultiplyPrime10 = primes.contains(a+7)\n        val isMultiplyPrime11\
    \ = primes.contains(a+8)\n        val isMultiplyPrime12 = primes.contains(a+9)\n\
    \        val isMultiplyPrime13 = primes.contains(a+10)\n        val isMultiplyPrime14\
    \ = primes.contains(a+11)\n        val isMultiplyPrime15 = primes.contains(a+12)\n\
    \        val isMultiplyPrime16 = primes.contains(a+13)\n        val isMultiplyPrime17\
    \ = primes.contains(a+14)\n        val isMultiplyPrime18 = primes.contains(a+15)\n\
    \        val isMultiplyPrime19 = primes.contains(a+16)\n        val isMultiplyPrime20\
    \ = primes.contains(a+17)\n        val isMultiplyPrime21 = primes.contains(a+18)\n\
    \        val isMultiplyPrime22 = primes.contains(a+19)\n        val isMultiplyPrime23\
    \ = primes.contains(a+20)\n        val isMultiplyPrime24 = primes.contains(a+21)\n\
    \        val isMultiplyPrime25 = primes.contains(a+22)\n        val isMultiplyPrime26\
    \ = primes.contains(a+23)\n        val isMultiplyPrime27 = primes.contains(a+24)\n\
    \        val isMultiplyPrime28 = primes.contains(a+25)\n        val isMultiplyPrime29\
    \ = primes.contains(a+26)\n        val isMultiplyPrime30 = primes.contains(a+27)\n\
    \        val isMultiplyPrime31 = primes.contains(a+28)\n        val isMultiplyPri\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpm720mjil.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm720mjil.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpm720mjil.scala:45:5 ---------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu75i6tta.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_lp3573.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactors = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimes = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactorsPrimesAndPrimesPrimes = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimes = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimes = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimes = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp059jw83k.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp059jw83k.scala:28:12 ---------------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\e\
    [0m = mutable.\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  isMultiplyPrimeFactorsPrimesAndPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp059jw83k.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp059jw83k.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp059jw83k.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                 "
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a).filter(_ > 0).length\n        val isMultiplyPrime = primes.count(_\
    \ < a).filter(_ > 0).forall(x => a % x == 0)\n        primesCount < 3 && isMultiplyPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck563vgi.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_q2azpw.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpci6unrj1.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpci6unrj1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpci6unrj1.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primesCount = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isMultiplyPrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isMultiplyPrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy133m2ag.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpy133m2ag.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrime is already defined as \e[33mvalue\e\
    [0m \e[35misMultiplyPrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy133m2ag.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpy133m2ag.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ListBuffer[\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvalue\e[0m \e[35misMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpy"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipow8l9p.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val result = primes.filter(_\
    \ < a).filter(_ > 2).filter(_ % _ == 0)\n        result.size == 3\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp76clydap.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjqyt4pji.scala:39:11 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjqyt4pji.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ArrayBuffer(\e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount <= 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_lp3573.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpci6unrj1.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpci6unrj1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpci6unrj1.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm3tv2_k0.scala:42:31 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m\
    \                               expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3tv2_k0.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3tv2_k0.scala:12:27\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpm3tv2_k0.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpm3tv2_k0.scala:14:30 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3tv2_k0.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m "
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk2s1qn3a.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:13:30\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpk2s1qn3a.scala:14:31 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2s1qn3a.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime3\e[0m =\
    \ mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mut"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = a <= 100\n        val isMultiplyPrime =\
    \ primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime2\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime3\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime4\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime5\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime6\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime7\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime8\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime9\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime10\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime11\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime12\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime13\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime14\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime15\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime16\
    \ = primes.takeWhile(_ < a).forall(x => a % x != 0)\n        val isMultiplyPrime17\
    \ = primes.takeWhile(_ < a).forall(x => a % x == 0)\n        val isMultiplyPrime18\
    \ = primes.takeWhile(_ < \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp97uh_etv.scala:31:52 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime18\e[0m =\
    \ primes.takeWhile(_ < \n\e[31m\e[31m   |\e[0m                               \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp97uh_etv.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp97uh_etv.scala:32:5\
    \ ---------------------\e[0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isMultiplyPrime = a % primes(primesCount) == 0\n\
    \        primesCount -= 1\n        primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpls15rc_w.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.toSet.size == 0\n   \
    \     primes.toSet.forall(x => a % x == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp447i4sv8.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg2bgo5dk.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime = a % 3 == 0 && !isPrime\n        return\
    \ isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_bqmxnuc.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val factors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpabjc931j.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabjc931j.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabjc931j.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabjc931j.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabjc931j.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpabjc931j.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            "
  stdout: ''
  timestamp: 1659794207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.exists(_ == a)\n   \
    \     if (isMultiplyPrime) {\n            true\n        } else {\n           \
    \ false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp048ewwod.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        isPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppkkej4i9.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a <= 100\n        if (isMultiplyPrime)\
    \ {\n            val isPrime = primes.exists(a % _ == 0)\n            if (isPrime)\
    \ {\n                val isMultiplyPrime = primes.exists(a % _ == 0)\n       \
    \         if (isMultiplyPrime) {\n                    val isMultiplyPrime = primes.exists(a\
    \ % _ == 0)\n                    if (isMultiplyPrime) {\n                    \
    \    val isMultiplyPrime = primes.exists(a % _ == 0)\n                       \
    \ if (isMultiplyPrime) {\n                            val isMultiplyPrime = primes.exists(a\
    \ % _ == 0)\n                            if (isMultiplyPrime) {\n            \
    \                    val isMultiplyPrime = primes.exists(a % _ == 0)\n       \
    \                         if (isMultiplyPrime) {\n                           \
    \         val isMultiplyPrime = primes.exists(a % _ == 0)\n                  \
    \                  if (isMultiplyPrime) {\n                                  \
    \      val isMultiplyPrime = primes.exists(a % _ == 0)\n                     \
    \                   if (isMultiplyPrime) {\n                                 \
    \           val isMultiplyPrime = primes.exists(a % _ == 0)\n                \
    \                            if (isMultiplyPrime) {\n                        \
    \                        val isMultiplyPrime = primes.exists(a % _ == 0)\n   \
    \                                             if (isMultiplyPrime) {\n       \
    \                                             val isMultiplyPrime = primes.exists(a\
    \ % _ == 0)\n                                                    if (isMultiplyPrime)\
    \ {\n                                                        val isMultiplyPrime\
    \ = primes.exists(a % _ == 0)\n                                              \
    \          if (isMultiplyPrime) {\n                                          \
    \                  val isMultiplyPrime = primes.exists(a % _ == 0)\n         \
    \                                                   if (isMultiplyPrime) {\n \
    \                                                               val isMultiplyPrime\
    \ = primes.exists(a % _ == 0)\n                                              \
    \                  if (isMultiplyPrime) {\n                                  \
    \                                  val isMultiplyPrime = primes.exists(a % _ ==\
    \ 0)\n                                                                    if (isMultiplyPrime)\
    \ {\n                                                                        val\
    \ isMultiplyPrime = primes.exists(a % _ == 0)\n                              \
    \                                          if (isMultiplyPrime) {\n          \
    \                                                                  val isMultiplyPrime\
    \ = primes.exists(a % _ == 0)\n                                              \
    \                              if (isMultiplyPrime) {\n                      \
    \                                                          val isMultiplyPri\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeudio_y0.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeudio_y0.scala:65:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m65 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpeudio_y0.scala:11:21 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmpeudio_y0.scala:51:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m51 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isMultiplyPrime = a % primes(primesCount - 1) !=\
    \ 0\n        primes.drop(primesCount - 1).foreach(prime => {\n            if (a\
    \ % prime == 0) {\n                isMultiplyPrime = false\n            }\n  \
    \      })\n        isMultiplyPrime\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp09lfnq9c.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_e7s376b.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e7s376b.scala:15:30\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659794193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.length\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpci6unrj1.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpci6unrj1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpci6unrj1.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjl4nstf.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val factors = mutable.ListBuffer()\n\
    \        val isPrime = mutable.ListBuffer()\n        val isMultiplyPrime = mutable.ListBuffer()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime4 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime7 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime10 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime13 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime16 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime19 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime22 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime25 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime28 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime29 = mutable.ListBuffer()\n        val isMultiplyPrime30\
    \ = mutable.ListBuffer()\n        val isMultiplyPrime31 = mutable.ListBuffer()\n\
    \        val isMultiplyPrime32 = mutable.ListBuffer()\n        val isMultiplyPrime33\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzpy42h7d.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzpy42h7d.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer()\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzpy42h7d.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer()\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzpy42h7d.scala:14:30\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime\e[0m = mutable.ListBuffer()\n\e[31m\e[31m   |\e[0m       \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpzpy42h7d.scala:15:31 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m = mutable.ListBuffer()\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                               Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzpy42h7d.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m       "
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isMultiplyPrime\
    \ = a % primes.forall(p => a % p == 0)\n        isMultiplyPrime\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37uvckbw.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794206
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaq7g185v.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaq7g185v.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a <= 100\n        val isMultiplyPrime2\
    \ = a % primesCount != 0\n        val isMultiplyPrime3 = primes.contains(a)\n\
    \        val isMultiplyPrime4 = primes.take(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime5 = primes.takeRight(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime6 = primes.takeRight(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime7 = primes.takeRight(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime8 = primes.takeRight(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime9 = primes.takeRight(a).forall(x => a % x == 0)\n     \
    \   val isMultiplyPrime10 = primes.takeRight(a).forall(x => a % x == 0)\n    \
    \    val isMultiplyPrime11 = primes.takeRight(a).forall(x => a % x == 0)\n   \
    \     val isMultiplyPrime12 = primes.takeRight(a).forall(x => a % x == 0)\n  \
    \      val isMultiplyPrime13 = primes.takeRight(a).forall(x => a % x == 0)\n \
    \       val isMultiplyPrime14 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime15 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime16 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime17 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime18 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime19 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime20 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \        val isMultiplyPrime21 = primes.takeRight(a).forall(x => a % x == 0)\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzgngeis_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzgngeis_.scala:35:5\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        for(i <- 2 to Math.sqrt(a))\
    \ {\n            if(a%i == 0) {\n                primes += i\n            }\n\
    \        }\n        primes.size == 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpiat7oy.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpkpiat7oy.scala:12:31 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to Math.sqrt(a))\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Double\n\e[31m   |\e[0m                   \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPri\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprymuvbag.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprymuvbag.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprymuvbag.scala:12:27\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmprymuvbag.scala:13:30 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.Set[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmprymuvbag.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprymuvbag.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m  \
    \ |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \            "
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesSet = primes.toSet\n\
    \        val isMultiplyPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        return isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6jqzys_m.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val result = mutable.ArrayBuffer(a)\n\
    \        val isPrime = mutable.ArrayBuffer(true)\n        val isMultiply = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(true)\n        val isMultiplyPrime2\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime14\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime26\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime27 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime28 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime29\
    \ = mutable.ArrayBuffer(true)\n        val isMultiplyPrime30 = mutable.ArrayBuffer(true)\n\
    \        val isMultiplyPrime31 = mutable.ArrayBuffer(true)\n        val isMultiplyPrime32\
    \ = mutable.ArrayBuffer(true)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplt1_h31.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplt1_h31.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ArrayBuffer(a)\n\e[31m\e[31m   |\e[0m              \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplt1_h31.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer(\e[31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplt1_h31.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiply\e[0m = mutable.ArrayBuffer(\e[31mtrue\e[0m)\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpplt1_h31.scala:15:30 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                              Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplt1_h31.scala:16:31 ------------------------\e\
    [0m\e"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.filter(_ < a).length\n        val isMultiplyPrime = primes.takeWhile(_\
    \ < a).forall(a % _ == 0)\n        primesCount == isMultiplyPrime\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21difv91.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj9mmll4t.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpj9mmll4t.scala:11:21 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpj9mmll4t.scala:12:27 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9mmll4t.scala:15:31 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659794202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val factors = mutable.ListBuffer(2,\
    \ 3)\n        val primeFactors = mutable.ListBuffer()\n        val isMultiplyPrime\
    \ = true\n        for (prime <- primes) {\n            if (a % prime == 0) {\n\
    \                isMultiplyPrime = false\n                break\n            }\n\
    \        }\n        for (factor <- factors) {\n            if (a % factor == 0)\
    \ {\n                primeFactors += factor\n            }\n        }\n      \
    \  for (prime <- primeFactors) {\n            if (a % prime == 0) {\n        \
    \        isMultiplyPrime = false\n                break\n            }\n     \
    \   }\n        return isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgeins7dp.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgeins7dp.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer(\e[31m2\e[0m, \e[31m3\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpgeins7dp.scala:13:27 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ListBuffer()\n\e[31m\e\
    [31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = a % primes(primesCount - 1) > 0\n     \
    \   primes.takeWhile(p => a % p > 0).forall(p => a % p > 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvem368y0.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4suyp0qn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:14:31 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misMultiplyPrime2\e[0m =\
    \ mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z6y7izn.scala:15:31\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36misMultiplyPrime3\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3z6y7i"
  stdout: ''
  timestamp: 1659794198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val factors = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val factorsCount\
    \ = factors.size\n        val isMultiplyPrime = a <= 100\n        if(isMultiplyPrime)\
    \ {\n            for(i <- 0 until primesCount) {\n                for(j <- 0 until\
    \ factorsCount) {\n                    if((a % primes(i) == 0) || (a % factors(j)\
    \ == 0)) {\n                        isMultiplyPrime = false\n                \
    \        break\n                    }\n                }\n            }\n    \
    \    }\n        return isMultiplyPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi60ay2dw.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi60ay2dw.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpi60ay2dw.scala:20:40 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                        isMultiplyPrime = \e[31mfalse\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Reassignment to val isMultiplyPrime\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi60ay2dw.scala:21:24\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                        break\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                   Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m l"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count\n        val isMultiplyPrime = a % primes.head == 0\n       \
    \ if(isMultiplyPrime) {\n            val isPrime = primes.takeWhile(p => a % p\
    \ == 0).length == primesCount\n            if(isPrime) {\n                val\
    \ isMultiplyPrime = primes.takeWhile(p => a % p == 0).forall(p => a % p == 0)\n\
    \                if(isMultiplyPrime) {\n                    true\n           \
    \     } else {\n                    false\n                }\n            } else\
    \ {\n                false\n            }\n        } else {\n            false\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzh2r7mtn.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) ==\
    \ (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg2bgo5dk.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpg2bgo5dk.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n    assert(isMultiplyPrime((30l))\
    \ == (true));\n    assert(isMultiplyPrime((8l)) == (true));\n    assert(isMultiplyPrime((10l))\
    \ == (false));\n    assert(isMultiplyPrime((125l)) == (true));\n    assert(isMultiplyPrime((105l))\
    \ == (true));\n    assert(isMultiplyPrime((126l)) == (false));\n    assert(isMultiplyPrime((729l))\
    \ == (false));\n    assert(isMultiplyPrime((891l)) == (false));\n    assert(isMultiplyPrime((1001l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwvta87l_.scala:46:11 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwvta87l_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwvta87l_.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, \n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l)) == (false));\n\
    \    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi2dbuhdn.scala:13:4 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m,\
    \ \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e[0m, \e[31m17\e[0m, \e[31m19\e[0m, \e\
    [31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m, \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e\
    [0m, \e[31m47\e[0m, \e[31m53\e[0m, \e[31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m,\
    \ \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e[0m, \e[31m83\e[0m, \e[31m89\e[0m, \e\
    [31m97\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpi2dbuhdn.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e\
    [31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e\
    [0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfalse\e[0m, \e[31mfals"
  stdout: ''
  timestamp: 1659794194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is\
    \ less then 100. \n    // Example:\n    // is_multiply_prime(30) == True\n   \
    \ // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet =\
    \ primes.toSet\n        val isMultiplyPrime = a % primes.forall(p => primesSet.contains(p))\n\
    \        isMultiplyPrime\n    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
    \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
    \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
    \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
    \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
    \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv7rbkejh.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m, \e[31m5\e[0m, \e[31m7\e[0m, \e[31m11\e[0m, \e[31m13\e\
    [0m, \e[31m17\e[0m, \e[31m19\e[0m, \e[31m23\e[0m, \e[31m29\e[0m, \e[31m31\e[0m,\
    \ \e[31m37\e[0m, \e[31m41\e[0m, \e[31m43\e[0m, \e[31m47\e[0m, \e[31m53\e[0m, \e\
    [31m59\e[0m, \e[31m61\e[0m, \e[31m67\e[0m, \e[31m71\e[0m, \e[31m73\e[0m, \e[31m79\e\
    [0m, \e[31m83\e[0m, \e[31m89\e[0m, \e[31m97\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794208

name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting array, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // arr = [2, 1, 1, 4, 5,\
  \ 8, 2, 3]   \n    // -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n    // -> reverse\
  \ arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n    // return [\"Eight\", \"Five\", \"Four\"\
  , \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    // If the array is empty,\
  \ return an empty array:\n    // arr = []\n    // return []\n    // If the array\
  \ has any strange number ignore it:\n    // arr = [1, -1 , 55] \n    // -> sort\
  \ arr -> [-1, 1, 55]\n    // -> reverse arr -> [55, 1, -1]\n    // return = ['One']\n\
  \    def byLength(arr : List[Long]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: ["        val len = arr.length\n        val ones = arr.filter(_ <= 9).sortBy(_\
    \ - 1).reverse\n        val tens = arr.filter(_ <= 99).sortBy(_ - 10).reverse\n\
    \        val hundreds = arr.filter(_ <= 999).sortBy(_ - 100).reverse\n       \
    \ val thousands = arr.filter(_ <= 9999).sortBy(_ - 1000).reverse\n        val\
    \ tenThousands = arr.filter(_ <= 999999).sortBy(_ - 10000).reverse\n        val\
    \ oneThousands = arr.filter(_ <= 9999999).sortBy(_ - 100000).reverse\n       \
    \ val oneHundreds = arr.filter(_ <= 999999999).sortBy(_ - 1000000).reverse\n \
    \       val oneThousandThousands = arr.filter(_ <= 99999999999).sortBy(_ - 10000000).reverse\n\
    \        val oneHundredThousands = arr.filter(_ <= 999999999999).sortBy(_ - 10000000)\n\
    \        val oneHundredThousandThousands = arr.filter(_ <= 999999999999999).sortBy(_\
    \ - 100000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 9999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 9999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 99999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 99999999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 999999999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 999999999999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 9999999999999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 9999999999999999999999999999999).sortBy(_\
    \ - 1000000000)\n        val oneHundredThousandThousands = arr.filter(_ <= 99999999999999999999999999999999).sortBy(_\
    \ - ", "        val one = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\")\n        val two = List(\"Ten\", \"\
    Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"\
    Seventeen\", \"Eighteen\", \"Nineteen\")\n        val three = List(\"Twenty\"\
    , \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"\
    )\n        val four = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\")\n        val five = List(\"Ten\", \"Eleven\"\
    , \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\"\
    , \"Eighteen\", \"Nineteen\")\n        val six = List(\"Twenty\", \"Thirty\",\
    \ \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\")\n    \
    \    val seven = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\")\n        val eight = List(\"Ten\", \"Eleven\"\
    , \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\"\
    , \"Eighteen\", \"Nineteen\")\n        val nine = List(\"Twenty\", \"Thirty\"\
    , \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\")\n    \
    \    val ten = List(\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\"\
    , \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\")\n     \
    \   val eleven = List(\"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\"\
    , \"Seventy\", \"Eighty\", \"Ninety\")\n        val twelve = List(\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    )\n        val thirteen = List(\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\",\
    \ \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"\
    )\n        val fourteen = List(\"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"\
    Sixty\", \"Seventy\", \"Eighty\", \"Ninety\")\n        val fifteen = List(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five", "        val result = new mutable.ListBuffer[String]()\n\
    \        val len = arr.length\n        val ones = arr.filter(_ <= 9).sorted\n\
    \        val tens = arr.filter(_ <= 99).sorted\n        val hundreds = arr.filter(_\
    \ <= 999).sorted\n        val thousands = arr.filter(_ <= 9999).sorted\n     \
    \   val tenThousands = arr.filter(_ <= 999999).sorted\n        val oneThousands\
    \ = arr.filter(_ <= 9999999).sorted\n        val tenThousandThousands = arr.filter(_\
    \ <= 999999999).sorted\n        val oneThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousandThousandThousands = arr.filter(_\
    \ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandTh", " \
    \       val ones = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens\
    \ = arr.filter(x => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x\
    \ => x >= 100 && x <= 999).toList\n        val thousands = arr.filter(x => x >=\
    \ 1000 && x <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000\
    \ && x <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000\
    \ && x <= 999999).toList\n        val tenThousandThousands = arr.filter(x => x\
    \ >= 1000000 && x <= 999999999).toList\n        val oneThousandThousands = arr.filter(x\
    \ => x >= 10000000 && x <= 99999999999).toList\n        val tenThousandThousandThousands\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999999).toList\n        val\
    \ oneThousandThousandThousands = arr.filter(x => x >= 1000000000 && x <= 9999999999999).toList\n\
    \        val tenThousandThousandThousandThousands = arr.filter(x => x >= 100000000000\
    \ && x <= 9999999999999).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000000 && x <= 99999999999999).toList\n       \
    \ val tenThousandThousandThousandThousands = arr.filter(x => x >= 1000000000000\
    \ && x <= 99999999999999).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 1000000000000 && x <= 9999999999999).toList\n       \
    \ val tenThousandThousandThousandThousands = arr.filter(x => x >= 100000000000000\
    \ && x <= 9999999999999).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000000000 && x <= 99999999999999).toList\n    \
    \    val tenThousandThousandThousandThousands = arr.filter(x => x >= 10000000000000000\
    \ && x <= 9999999999999).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 10000000000000000 && x <= 99999999999999).toList\n  \
    \      val tenThousandThousandThousandThousands = arr.filter(x => x >= 100000000000000000\
    \ && x <= 9999999999999).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000000000000 && x <= 9999999999999).to", "    \
    \    val ones = arr.filter(x => x <= 9 && x >= 1)\n        val tens = arr.filter(x\
    \ => x <= 99 && x >= 10)\n        val hundreds = arr.filter(x => x <= 999 && x\
    \ >= 100)\n        val thousands = arr.filter(x => x <= 9999 && x >= 1000)\n \
    \       val tenThousands = arr.filter(x => x <= 999999 && x >= 10000)\n      \
    \  val oneThousands = arr.filter(x => x <= 9999999 && x >= 100000)\n        val\
    \ oneHundreds = arr.filter(x => x <= 999999999 && x >= 1000000)\n        val oneThousandThousands\
    \ = arr.filter(x => x <= 99999999999 && x >= 10000000)\n        val oneHundredThousands\
    \ = arr.filter(x => x <= 999999999999 && x >= 100000000)\n        val oneThousandThousandThousands\
    \ = arr.filter(x => x <= 999999999999999 && x >= 1000000000)\n        val oneHundredThousandThousands\
    \ = arr.filter(x => x <= 999999999999999 && x >= 10000000000)\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 9999999999999999999 && x >= 100000000000)\n        val\
    \ oneHundredThousandThousandThousands = arr.filter(x => x <= 999999999999999999\
    \ && x >= 1000000000000)\n        val oneThousandThousandThousandThousands = arr.filter(x\
    \ => x <= 99999999999999999999999 && x >= 10000000000000)\n        val oneHundredThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 999999999999999999999 && x >= 100000000000000) \n   \
    \     val oneThousandThousandThousandThousandThousands = arr.filter(x => x <=\
    \ 99999999999999999999999 && x >= 1000000000000000)\n        val oneHundredThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 999999999999999999999999 && x >= 10000000000000000)\n\
    \        val oneThousandThousandThousandThousandThousands = arr.filter(x => x\
    \ <= 999999999999999999999999999 && x >= 100000000000000000)\n        val oneHundredThousandThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 999999999999999999999999999 && x >= 1000000000000000000)\n\
    \        val oneThousand", "        val ones = arr.filter(x => x < 10).map(x =>\
    \ s\"One\")\n        val twos = arr.filter(x => x < 20).map(x => s\"Two\")\n \
    \       val threes = arr.filter(x => x < 30).map(x => s\"Three\")\n        val\
    \ fours = arr.filter(x => x < 40).map(x => s\"Four\")\n        val fives = arr.filter(x\
    \ => x < 50).map(x => s\"Five\")\n        val sixes = arr.filter(x => x < 60).map(x\
    \ => s\"Six\")\n        val sevens = arr.filter(x => x < 70).map(x => s\"Seven\"\
    )\n        val eights = arr.filter(x => x < 80).map(x => s\"Eight\")\n       \
    \ val nines = arr.filter(x => x < 90).map(x => s\"Nine\")\n        val result\
    \ = ones + twos + threes + fours + fives + sixes + sevens + eights + nines\n \
    \       val reversed = result.reverse\n        reversed.map(x => x.toString).filter(x\
    \ => x != \"\")", "        val m = arr.length\n        val n = arr.map(_.toString).map(_.length).max\n\
    \        val result = new Array[String](m)\n        var i = 0\n        while (i\
    \ < m) {\n            val j = i + 1\n            val k = j + 1\n            val\
    \ l = k + 1\n            val m = l + 1\n            val n = m + 1\n          \
    \  val o = n + 1\n            val p = o + 1\n            val q = p + 1\n     \
    \       val r = q + 1\n            val s = r + 1\n            val t = s + 1\n\
    \            val u = t + 1\n            val v = u + 1\n            val w = v +\
    \ 1\n            val x = w + 1\n            val y = x + 1\n            val z =\
    \ y + 1\n            val a = z + 1\n            val b = a + 1\n            val\
    \ c = b + 1\n            val d = c + 1\n            val e = d + 1\n          \
    \  val f = e + 1\n            val g = f + 1\n            val h = g + 1\n     \
    \       val i = h + 1\n            val j = i + 1\n            val k = j + 1\n\
    \            val l = k + 1\n            val m = l + 1\n            val n = m +\
    \ 1\n            val o = n + 1\n            val p = o + 1\n            val q =\
    \ p + 1\n            val r = q + 1\n            val s = r + 1\n            val\
    \ t = s + 1\n            val u = t + 1\n            val v = u + 1\n          \
    \  val w = v + 1\n            val x = w + 1\n            val y = x + 1\n     \
    \       val z = y + 1\n            val a = z + 1\n            val b = a + 1\n\
    \            val c = b + 1\n            val d = c + 1\n            val e = d +\
    \ 1\n            val f = e + 1\n            val g = f + 1\n            val h =\
    \ g + 1\n            val i = h + 1\n            val j = i + 1\n            val\
    \ k = j + 1\n            val l = k + 1\n            val m = l + 1\n          \
    \  val n = m + 1\n            val o = n + 1\n            val p = o + 1\n     \
    \       val q = p + 1\n            val r = q + 1\n            val s = r + 1\n\
    \            val t = s + 1\n            val u = t + 1\n            val v = u +\
    \ 1\n            val w = v + 1\n            val x = w + 1\n            val y =\
    \ x + 1\n            val z = y + 1\n            val a = z + 1\n            val\
    \ b = a + 1\n            val c = b + 1\n            val d = c + 1\n          \
    \  val e = d + 1\n            val f = e + 1\n            val g = f + 1\n     \
    \       val h = g + 1\n            val i = h + 1\n            val j = i + 1\n\
    \            val k = j + 1", "        val ones = arr.filter(x => x < 10)\n   \
    \     val tens = arr.filter(x => x >= 10 && x < 100)\n        val hundreds = arr.filter(x\
    \ => x >= 100 && x < 1000)\n        val thousands = arr.filter(x => x >= 1000)\n\
    \        val reversed = arr.reverse\n        val onesReversed = reverse(ones)\n\
    \        val tensReversed = reverse(tens)\n        val hundredsReversed = reverse(hundreds)\n\
    \        val thousandsReversed = reverse(thousands)\n        val onesReversedString\
    \ = onesReversed.mkString(\"\")\n        val tensReversedString = tensReversed.mkString(\"\
    \")\n        val hundredsReversedString = hundredsReversed.mkString(\"\")\n  \
    \      val thousandsReversedString = thousandsReversed.mkString(\"\")\n      \
    \  val onesReversedStringList = onesReversedString.split(\",\")\n        val tensReversedStringList\
    \ = tensReversedString.split(\",\")\n        val hundredsReversedStringList =\
    \ hundredsReversedString.split(\",\")\n        val thousandsReversedStringList\
    \ = thousandsReversedString.split(\",\")\n        val onesReversedStringListLength\
    \ = onesReversedStringList.length\n        val tensReversedStringListLength =\
    \ tensReversedStringList.length\n        val hundredsReversedStringListLength\
    \ =hundredsReversedStringList.length\n        val thousandsReversedStringListLength\
    \ = thousandsReversedStringList.length\n        val onesReversedStringListLength\
    \ = onesReversedStringListLength / 2\n        val tensReversedStringListLength\
    \ = tensReversedStringListLength / 2\n        val hundredsReversedStringListLength\
    \ =hundredsReversedStringListLength / 2\n        val thousandsReversedStringListLength\
    \ = thousandsReversedStringListLength / 2\n        val onesReversedStringListLength\
    \ = onesReversedStringListLength * 2\n        val tensReversedStringListLength\
    \ = tensReversedStringListLength * 2\n        val hundredsReversedStringListLength\
    \ =hundredsReversedStringListLength * 2\n        val thousandsReversedStringListLength\
    \ = thousandsReversedStringListLength * 2\n        val onesReversedStringListLength\
    \ = onesReversedStringListLength * 3\n        val tensReversedStringListLength\
    \ = tensReversedStringListLength * 3\n        val hundredsReversed", "       \
    \ val ones = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens = arr.filter(x\
    \ => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x => x >= 100\
    \ && x <= 999).toList\n        val thousands = arr.filter(x => x >= 1000 && x\
    \ <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000 && x\
    \ <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000 &&\
    \ x <= 999999).toList\n        val tenThousandsOnes = arr.filter(x => x >= 1000000\
    \ && x <= 999999999).toList\n        val oneThousandsOnes = arr.filter(x => x\
    \ >= 10000000 && x <= 99999999999).toList\n        val tenThousandsOnesOnes =\
    \ arr.filter(x => x >= 1000000000 && x <= 999999999999).toList\n        val oneThousandsOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val tenThousandsOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandsOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val tenThousandsOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandsOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val tenThousandsOnesOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandsOnesOnesOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val tenThousandsOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandsOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val tenThousandsOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandsOne",
  "        val result = new mutable.ListBuffer[String]()\n        val ones = arr.filter(x\
    \ => x <= 9 && x >= 1).sort\n        val tens = arr.filter(x => x <= 99 && x >=\
    \ 10).sort\n        val hundreds = arr.filter(x => x <= 999 && x >= 100).sort\n\
    \        val thousands = arr.filter(x => x <= 9999 && x >= 1000).sort\n      \
    \  val tenThousands = arr.filter(x => x <= 999999 && x >= 100000).sort\n     \
    \   val oneThousands = arr.filter(x => x <= 9999999 && x >= 1000000).sort\n  \
    \      val oneHundreds = arr.filter(x => x <= 999999999 && x >= 10000000).sort\n\
    \        val oneThousandThousands = arr.filter(x => x <= 99999999999 && x >= 100000000).sort\n\
    \        val oneHundredThousands = arr.filter(x => x <= 999999999999 && x >= 1000000000).sort\n\
    \        val oneHundredThousandThousands = arr.filter(x => x <= 999999999999999\
    \ && x >= 10000000000).sort\n        val oneHundredThousandThousandThousands =\
    \ arr.filter(x => x <= 9999999999999999999 && x >= 100000000000).sort\n      \
    \  val oneHundredThousandThousandThousandThousands = arr.filter(x => x <= 99999999999999999999999\
    \ && x >= 1000000000000).sort\n        val oneHundredThousandThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 999999999999999999999999999 && x >= 10000000000000).sort\n\
    \        val oneHundredThousandThousandThousandThousandThousandThousands = arr.filter(x\
    \ => x <= 999999999999999999999999999 && x >= 100000000000000).sort\n        val\
    \ oneHundredThousandThousandThousandThousandThousandThousands = arr.filter(x =>\
    \ x <= 9999999999999999999999999999999 && x >= 1000000000000000).sort\n      \
    \  val oneHundredThousandThousandThousandThousandThousandThousandThousands = arr.filter(x\
    \ => x <= 99999999999999999999999999999999999 && x >= 10000000000000000).sort\n\
    \        val oneHundredThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 99999999999999999999", "        val ones = arr.filter(_\
    \ <= 9).sorted\n        val tens = arr.filter(_ <= 99).sorted\n        val hundreds\
    \ = arr.filter(_ <= 999).sorted\n        val thousands = arr.filter(_ <= 9999).sorted\n\
    \        val tenThousands = arr.filter(_ <= 999999).sorted\n        val oneThousands\
    \ = arr.filter(_ <= 9999999).sorted\n        val oneHundreds = arr.filter(_ <=\
    \ 999999999).sorted\n        val oneThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val oneHundredThousands = arr.filter(_ <= 999999999999).sorted\n    \
    \    val oneHundredThousandThousands = arr.filter(_ <= 999999999999999).sorted\n\
    \        val oneHundredThousandThousandThousands = arr.filter(_ <= 999999999999999999).sorted\n\
    \        val oneHundredThousandThousandThousandThousands = arr.filter(_ <= 999999999999999999999).sorted\n\
    \        val oneHundredThousandThousandThousandThousandThousands = arr.filter(_\
    \ <= 99999999999999999999989).sorted\n        val oneHundredThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 9999999999999999999998989).sorted\n        val oneHundredThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999999999999999898989).sorted\n        val oneHundredThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999999999999989898989).sorted\n        val oneHundredThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 9999999999999999999998989898989).sorted\n        val oneHundredThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999999999999989898989898989).sorted\n        val oneHundredThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999999999999999898989898989898989).sorted\n        val\
    \ oneHundredThousandThousand", "        val ones = arr.filter(x => x <= 9 && x\
    \ >= 1).sortBy(x => x).reverse\n        val tens = arr.filter(x => x <= 99 &&\
    \ x >= 10).sortBy(x => x).reverse\n        val hundreds = arr.filter(x => x <=\
    \ 999 && x >= 100).sortBy(x => x).reverse\n        val thousands = arr.filter(x\
    \ => x <= 9999 && x >= 1000).sortBy(x => x).reverse\n        val tenThousands\
    \ = arr.filter(x => x <= 999999 && x >= 10000).sortBy(x => x).reverse\n      \
    \  val oneThousands = arr.filter(x => x <= 9999999 && x >= 100000).sortBy(x =>\
    \ x).reverse\n        val oneHundreds = arr.filter(x => x <= 999999999 && x >=\
    \ 1000000).sortBy(x => x).reverse\n        val oneThousandThousands = arr.filter(x\
    \ => x <= 99999999999 && x >= 10000000).sortBy(x => x).reverse\n        val oneHundredThousands\
    \ = arr.filter(x => x <= 999999999 && x >= 100000000).sortBy(x => x).reverse\n\
    \        val oneHundredThousandThousands = arr.filter(x => x <= 99999999999 &&\
    \ x >= 1000000000).sortBy(x => x).reverse\n        val oneHundredThousandThousandThousands\
    \ = arr.filter(x => x <= 99999999999 && x >= 10000000000).sortBy(x => x).reverse\n\
    \        val oneHundredThousandThousandThousandThousands = arr.filter(x => x <=\
    \ 99999999999 && x >= 100000000000).sortBy(x => x).reverse\n        val oneHundredThousandThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 99999999999 && x >= 1000000000000).sortBy(x => x).reverse\n\
    \        val oneHundredThousandThousandThousandThousandThousandThousands = arr.filter(x\
    \ => x <= 99999999999 && x >= 10000000000000).sortBy(x => x).reverse\n       \
    \ val oneHundredThousandThousandThousandThousandThousandThousandThousands = arr.filter(x\
    \ => x <= 99999999999 && x >= 100000000000000).sortBy(x => x).reverse\n      \
    \  val oneHundredThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(x => x <= 99999999999 && x >= 1000000000000000).sortBy(x ", " \
    \       val ones = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens\
    \ = arr.filter(x => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x\
    \ => x >= 100 && x <= 999).toList\n        val thousands = arr.filter(x => x >=\
    \ 1000 && x <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000\
    \ && x <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000\
    \ && x <= 999999).toList\n        val oneHundreds = arr.filter(x => x >= 1000000\
    \ && x <= 999999999).toList\n        val oneThousandHundreds = arr.filter(x =>\
    \ x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandThousands\
    \ = arr.filter(x => x >= 10000000000 && x <= 9999999998).toList\n        val oneHundredThousands\
    \ = arr.filter(x => x >= 100000000000 && x <= 999999999998).toList\n        val\
    \ oneHundredThousandHundreds = arr.filter(x => x >= 1000000000000 && x <= 9999999999987).toList\n\
    \        val oneHundredThousandThousands = arr.filter(x => x >= 10000000000000\
    \ && x <= 99999999999876).toList\n        val oneHundredThousandThousandHundreds\
    \ = arr.filter(x => x >= 100000000000000 && x <= 9999999999987654).toList\n  \
    \      val oneHundredThousandThousandThousands = arr.filter(x => x >= 1000000000000000\
    \ && x <= 99999999999876543).toList\n        val oneHundredThousandThousandThousandHundreds\
    \ = arr.filter(x => x >= 10000000000000000 && x <= 999999999998765432).toList\n\
    \        val oneHundredThousandThousandThousandThousands = arr.filter(x => x >=\
    \ 100000000000000000 && x <= 9999999999987654321).toList\n        val oneHundredThousandThousandThousandThousandHundreds\
    \ = arr.filter(x => x >= 1000000000000000000 && x <= 999999999998765432109).toList\n\
    \        val oneHundredThousandThousandThousandThousandThousands = arr.filter(x\
    \ => x >= 10000000000000000000 && x <= 99999999999876543210987).toList\n     \
    \   val oneHundredThousandThousandThousandThousandThous", "        val ones =\
    \ arr.filter(x => x % 10 == 1).map(x => s\"One\")\n        val twos = arr.filter(x\
    \ => x % 10 == 2).map(x => s\"Two\")\n        val threes = arr.filter(x => x %\
    \ 10 == 3).map(x => s\"Three\")\n        val fours = arr.filter(x => x % 10 ==\
    \ 4).map(x => s\"Four\")\n        val fives = arr.filter(x => x % 10 == 5).map(x\
    \ => s\"Five\")\n        val sixes = arr.filter(x => x % 10 == 6).map(x => s\"\
    Six\")\n        val sevens = arr.filter(x => x % 10 == 7).map(x => s\"Seven\"\
    )\n        val eights = arr.filter(x => x % 10 == 8).map(x => s\"Eight\")\n  \
    \      val nines = arr.filter(x => x % 10 == 9).map(x => s\"Nine\")\n        val\
    \ result = ones + twos + threes + fours + fives + sixes + sevens + eights + nines\n\
    \        val reversed = result.reverse\n        reversed.map(x => x.toString.replaceAll(\"\
    \\\\D\", \"\"))", "        val result = new mutable.ListBuffer[String]()\n   \
    \     val one = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\")\n        val ten = List(\"Ten\", \"Eleven\"\
    , \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\"\
    , \"Eighteen\", \"Nineteen\")\n        val hundred = List(\"Hundred\", \"Thousand\"\
    , \"Million\", \"Billion\", \"Trillion\", \"Quadrillion\", \"Quintillion\", \"\
    Sextillion\", \"Septillion\", \"Octillion\", \"Nonillion\")\n        val thousand\
    \ = List(\"Thousand\", \"Million\", \"Billion\", \"Trillion\", \"Quadrillion\"\
    , \"Quintillion\", \"Sextillion\", \"Septillion\", \"Octillion\", \"Nonillion\"\
    )\n        val million = List(\"Million\", \"Billion\", \"Trillion\", \"Quadrillion\"\
    , \"Quintillion\", \"Sextillion\", \"Septillion\", \"Octillion\", \"Nonillion\"\
    )\n        val billion = List(\"Billion\", \"Trillion\", \"Quadrillion\", \"Quintillion\"\
    , \"Sextillion\", \"Septillion\", \"Octillion\", \"Nonillion\")\n        val trillion\
    \ = List(\"Trillion\", \"Quadrillion\", \"Quintillion\", \"Sextillion\", \"Septillion\"\
    , \"Octillion\", \"Nonillion\")\n        val quadrillion = List(\"Quadrillion\"\
    , \"Quintillion\", \"Sextillion\", \"Septillion\", \"Octillion\", \"Nonillion\"\
    )\n        val quintillion = List(\"Quintillion\", \"Sextillion\", \"Septillion\"\
    , \"Octillion\", \"Nonillion\")\n        val sextillion = List(\"Sextillion\"\
    , \"Septillion\", \"Octillion\", \"Nonillion\")\n        val septillion = List(\"\
    Septillion\", \"Octillion\", \"Nonillion\")\n        val octillion = List(\"Octillion\"\
    , \"Nonillion\")\n        val nonillion = List(\"Nonillion\")\n        val million\
    \ = List(\"Million\", \"Billion\", \"Trillion\", \"Quadrillion\", \"Qu", "   \
    \     val result = new mutable.ListBuffer[String]()\n        val ones = arr.filter(_\
    \ <= 9).sorted\n        val tens = arr.filter(_ <= 99).sorted\n        val hundreds\
    \ = arr.filter(_ <= 999).sorted\n        val thousands = arr.filter(_ <= 9999).sorted\n\
    \        val tenThousands = arr.filter(_ <= 999999).sorted\n        val oneThousands\
    \ = arr.filter(_ <= 9999999).sorted\n        val tenThousandThousands = arr.filter(_\
    \ <= 999999999).sorted\n        val oneThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousandThousands = arr.filter(_ <= 999999999).sorted\n\
    \        val oneThousandThousandThousandThousandThousands = arr.filter(_ <= 99999999999).sorted\n\
    \        val tenThousandThousandThousandThousandThousandThousands = arr.filter(_\
    \ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999).sorted\n        val tenThousandThousandThousandThousandThousandTh",
  "        val ones = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens =\
    \ arr.filter(x => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x\
    \ => x >= 100 && x <= 999).toList\n        val thousands = arr.filter(x => x >=\
    \ 1000 && x <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000\
    \ && x <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000\
    \ && x <= 999999).toList\n        val oneHundreds = arr.filter(x => x >= 1000000\
    \ && x <= 999999999).toList\n        val oneThousandHundreds = arr.filter(x =>\
    \ x >= 1000000000 && x <= 99999999999).toList\n        val oneThousandThousandHundreds\
    \ = arr.filter(x => x >= 100000000000 && x <= 999999999999).toList\n        val\
    \ oneThousandThousandThousandHundreds = arr.filter(x => x >= 1000000000000 &&\
    \ x <= 999999999999999).toList\n        val oneThousandThousandThousandThousandHundreds\
    \ = arr.filter(x => x >= 100000000000000 && x <= 9999999999999999999).toList\n\
    \        val oneThousandThousandThousandThousandThousandHundreds = arr.filter(x\
    \ => x >= 10000000000000000 && x <= 99999999999999999999999).toList\n        val\
    \ oneThousandThousandThousandThousandThousandThousandHundreds = arr.filter(x =>\
    \ x >= 1000000000000000001 && x <= 999999999999999999999999999).toList\n     \
    \   val oneThousandThousandThousandThousandThousandThousandThousandHundreds =\
    \ arr.filter(x => x >= 1000000000000000002 && x <= 999999999999999999999999999).toList\n\
    \        val oneThousandThousandThousandThousandThousandThousandThousandHundreds\
    \ = arr.filter(x => x >= 1000000000000000003 && x <= 999999999999999999999999999).toList\n\
    \        val oneThousandThousandThousandThousandThousandThousandThousandThousandHundreds\
    \ = arr.filter(x => x >= 1000000000000000004 && x <= 999999999999999999999999999).toList\n\
    \        val oneThousandThousandThousandThousandThousandThousandThousandThousandThousand",
  "        val ones = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens =\
    \ arr.filter(x => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x\
    \ => x >= 100 && x <= 999).toList\n        val thousands = arr.filter(x => x >=\
    \ 1000 && x <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000\
    \ && x <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000\
    \ && x <= 999999).toList\n        val oneHundreds = arr.filter(x => x >= 1000000\
    \ && x <= 999999999).toList\n        val oneThousandThousands = arr.filter(x =>\
    \ x >= 10000000 && x <= 99999999999).toList\n        val oneThousandHundreds =\
    \ arr.filter(x => x >= 1000000000 && x <= 999999999).toList\n        val oneHundredThousands\
    \ = arr.filter(x => x >= 100000000 && x <= 999999999).toList\n        val oneHundredThousandThousands\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val oneHundredThousandHundreds\
    \ = arr.filter(x => x >= 10000000000 && x <= 999999999).toList\n        val oneHundredThousandThousandHundreds\
    \ = arr.filter(x => x >= 100000000000 && x <= 99999999999).toList\n        val\
    \ oneHundredThousandHundredThousands = arr.filter(x => x >= 1000000000000 && x\
    \ <= 999999999).toList\n        val oneHundredThousandHundredThousandHundreds\
    \ = arr.filter(x => x >= 10000000000000 && x <= 99999999999).toList\n        val\
    \ oneHundredThousandHundredThousandHundredThousands = arr.filter(x => x >= 100000000000000\
    \ && x <= 999999999).toList\n        val oneHundredThousandHundredThousandHundredThousandHundreds\
    \ = arr.filter(x => x >= 1000000000000000 && x <= 99999999999).toList\n      \
    \  val oneHundredThousandHundredThousandHundredThousandHundredThousands = arr.filter(x\
    \ => x >= 10000000000000000 && x <= 999999999).toList\n        val oneHundredThousandHundredThousandHundredThousandHundredThousandHundreds\
    \ = arr.filter(x => x >= 100000000000000000 && x <= 99999999", "        val ones\
    \ = arr.filter(x => x >= 1 && x <= 9).toList\n        val tens = arr.filter(x\
    \ => x >= 10 && x <= 99).toList\n        val hundreds = arr.filter(x => x >= 100\
    \ && x <= 999).toList\n        val thousands = arr.filter(x => x >= 1000 && x\
    \ <= 9999).toList\n        val tenThousands = arr.filter(x => x >= 10000 && x\
    \ <= 99999).toList\n        val oneThousands = arr.filter(x => x >= 100000 &&\
    \ x <= 999999).toList\n        val tenThousandThousands = arr.filter(x => x >=\
    \ 1000000 && x <= 9999999).toList\n        val oneThousandThousands = arr.filter(x\
    \ => x >= 10000000 && x <= 99999999).toList\n        val tenThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000 && x <= 999999999).toList\n        val oneThousandThousandThousands\
    \ = arr.filter(x => x >= 1000000000 && x <= 99999999999).toList\n        val tenThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 10000000000 && x <= 9999999998).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000000 && x <= 999999999998).toList\n        val\
    \ tenThousandThousandThousandThousands = arr.filter(x => x >= 1000000000000 &&\
    \ x <= 9999999999987).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 10000000000000 && x <= 9999999999987).toList\n      \
    \  val tenThousandThousandThousandThousands = arr.filter(x => x >= 100000000000000\
    \ && x <= 99999999999876).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 1000000000000000 && x <= 99999999999876).toList\n   \
    \     val tenThousandThousandThousandThousands = arr.filter(x => x >= 10000000000000000\
    \ && x <= 9999999999987654).toList\n        val oneThousandThousandThousandThousands\
    \ = arr.filter(x => x >= 100000000000000000 && x <= 9999999999987654).toList\n\
    \        val tenThousandThousandThousandThousands = arr.filter(x => x >= 100000000000000000\
    \ && x <= 99999999999876543).toList\n        val oneThousandTh", "        val\
    \ ones = arr.filter(_ <= 9).sorted\n        val tens = arr.filter(_ <= 99).sorted\n\
    \        val hundreds = arr.filter(_ <= 999).sorted\n        val thousands = arr.filter(_\
    \ <= 9999).sorted\n        val tenThousands = arr.filter(_ <= 999999).sorted\n\
    \        val oneHundreds = arr.filter(_ <= 9999999).sorted\n        val oneThousands\
    \ = arr.filter(_ <= 999999999).sorted\n        val oneThousandHundreds = arr.filter(_\
    \ <= 99999999999).sorted\n        val oneThousandThousands = arr.filter(_ <= 999999999999).sorted\n\
    \        val oneThousandThousandHundreds = arr.filter(_ <= 999999999999999).sorted\n\
    \        val oneThousandThousandThousands = arr.filter(_ <= 9999999999999999).sorted\n\
    \        val oneThousandThousandThousandHundreds = arr.filter(_ <= 9999999999999999999).sorted\n\
    \        val oneThousandThousandThousandThousands = arr.filter(_ <= 99999999999999999999).sorted\n\
    \        val oneThousandThousandThousandThousandHundreds = arr.filter(_ <= 99999999999999999999999).sorted\n\
    \        val oneThousandThousandThousandThousandThousands = arr.filter(_ <= 999999999999999999999999).sorted\n\
    \        val oneThousandThousandThousandThousandThousandHundreds = arr.filter(_\
    \ <= 999999999999999999999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 9999999999999999999999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandHundreds\
    \ = arr.filter(_ <= 9999999999999999999999999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousands\
    \ = arr.filter(_ <= 99999999999999999999999999999999).sorted\n        val oneThousandThousandThousandThousandThousandThousandThousandHundreds\
    \ = arr.filter(_ <= 99999999999999999999999999999999999).sorted\n        val oneThousandThousandThous"]
stop_tokens:
- "\n    }\n"

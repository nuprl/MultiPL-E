name: HumanEval_138_is_equal_to_sum_even
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
  \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
  \    def isEqualToSumEven(n : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
  \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
  \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
  \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
  \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
completions: ["        val sumEven = mutable.Set[Long]()\n        val sumEvenSum =\
    \ mutable.Set[Long]()\n        val sumEvenSumSum = mutable.Set[Long]()\n     \
    \   val sumEvenSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n      \
    \  val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val\
    \ sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSum", "        val sumEven\
    \ = mutable.ListBuffer(0)\n        var sum = 0\n        while(n > 0){\n      \
    \      sum += n\n            sumEven.append(sum)\n            n -= 1\n       \
    \ }\n        sumEven.size == 4 && sumEven.forall(x => x % 2 == 0)", "        val\
    \ sumEven = mutable.ArrayBuffer.empty[Int]\n        val sumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOdd = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd",
  "        val sumEven = mutable.ArrayBuffer(0)\n        for(i <- 0 until n){\n  \
    \          if((i%2) == 0){\n                sumEven += i\n            }\n    \
    \    }\n        sumEven.length == 4", "        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        sumEven.takeWhile(x => x % 2 == 0).foreach(x\
    \ => sumEven.append(x))\n        sumEven.takeWhile(x => x % 2 == 0).length ==\
    \ 4", "        val sumEven = mutable.ListBuffer.empty[Long]\n        sumEven.+=(n/2)\
    \ // first even number\n        sumEven.+=(n/2) // second even number\n      \
    \  sumEven.+=(n/2) // third even number\n        sumEven.+=(n/2) // fourth even\
    \ number\n        sumEven.sum == n", "        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        sumEven.push(2)\n        sumEven.push(4)\n        sumEven.push(6)\n \
    \       sumEven.push(8)\n        sumEven.push(10)\n        sumEven.push(12)\n\
    \        sumEven.push(14)\n        sumEven.push(16)\n        sumEven.push(18)\n\
    \        sumEven.push(20)\n        sumEven.push(22)\n        sumEven.push(24)\n\
    \        sumEven.push(26)\n        sumEven.push(28)\n        sumEven.push(30)\n\
    \        sumEven.push(32)\n        sumEven.push(34)\n        sumEven.push(36)\n\
    \        sumEven.push(38)\n        sumEven.push(40)\n        sumEven.push(42)\n\
    \        sumEven.push(44)\n        sumEven.push(46)\n        sumEven.push(48)\n\
    \        sumEven.push(50)\n        sumEven.push(52)\n        sumEven.push(54)\n\
    \        sumEven.push(56)\n        sumEven.push(58)\n        sumEven.push(60)\n\
    \        sumEven.push(62)\n        sumEven.push(64)\n        sumEven.push(66)\n\
    \        sumEven.push(68)\n        sumEven.push(70)\n        sumEven.push(72)\n\
    \        sumEven.push(74)\n        sumEven.push(76)\n        sumEven.push(78)\n\
    \        sumEven.push(80)\n        sumEven.push(82)\n        sumEven.push(84)\n\
    \        sumEven.push(86)\n        sumEven.push(88)\n        sumEven.push(90)\n\
    \        sumEven.push(92)\n        sumEven.push(94)\n        sumEven.push(96)\n\
    \        sumEven.push(98)\n        sumEven.push(100)\n        sumEven.push(102)\n\
    \        sumEven.push(104)\n        sumEven.push(106)\n        sumEven.push(108)\n\
    \        sumEven.push(110)\n        sumEven.push(112)\n        sumEven.push(114)\n\
    \        sumEven.push(116)\n        sumEven.push(118)\n        sumEven.push(120)\n\
    \        sumEven.push(122)\n        sumEven.push(124)\n        sumEven.push(126)\n\
    \        sumEven.push(128)\n        sumEven.push(130)\n        ", "        val\
    \ sumEven = mutable.ListBuffer[Long]()\n        val sumEvenSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum2 = mutable.ListBuffer[Long]()\n        val sumEvenSum3\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum4 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum5 = mutable.ListBuffer[Long]()\n        val sumEvenSum6\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum7 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum8 = mutable.ListBuffer[Long]()\n        val sumEvenSum9\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum10 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum11 = mutable.ListBuffer[Long]()\n        val sumEvenSum12\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum13 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum14 = mutable.ListBuffer[Long]()\n        val sumEvenSum15\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum16 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum17 = mutable.ListBuffer[Long]()\n        val sumEvenSum18\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum19 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum20 = mutable.ListBuffer[Long]()\n        val sumEvenSum21\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum22 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum23 = mutable.ListBuffer[Long]()\n        val sumEvenSum24\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum25 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum26 = mutable.ListBuffer[Long]()\n        val sumEvenSum27\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum28 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum29 = mutable.ListBuffer[Long]()\n        val sumEvenSum30\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum31 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum32 = mutable.ListBuffer[Long]", "        val sumEven =\
    \ mutable.ArrayBuffer.empty[Long]\n        for (i <- 0 until n) {\n          \
    \  if (i % 2 == 0) {\n                sumEven += i\n            }\n        }\n\
    \        sumEven.size == 4", "        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long", "        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int", "        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.length == 4",
  "        val sumEven = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumCount = mutable.Array", "        val sumEven\
    \ = mutable.ArrayBuffer.empty[Int]\n        for (i <- 0 until n) {\n         \
    \   if (i % 2 == 0) {\n                sumEven += i\n            }\n        }\n\
    \        sumEven.length == 4", "        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i\n\
    \            val y = x - 1\n            val z = y - 1\n            val w = z -\
    \ 1\n            val t = x + y + z + w\n            val s = if (t % 2 == 0) t\
    \ / 2 else t / 2 + 1\n            sum += s\n            evens += s\n        }\n\
    \        evens.size == 4", "        val sumEven = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for(i <- 0 until n){\n            sum += i\n   \
    \         if(sum == 4){\n                sumEven.append(i)\n            }\n  \
    \      }\n        sumEven.length == n", "        val sumEven = mutable.ListBuffer.empty[Int]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4", "  \
    \      val sumEven = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum4\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum7\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum10\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum13\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum16\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum19\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum22\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum25\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum28\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum31\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32 = mutable.ArrayBuffer.empty[Long",
  "        val evens = mutable.ListBuffer[Long]()\n        val sum = 0L\n        for(i\
    \ <- 0 until n) {\n            val x = i\n            val y = n - i\n        \
    \    val z = (x + y) / 2\n            val z2 = z * z\n            val z3 = z2\
    \ * z\n            val z4 = z3 * z\n            val z5 = z4 * z\n            val\
    \ z6 = z5 * z\n            val z7 = z6 * z\n            val z8 = z7 * z\n    \
    \        val z9 = z8 * z\n            val z10 = z9 * z\n            val z11 =\
    \ z10 * z\n            val z12 = z11 * z\n            val z13 = z12 * z\n    \
    \        val z14 = z13 * z\n            val z15 = z14 * z\n            val z16\
    \ = z15 * z\n            val z17 = z16 * z\n            val z18 = z17 * z\n  \
    \          val z19 = z18 * z\n            val z20 = z19 * z\n            val z21\
    \ = z20 * z\n            val z22 = z21 * z\n            val z23 = z22 * z\n  \
    \          val z24 = z23 * z\n            val z25 = z24 * z\n            val z26\
    \ = z25 * z\n            val z27 = z26 * z\n            val z28 = z27 * z\n  \
    \          val z29 = z28 * z\n            val z30 = z29 * z\n            val z31\
    \ = z30 * z\n            val z32 = z31 * z\n            val z33 = z32 * z\n  \
    \          val z34 = z33 * z\n            val z35 = z34 * z\n            val z36\
    \ = z35 * z\n            val z37 = z36 * z\n            val z38 = z37 * z\n  \
    \          val z39 = z38 * z\n            val z40 = z39 * z\n            val z41\
    \ = z40 * z\n            val z42 = z41 * z\n            val z43 = z42 * z\n  \
    \          val z44 = z43 * z\n            val z45 = z44 * z\n            val z46\
    \ = z45 * z\n            val z47 = z46 * z\n            val z48 = z47 * z\n  \
    \          val z49 = z48 * z\n            val z50", "        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4"]
stop_tokens:
- "\n    }\n"

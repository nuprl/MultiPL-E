name: HumanEval_130_tri
language: jl
prompt: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    >>> tri(1)\n\
  \    3\n    >>> tri(2)\n    2\n    >>> tri(4)\n    3\n    >>> tri(3)\n    8\n  \
  \  \"\"\"\nfunction tri(n::Int64)::Vector{Int64} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3) ==\
  \ [1, 3, 2.0, 8.0])\n\t@test(candidate(4) == [1, 3, 2.0, 8.0, 3.0])\n\t@test(candidate(5)\
  \ == [1, 3, 2.0, 8.0, 3.0, 15.0])\n\t@test(candidate(6) == [1, 3, 2.0, 8.0, 3.0,\
  \ 15.0, 4.0])\n\t@test(candidate(7) == [1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0])\n\
  \t@test(candidate(8) == [1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0])\n\t@test(candidate(9)\
  \ == [1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0])\n\t@test(candidate(20) ==\
  \ [1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0, 6.0, 48.0, 7.0, 63.0, 8.0, 80.0,\
  \ 9.0, 99.0, 10.0, 120.0, 11.0])\n\t@test(candidate(0) == [1])\n\t@test(candidate(1)\
  \ == [1, 3])\nend\n"
completions: ["    if n == 1\n        return [3]\n    elseif n == 2\n        return\
    \ [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8,\
    \ 2, 3]\n        for i in 1:n-3\n            push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1],\
    \ tri(n-1)[2]]\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        v = tri(n-1)\n        push!(v, v[end-2] + v[end-1] + v[end])\n\
    \        return v\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        x = tri(n-1)\n        push!(x, x[end-2] + x[end-1] + x[end])\n\
    \        return x\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1],\
    \ tri(n-1)[2]]\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n         \
    \   push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\n\
    end", "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n\
    \    elseif n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n \
    \       return push!(a,a[end-2]+a[end-1]+a[end])\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n\
    \ == 3\n        return [8,2,3]\n    else\n        return [tri(n-1)[1] + tri(n-1)[2]\
    \ + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2]\
    \ + a[end-1] + a[end])\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = [8,2,3]\n        for i in 4:n\n\
    \            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return a\n  \
    \  end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n        return\
    \ [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8,\
    \ 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n \
    \       return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    else\n \
    \       a = tri(n-1)\n        push!(a,a[end-1]+a[end-2]+a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = tri(n-1)\n        push!(a, a[end] + a[end-1] + a[end-2])\n      \
    \  return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = tri(n-1)\n        return [a[end-2] + a[end-1] + a[end], a...]\n \
    \   end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n       \
    \ return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n     \
    \   a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n      \
    \  return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    a = zeros(Int64, n)\n    a[1] = 3\n   \
    \ a[2] = 2\n    a[3] = 8\n    for i in 4:n\n        a[i] = a[i-1] + a[i-2] + a[i-3]\n\
    \    end\n    return a\nend", "    a = zeros(Int64, n)\n    a[1] = 3\n    a[2]\
    \ = 2\n    a[3] = 8\n    for i in 4:n\n        a[i] = a[i-1] + a[i-2] + a[i-3]\n\
    \    end\n    return a\nend", "    if n == 1\n        return [3]\n    elseif n\
    \ == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n \
    \   else\n        a = tri(n-1)\n        push!(a, a[end] + a[end-1] + a[end-2])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end]+a[end-1]+a[end-2])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        return push!(a, a[end-2] + a[end-1] +\
    \ a[end])\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n\
    \        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    else\n        x = tri(n-1)\n\
    \        push!(x, x[end-2] + x[end-1] + x[end])\n        return x\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n \
    \   elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n\
    \        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n      \
    \  end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n \
    \       return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    else\n        x = tri(n-1)\n        return\
    \ [x[end-1] + x[end-2] + x[end], x[end]]\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        v = tri(n-1)\n        push!(v,v[end-2]+v[end-1]+v[end])\n\
    \        return v\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    else\n\
    \        a = [2,3,8]\n        for i in 3:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        return [tri(n-1)[1] + tri(n-1)[2]\
    \ + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2]\
    \ + a[end-1] + a[end])\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        return [tri(n-1)[1] + tri(n-1)[2]\
    \ + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2, 3]\n    else\n      \
    \  a = [2, 3, 8]\n        for i in 3:n\n            push!(a, a[i-1] + a[i-2] +\
    \ a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = [8,2,3]\n        for i in 4:n\n\
    \            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return a\n  \
    \  end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n        return\
    \ [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n\
    \        push!(a, a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n \
    \   elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n\
    \        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n      \
    \  end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3],\
    \ tri(n-1)[1], tri(n-1)[2]]\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        x = tri(n-1)\n        push!(x, x[end-2] + x[end-1]\
    \ + x[end])\n        return x\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = tri(n-1)\n        push!(a,a[end]+a[end-1]+a[end-2])\n \
    \       return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n \
    \       return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        v = tri(n-1)\n        push!(v, v[end-2] + v[end-1] + v[end])\n\
    \        return v\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for\
    \ i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n    \
    \    return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n\
    \ == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n \
    \   else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        return push!(a, a[end-2] + a[end-1] + a[end])\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    else\n        a = [2,3,8]\n        for i in 3:n\n       \
    \     push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return a\n    end\n\
    end", "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n\
    \    elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n  \
    \      for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1],\
    \ tri(n-1)[2]]\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        return [a[end-2] + a[end-1] + a[end],\
    \ a...]\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n\
    \        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n \
    \       a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = [8,2,3]\n        for i in 4:n\n\
    \            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return a\n  \
    \  end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n        return\
    \ [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n\
    \        push!(a, a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n \
    \   elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n\
    \        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n      \
    \  end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a,\
    \ a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", " \
    \   if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n\
    \    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n\
    \        push!(a, a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n  \
    \  elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n    \
    \    for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n  \
    \      return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [3, 2, 8]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        return\
    \ [a[end-2] + a[end-1] + a[end], a...]\n    end\nend", "    if n == 1\n      \
    \  return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n \
    \       return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2]\
    \ + a[end-1] + a[end])\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2]\
    \ + a[end-1] + a[end])\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        x = tri(n-1)\n        return [x[n-1]+x[n-2]+x[n-3],x...]\n  \
    \  end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n        return\
    \ [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n\
    \        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = tri(n-1)\n        return [a[end-2] + a[end-1] +\
    \ a[end], a...]\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3],\
    \ tri(n-1)[1], tri(n-1)[2]]\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        x = tri(n-1)\n        return [x[end-2] + x[end-1]\
    \ + x[end], x...]\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [1,2,3]\n  \
    \  else\n        a = tri(n-1)\n        return vcat(a, a[end-2]+a[end-1]+a[end])\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        v = tri(n-1)\n        push!(v, v[end-2] + v[end-1] + v[end])\n      \
    \  return v\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = tri(n-1)\n        return [a[end-2] + a[end-1] + a[end], a[end-1],\
    \ a[end]]\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n\
    \        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end]+a[end-1]+a[end-2])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n        for i\
    \ in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n   \
    \     return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = tri(n-1)\n        return [a[n-1]+a[n-2]+a[n-3],a...]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n\
    \        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end]+a[end-1]+a[end-2])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    else\n        a = [2, 3, 8]\n        for\
    \ i in 3:n-1\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n  \
    \      return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    a = [3,\
    \ 2, 1]\n    for i in 1:n\n        push!(a, a[end] + a[end-1] + a[end-2])\n  \
    \  end\n    return a\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n\
    \        return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = tri(n-1)\n        return [a[end-2] + a[end-1] + a[end], a[end-1], a[end]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n\
    \            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n   \
    \     a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n         \
    \   push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\n\
    end", "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,\
    \ 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2,\
    \ 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n \
    \       end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n\
    \    else\n        a = tri(n-1)\n        push!(a,a[end]+a[end-1]+a[end-2])\n \
    \       return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n   \
    \     return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        return [a[n-1] + a[n-2] + a[n-3], a...]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n        return a\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ a = [3,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n         \
    \   push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\n\
    end", "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n\
    \    elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n  \
    \      for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        return [a[n-1]+a[n-2]+a[n-3],a[n-2],a[n-3]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n    \
    \    a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n   \
    \     a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n   \
    \     a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = [3, 2, 8]\n        for i in 4:n\n         \
    \   push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\n\
    end", "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n\
    \    elseif n == 3\n        return [8,2,3]\n    else\n        v = tri(n-1)\n \
    \       push!(v, v[end-2] + v[end-1] + v[end])\n        return v\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n  \
    \  elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n    \
    \    for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n  \
    \      return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        return\
    \ [a[end-2] + a[end-1] + a[end], a...]\n    end\nend", "    if n == 1\n      \
    \  return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n \
    \       return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n\
    \            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n        return a\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ a = [8,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for\
    \ i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n    \
    \    return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n\
    \ == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n \
    \   else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = [3,2,3]\n        for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2,3]\n    elseif n == 3\n        return\
    \ [8,2,3]\n    else\n        a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n\
    \        return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2,3]\n    elseif n == 3\n        return [8,2,3]\n  \
    \  else\n        a = tri(n-1)\n        return push!(a,a[end-2]+a[end-1]+a[end])\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n       \
    \ return [tri(n-1)[1] + tri(n-1)[2] + tri(n-1)[3], tri(n-1)[1], tri(n-1)[2]]\n\
    \    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n      \
    \  return [2, 3]\n    else\n        a = [2, 3, 8]\n        for i in 3:n\n    \
    \        push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n \
    \   end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n       \
    \ return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n     \
    \   a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [1,1,1]\n    else\n       \
    \ a = tri(n-1)\n        return [a[2],a[3],a[2]+a[3]+a[1]]\n    end\nend", "  \
    \  if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n \
    \   elseif n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n\
    \        push!(a, a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n \
    \   elseif n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n\
    \        push!(a, a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n  \
    \  elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n    \
    \    for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n  \
    \      return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif\
    \ n == 3\n        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a,\
    \ a[end-2] + a[end-1] + a[end])\n        return a\n    end\nend", "    if n ==\
    \ 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    else\n \
    \       a = [2,3,8]\n        for i in 3:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n\
    \        end\n        return a\n    end\nend", "    if n == 1\n        return\
    \ [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return\
    \ [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1]\
    \ + a[end])\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a,\
    \ a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", " \
    \   if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n \
    \   elseif n == 3\n        return [8,2,3]\n    else\n        a = tri(n-1)\n  \
    \      push!(a,a[end-2]+a[end-1]+a[end])\n        return a\n    end\nend", " \
    \   if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n\
    \    elseif n == 3\n        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n\
    \        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n      \
    \  end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n            push!(a,\
    \ a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", " \
    \   if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n\
    \    elseif n == 3\n        return [1, 2, 3]\n    else\n        a = [1, 2, 3]\n\
    \        for i in 4:n\n            push!(a, a[i-1] + a[i-2] + a[i-3])\n      \
    \  end\n        return a\n    end\nend", "    if n == 1\n        return [3]\n\
    \    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8,\
    \ 2, 3]\n    else\n        a = [3, 2, 8]\n        for i in 4:n\n            push!(a,\
    \ a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", " \
    \   if n == 1\n        return [3]\n    elseif n == 2\n        return [2, 3]\n\
    \    elseif n == 3\n        return [8, 2, 3]\n    else\n        t = tri(n-1)\n\
    \        push!(t, t[end-2] + t[end-1] + t[end])\n        return t\n    end\nend",
  "    if n == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n  \
    \  elseif n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n    \
    \    for i in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n  \
    \      return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif\
    \ n == 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n\
    \    else\n        a = [3, 2, 8]\n        for i in 4:n\n            push!(a, a[i-1]\
    \ + a[i-2] + a[i-3])\n        end\n        return a\n    end\nend", "    if n\
    \ == 1\n        return [3]\n    elseif n == 2\n        return [2,3]\n    elseif\
    \ n == 3\n        return [8,2,3]\n    else\n        a = [8,2,3]\n        for i\
    \ in 4:n\n            push!(a,a[i-1]+a[i-2]+a[i-3])\n        end\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2,3]\n    elseif n == 3\n        return [8,2,3]\n    else\n   \
    \     a = tri(n-1)\n        push!(a,a[end-2]+a[end-1]+a[end])\n        return\
    \ a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n == 2\n  \
    \      return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = tri(n-1)\n        push!(a, a[end-2] + a[end-1] + a[end])\n      \
    \  return a\n    end\nend", "    if n == 1\n        return [3]\n    elseif n ==\
    \ 2\n        return [2, 3]\n    elseif n == 3\n        return [8, 2, 3]\n    else\n\
    \        a = [8, 2, 3]\n        for i in 4:n\n            push!(a, a[i-1] + a[i-2]\
    \ + a[i-3])\n        end\n        return a\n    end\nend", "    if n == 1\n  \
    \      return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = tri(n-1)\n        push!(a, a[end-2]\
    \ + a[end-1] + a[end])\n        return a\n    end\nend", "    if n == 1\n    \
    \    return [3]\n    elseif n == 2\n        return [2, 3]\n    elseif n == 3\n\
    \        return [8, 2, 3]\n    else\n        a = [8, 2, 3]\n        for i in 4:n\n\
    \            push!(a, a[i-1] + a[i-2] + a[i-3])\n        end\n        return a\n\
    \    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

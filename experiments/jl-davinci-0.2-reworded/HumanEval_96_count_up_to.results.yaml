name: HumanEval_96_count_up_to
language: jl
results:
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpho07fai6.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho07fai6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho07fai6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpho07fai6.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho07fai6.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho07fai6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpho07fai6.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho07fai6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho07fai6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpho07fai6.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho07fai6.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpho07fai6.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5x8v6wg_.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x8v6wg_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x8v6wg_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5x8v6wg_.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x8v6wg_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x8v6wg_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5x8v6wg_.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x8v6wg_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x8v6wg_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5x8v6wg_.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x8v6wg_.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5x8v6wg_.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx17_i7w8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx17_i7w8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx17_i7w8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx17_i7w8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx17_i7w8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx17_i7w8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx17_i7w8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx17_i7w8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx17_i7w8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx17_i7w8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx17_i7w8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx17_i7w8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6jde5dyn.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jde5dyn.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jde5dyn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6jde5dyn.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jde5dyn.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jde5dyn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6jde5dyn.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jde5dyn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jde5dyn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6jde5dyn.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jde5dyn.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jde5dyn.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp69eutrvq.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69eutrvq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69eutrvq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp69eutrvq.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69eutrvq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69eutrvq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp69eutrvq.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69eutrvq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69eutrvq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp69eutrvq.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69eutrvq.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69eutrvq.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5b2_w0hr.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5b2_w0hr.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5b2_w0hr.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5b2_w0hr.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5b2_w0hr.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5b2_w0hr.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5b2_w0hr.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5b2_w0hr.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5b2_w0hr.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5b2_w0hr.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5b2_w0hr.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5b2_w0hr.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyra0k16v.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyra0k16v.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyra0k16v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyra0k16v.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyra0k16v.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyra0k16v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyra0k16v.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyra0k16v.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyra0k16v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyra0k16v.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyra0k16v.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyra0k16v.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        if isprime(i)\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwvvbrixi.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvvbrixi.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwvvbrixi.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwvvbrixi.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwvvbrixi.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvvbrixi.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwvvbrixi.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwvvbrixi.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwvvbrixi.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvvbrixi.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwvvbrixi.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwvvbrixi.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwvvbrixi.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvvbrixi.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwvvbrixi.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    v = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in v\n            if i % j == 0\n    \
    \            is_prime = false\n                break\n            end\n      \
    \  end\n        if is_prime\n            push!(v, i)\n        end\n    end\n \
    \   return v\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t\
    @test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqjf2tkb9.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjf2tkb9.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjf2tkb9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqjf2tkb9.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjf2tkb9.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjf2tkb9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqjf2tkb9.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjf2tkb9.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjf2tkb9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqjf2tkb9.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjf2tkb9.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqjf2tkb9.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg546qy2h.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg546qy2h.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg546qy2h.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpg546qy2h.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg546qy2h.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg546qy2h.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpg546qy2h.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg546qy2h.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg546qy2h.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpg546qy2h.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg546qy2h.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg546qy2h.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp81ub_us0.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81ub_us0.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81ub_us0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp81ub_us0.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81ub_us0.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81ub_us0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp81ub_us0.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81ub_us0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81ub_us0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp81ub_us0.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81ub_us0.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81ub_us0.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm7k5__j2.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7k5__j2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7k5__j2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpm7k5__j2.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7k5__j2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7k5__j2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpm7k5__j2.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7k5__j2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7k5__j2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpm7k5__j2.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7k5__j2.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7k5__j2.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = [2]\n    for i\
    \ in 3:n\n        is_prime = true\n        for j in primes\n            if i %\
    \ j == 0\n                is_prime = false\n                break\n          \
    \  end\n        end\n        if is_prime\n            push!(primes, i)\n     \
    \   end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpixjjx90u.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixjjx90u.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixjjx90u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpixjjx90u.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixjjx90u.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixjjx90u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpixjjx90u.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixjjx90u.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixjjx90u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpixjjx90u.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixjjx90u.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixjjx90u.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn2fc21ke.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2fc21ke.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2fc21ke.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn2fc21ke.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2fc21ke.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2fc21ke.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn2fc21ke.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2fc21ke.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2fc21ke.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn2fc21ke.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2fc21ke.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2fc21ke.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpil_vbzll.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil_vbzll.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil_vbzll.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpil_vbzll.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil_vbzll.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil_vbzll.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpil_vbzll.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil_vbzll.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil_vbzll.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpil_vbzll.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil_vbzll.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpil_vbzll.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpehoxt3zh.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpehoxt3zh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpehoxt3zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpehoxt3zh.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpehoxt3zh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpehoxt3zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpehoxt3zh.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpehoxt3zh.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpehoxt3zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpehoxt3zh.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpehoxt3zh.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpehoxt3zh.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdh8xodxo.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh8xodxo.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdh8xodxo.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdh8xodxo.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh8xodxo.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdh8xodxo.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdh8xodxo.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh8xodxo.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdh8xodxo.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdh8xodxo.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdh8xodxo.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdh8xodxo.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return Int64[]\n    end\n    if n == 1\n        return\
    \ Int64[]\n    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n\
    \        return [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n\
    \    if n == 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return\
    \ [2, 3, 5]\n    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n  \
    \  if n == 8\n        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return\
    \ [2, 3, 5, 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n\
    \    if n == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n  \
    \      return [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3,\
    \ 5, 7, 11, 13]\n    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 16\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n    \
    \    return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return\
    \ [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5,\
    \ 7, 11, 13, 17, 19]\n    end\n    if n == 20\n        return [2, 3, 5, 7, 11,\
    \ 13, 17, 19]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfw3bbjvi.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpfw3bbjvi.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpfw3bbjvi.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpfw3bbjvi.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpfw3bbjvi.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpfw3bbjvi.jl:86\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkljh551r.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpkljh551r.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpkljh551r.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpkljh551r.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpkljh551r.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpkljh551r.jl:86\\ntest set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9xgfaov4.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xgfaov4.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xgfaov4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9xgfaov4.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xgfaov4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xgfaov4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9xgfaov4.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xgfaov4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xgfaov4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9xgfaov4.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xgfaov4.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9xgfaov4.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8fbc6czx.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8fbc6czx.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8fbc6czx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8fbc6czx.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8fbc6czx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8fbc6czx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8fbc6czx.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8fbc6czx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8fbc6czx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8fbc6czx.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8fbc6czx.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8fbc6czx.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyq8xrq87.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyq8xrq87.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyq8xrq87.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyq8xrq87.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyq8xrq87.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyq8xrq87.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyq8xrq87.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyq8xrq87.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyq8xrq87.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyq8xrq87.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyq8xrq87.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyq8xrq87.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj78inqji.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj78inqji.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj78inqji.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpj78inqji.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj78inqji.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj78inqji.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpj78inqji.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj78inqji.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj78inqji.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpj78inqji.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj78inqji.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj78inqji.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        is_prime = true\n        for j in 2:floor(sqrt(i))\n     \
    \       if i % j == 0\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime\n            push!(primes,\
    \ i)\n        end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt6q_wi1e.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6q_wi1e.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6q_wi1e.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6q_wi1e.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6q_wi1e.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6q_wi1e.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6q_wi1e.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6q_wi1e.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6q_wi1e.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6q_wi1e.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6q_wi1e.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6q_wi1e.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdp9_v3b.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdp9_v3b.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdp9_v3b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgdp9_v3b.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdp9_v3b.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdp9_v3b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgdp9_v3b.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdp9_v3b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgdp9_v3b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgdp9_v3b.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgdp9_v3b.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdp9_v3b.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 0\n        return []\n    end\n    if n == 0\n        return []\n\
    \    end\n    if n == 1\n        return []\n    end\n    if n == 2\n        return\
    \ [2]\n    end\n    if n == 3\n        return [2, 3]\n    end\n    if n == 4\n\
    \        return [2, 3]\n    end\n    if n == 5\n        return [2, 3, 5]\n   \
    \ end\n    if n == 6\n        return [2, 3, 5]\n    end\n    if n == 7\n     \
    \   return [2, 3, 5, 7]\n    end\n    if n == 8\n        return [2, 3, 5, 7]\n\
    \    end\n    if n == 9\n        return [2, 3, 5, 7]\n    end\n    if n == 10\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 11\n        return [2, 3, 5,\
    \ 7, 11]\n    end\n    if n == 12\n        return [2, 3, 5, 7, 11]\n    end\n\
    \    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 14\n\
    \        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 15\n        return\
    \ [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n        return [2, 3, 5, 7, 11,\
    \ 13]\n    end\n    if n == 17\n        return [2, 3, 5, 7, 11, 13, 17]\n    end\n\
    \    if n == 18\n        return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n ==\
    \ 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if n == 20\n \
    \       return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if n == 21\n       \
    \ return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if n == 22\n        return\
    \ [2, 3, 5\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwu5z3vaz.jl:89\nin expression starting at\
    \ /tmp/tmpwu5z3vaz.jl:89\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        if isprime(i)\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiabk4rbw.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpiabk4rbw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiabk4rbw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiabk4rbw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpiabk4rbw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpiabk4rbw.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiabk4rbw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiabk4rbw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpiabk4rbw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpiabk4rbw.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiabk4rbw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiabk4rbw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpiabk4rbw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpiabk4rbw.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiabk4rbw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpie24vd77.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpie24vd77.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpie24vd77.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpie24vd77.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpie24vd77.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpie24vd77.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpie24vd77.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpie24vd77.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpie24vd77.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpie24vd77.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpie24vd77.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpie24vd77.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvdyerqr1.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdyerqr1.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdyerqr1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvdyerqr1.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdyerqr1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdyerqr1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvdyerqr1.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdyerqr1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvdyerqr1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvdyerqr1.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvdyerqr1.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvdyerqr1.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for p in primes\n            if i % p == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmzpbocn7.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzpbocn7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzpbocn7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmzpbocn7.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzpbocn7.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzpbocn7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmzpbocn7.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzpbocn7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzpbocn7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmzpbocn7.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzpbocn7.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmzpbocn7.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9vr_78ce.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vr_78ce.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vr_78ce.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9vr_78ce.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vr_78ce.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vr_78ce.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9vr_78ce.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vr_78ce.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vr_78ce.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9vr_78ce.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vr_78ce.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9vr_78ce.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpye3y2rj2.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpye3y2rj2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpye3y2rj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpye3y2rj2.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpye3y2rj2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpye3y2rj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpye3y2rj2.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpye3y2rj2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpye3y2rj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpye3y2rj2.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpye3y2rj2.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpye3y2rj2.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyj0qsxjc.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0qsxjc.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj0qsxjc.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyj0qsxjc.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0qsxjc.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj0qsxjc.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyj0qsxjc.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0qsxjc.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj0qsxjc.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyj0qsxjc.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0qsxjc.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyj0qsxjc.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdmnwx864.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmnwx864.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmnwx864.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdmnwx864.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmnwx864.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmnwx864.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdmnwx864.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmnwx864.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmnwx864.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdmnwx864.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmnwx864.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmnwx864.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgfen78eq.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfen78eq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfen78eq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgfen78eq.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfen78eq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfen78eq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgfen78eq.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfen78eq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfen78eq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgfen78eq.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfen78eq.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgfen78eq.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn61rwux8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn61rwux8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn61rwux8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn61rwux8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn61rwux8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn61rwux8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn61rwux8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn61rwux8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn61rwux8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn61rwux8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn61rwux8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn61rwux8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbnqphedt.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnqphedt.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnqphedt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbnqphedt.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnqphedt.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnqphedt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbnqphedt.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnqphedt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnqphedt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbnqphedt.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnqphedt.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbnqphedt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        if isprime(i)\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoot5ykt1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpoot5ykt1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoot5ykt1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoot5ykt1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpoot5ykt1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpoot5ykt1.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoot5ykt1.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoot5ykt1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpoot5ykt1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpoot5ykt1.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoot5ykt1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoot5ykt1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpoot5ykt1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpoot5ykt1.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoot5ykt1.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprouck45s.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprouck45s.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprouck45s.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprouck45s.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprouck45s.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprouck45s.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprouck45s.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprouck45s.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprouck45s.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprouck45s.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprouck45s.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprouck45s.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4v14ycj2.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v14ycj2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v14ycj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4v14ycj2.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v14ycj2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v14ycj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4v14ycj2.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v14ycj2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v14ycj2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4v14ycj2.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v14ycj2.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4v14ycj2.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph8um6n2p.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8um6n2p.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph8um6n2p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph8um6n2p.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8um6n2p.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph8um6n2p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph8um6n2p.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8um6n2p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph8um6n2p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph8um6n2p.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph8um6n2p.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph8um6n2p.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpipr0y1o6.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipr0y1o6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipr0y1o6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpipr0y1o6.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipr0y1o6.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipr0y1o6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpipr0y1o6.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipr0y1o6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipr0y1o6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpipr0y1o6.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipr0y1o6.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpipr0y1o6.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87dj_2ra.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87dj_2ra.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87dj_2ra.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp87dj_2ra.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87dj_2ra.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87dj_2ra.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp87dj_2ra.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87dj_2ra.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87dj_2ra.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp87dj_2ra.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87dj_2ra.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87dj_2ra.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsa_y8k4u.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpsa_y8k4u.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpsa_y8k4u.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpsa_y8k4u.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpsa_y8k4u.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpsa_y8k4u.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpsa_y8k4u.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpsa_y8k4u.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsa_y8k4u.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sssxq6a.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sssxq6a.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sssxq6a.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6sssxq6a.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sssxq6a.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sssxq6a.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6sssxq6a.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sssxq6a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sssxq6a.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6sssxq6a.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sssxq6a.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sssxq6a.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20j3z0mh.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j3z0mh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j3z0mh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp20j3z0mh.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j3z0mh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j3z0mh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp20j3z0mh.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j3z0mh.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j3z0mh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp20j3z0mh.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j3z0mh.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20j3z0mh.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxi343yul.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxi343yul.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxi343yul.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxi343yul.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxi343yul.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxi343yul.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxi343yul.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxi343yul.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxi343yul.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxi343yul.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxi343yul.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxi343yul.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    primes = []\n    for i in 2:n\n        if isprime(i)\n            push!(primes,\
    \ i)\n        end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcj7bqb2q.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcj7bqb2q.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcj7bqb2q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcj7bqb2q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcj7bqb2q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcj7bqb2q.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcj7bqb2q.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcj7bqb2q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcj7bqb2q.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcj7bqb2q.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcj7bqb2q.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcj7bqb2q.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcj7bqb2q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcj7bqb2q.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj7bqb2q.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp670aod4c.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp670aod4c.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp670aod4c.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp670aod4c.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp670aod4c.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp670aod4c.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp670aod4c.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp670aod4c.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp670aod4c.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp670aod4c.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp670aod4c.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp670aod4c.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfg8usqkn.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg8usqkn.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg8usqkn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfg8usqkn.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg8usqkn.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg8usqkn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfg8usqkn.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg8usqkn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg8usqkn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfg8usqkn.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg8usqkn.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfg8usqkn.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63hwp9fy.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hwp9fy.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hwp9fy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63hwp9fy.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hwp9fy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hwp9fy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63hwp9fy.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hwp9fy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63hwp9fy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63hwp9fy.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63hwp9fy.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63hwp9fy.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6rlojn0.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6rlojn0.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6rlojn0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc6rlojn0.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6rlojn0.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6rlojn0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc6rlojn0.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6rlojn0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6rlojn0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc6rlojn0.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6rlojn0.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6rlojn0.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ae7zw1q.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ae7zw1q.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ae7zw1q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9ae7zw1q.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ae7zw1q.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ae7zw1q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9ae7zw1q.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ae7zw1q.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ae7zw1q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9ae7zw1q.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ae7zw1q.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ae7zw1q.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxuwrhnrs.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuwrhnrs.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxuwrhnrs.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxuwrhnrs.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuwrhnrs.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxuwrhnrs.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxuwrhnrs.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuwrhnrs.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxuwrhnrs.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxuwrhnrs.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuwrhnrs.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxuwrhnrs.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpogk6vhww.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogk6vhww.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogk6vhww.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpogk6vhww.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogk6vhww.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogk6vhww.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpogk6vhww.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogk6vhww.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpogk6vhww.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpogk6vhww.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpogk6vhww.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpogk6vhww.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    primes = []\n    for i in 2:n\n        is_prime = true\n        for j\
    \ in 2:i-1\n            if i % j == 0\n                is_prime = false\n    \
    \            break\n            end\n        end\n        if is_prime\n      \
    \      push!(primes, i)\n        end\n    end\n    return primes\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\
    \t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwhma0fq9.jl:38\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhma0fq9.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwhma0fq9.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwhma0fq9.jl:40\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhma0fq9.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwhma0fq9.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwhma0fq9.jl:46\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhma0fq9.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwhma0fq9.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwhma0fq9.jl:47\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwhma0fq9.jl:47 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhma0fq9.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyx1iss0q.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyx1iss0q.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyx1iss0q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyx1iss0q.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyx1iss0q.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyx1iss0q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyx1iss0q.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyx1iss0q.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyx1iss0q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyx1iss0q.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyx1iss0q.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyx1iss0q.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9abc7vbl.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9abc7vbl.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9abc7vbl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9abc7vbl.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9abc7vbl.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9abc7vbl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9abc7vbl.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9abc7vbl.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9abc7vbl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9abc7vbl.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9abc7vbl.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9abc7vbl.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91so58x1.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91so58x1.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91so58x1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp91so58x1.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91so58x1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91so58x1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp91so58x1.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91so58x1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91so58x1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp91so58x1.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91so58x1.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91so58x1.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa5cys31t.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5cys31t.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5cys31t.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpa5cys31t.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5cys31t.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5cys31t.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpa5cys31t.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5cys31t.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5cys31t.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpa5cys31t.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5cys31t.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5cys31t.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpz28z5i8g.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpz28z5i8g.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpz28z5i8g.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpz28z5i8g.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpz28z5i8g.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpz28z5i8g.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpz28z5i8g.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpz28z5i8g.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz28z5i8g.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn1y6lfgm.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1y6lfgm.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1y6lfgm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn1y6lfgm.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1y6lfgm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1y6lfgm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn1y6lfgm.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1y6lfgm.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1y6lfgm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn1y6lfgm.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1y6lfgm.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn1y6lfgm.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    primes = []\n    for i in 2:n\n        if isprime(i)\n            push!(primes,\
    \ i)\n        end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvcdln17s.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvcdln17s.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvcdln17s.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvcdln17s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvcdln17s.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvcdln17s.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvcdln17s.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvcdln17s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvcdln17s.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvcdln17s.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvcdln17s.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvcdln17s.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpvcdln17s.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvcdln17s.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvcdln17s.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphv046_9d.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmphv046_9d.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmphv046_9d.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmphv046_9d.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmphv046_9d.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmphv046_9d.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmphv046_9d.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmphv046_9d.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphv046_9d.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    \    if n == 21\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if\
    \ n == 22\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n   \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpspw5vp51.jl:1\nin expression starting at /tmp/tmpspw5vp51.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppyf463uc.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppyf463uc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf463uc.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf463uc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppyf463uc.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppyf463uc.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf463uc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf463uc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppyf463uc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppyf463uc.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyf463uc.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyf463uc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppyf463uc.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppyf463uc.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppyf463uc.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3lyva5qp.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3lyva5qp.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3lyva5qp.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmp3lyva5qp.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3lyva5qp.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3lyva5qp.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmp3lyva5qp.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmp3lyva5qp.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3lyva5qp.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprk12lg53.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk12lg53.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprk12lg53.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprk12lg53.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk12lg53.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprk12lg53.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprk12lg53.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk12lg53.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprk12lg53.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprk12lg53.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprk12lg53.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprk12lg53.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy_fa8e1i.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_fa8e1i.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_fa8e1i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpy_fa8e1i.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_fa8e1i.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_fa8e1i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpy_fa8e1i.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_fa8e1i.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_fa8e1i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpy_fa8e1i.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_fa8e1i.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy_fa8e1i.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7u3m4ojq.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7u3m4ojq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7u3m4ojq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7u3m4ojq.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7u3m4ojq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7u3m4ojq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7u3m4ojq.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7u3m4ojq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7u3m4ojq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7u3m4ojq.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7u3m4ojq.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7u3m4ojq.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpft08l4c8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft08l4c8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft08l4c8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpft08l4c8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft08l4c8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft08l4c8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpft08l4c8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft08l4c8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpft08l4c8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpft08l4c8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpft08l4c8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpft08l4c8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd37k06pm.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd37k06pm.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd37k06pm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd37k06pm.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd37k06pm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd37k06pm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd37k06pm.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd37k06pm.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd37k06pm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd37k06pm.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd37k06pm.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd37k06pm.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5rtgw6n.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5rtgw6n.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5rtgw6n.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph5rtgw6n.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5rtgw6n.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5rtgw6n.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph5rtgw6n.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5rtgw6n.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5rtgw6n.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph5rtgw6n.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5rtgw6n.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5rtgw6n.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6q8hsyhy.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6q8hsyhy.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6q8hsyhy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6q8hsyhy.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6q8hsyhy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6q8hsyhy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6q8hsyhy.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6q8hsyhy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6q8hsyhy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6q8hsyhy.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6q8hsyhy.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6q8hsyhy.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpycjnsb8_.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpycjnsb8_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpycjnsb8_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpycjnsb8_.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpycjnsb8_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpycjnsb8_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpycjnsb8_.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpycjnsb8_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpycjnsb8_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpycjnsb8_.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpycjnsb8_.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycjnsb8_.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    primes = [2]\n    for\
    \ i in 3:n\n        is_prime = true\n        for j in primes\n            if i\
    \ % j == 0\n                is_prime = false\n                break\n        \
    \    end\n        end\n        if is_prime\n            push!(primes, i)\n   \
    \     end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpua3o4hd5.jl:47\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua3o4hd5.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua3o4hd5.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpua3o4hd5.jl:49\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua3o4hd5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua3o4hd5.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpua3o4hd5.jl:55\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua3o4hd5.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpua3o4hd5.jl:46\ntest set: Test\
    \ Failed at /tmp/tmpua3o4hd5.jl:56\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpua3o4hd5.jl:56 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpua3o4hd5.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuusex6sj.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusex6sj.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusex6sj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuusex6sj.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusex6sj.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusex6sj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuusex6sj.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusex6sj.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusex6sj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuusex6sj.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusex6sj.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuusex6sj.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2swdn_e8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2swdn_e8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2swdn_e8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2swdn_e8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2swdn_e8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2swdn_e8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2swdn_e8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2swdn_e8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2swdn_e8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2swdn_e8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2swdn_e8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2swdn_e8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcp8a42o4.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcp8a42o4.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcp8a42o4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcp8a42o4.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcp8a42o4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcp8a42o4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcp8a42o4.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcp8a42o4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcp8a42o4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcp8a42o4.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcp8a42o4.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcp8a42o4.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf2xquwnb.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2xquwnb.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2xquwnb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf2xquwnb.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2xquwnb.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2xquwnb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf2xquwnb.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2xquwnb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2xquwnb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf2xquwnb.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2xquwnb.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf2xquwnb.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    \    if n == 21\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if\
    \ n == 22\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n   \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvw5we88.jl:1\nin expression starting at /tmp/tmprvw5we88.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    prime_numbers = [2]\n    for\
    \ i in 3:n\n        is_prime = true\n        for j in prime_numbers\n        \
    \    if i % j == 0\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime\n            push!(prime_numbers,\
    \ i)\n        end\n    end\n    return prime_numbers\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpic526rm_.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpic526rm_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpic526rm_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpic526rm_.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpic526rm_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpic526rm_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpic526rm_.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpic526rm_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpic526rm_.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpic526rm_.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpic526rm_.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpic526rm_.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    if n == 2\n        return [2]\n\
    \    end\n    if n == 3\n        return [2, 3]\n    end\n    if n == 4\n     \
    \   return [2, 3]\n    end\n    if n == 5\n        return [2, 3, 5]\n    end\n\
    \    if n == 6\n        return [2, 3, 5]\n    end\n    if n == 7\n        return\
    \ [2, 3, 5, 7]\n    end\n    if n == 8\n        return [2, 3, 5, 7]\n    end\n\
    \    if n == 9\n        return [2, 3, 5, 7]\n    end\n    if n == 10\n       \
    \ return [2, 3, 5, 7]\n    end\n    if n == 11\n        return [2, 3, 5, 7, 11]\n\
    \    end\n    if n == 12\n        return [2, 3, 5, 7, 11]\n    end\n    if n ==\
    \ 13\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 14\n        return\
    \ [2, 3, 5, 7, 11, 13]\n    end\n    if n == 15\n        return [2, 3, 5, 7, 11,\
    \ 13]\n    end\n    if n == 16\n        return [2, 3, 5, 7, 11, 13]\n    end\n\
    \    if n == 17\n        return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n ==\
    \ 18\n        return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 19\n     \
    \   return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if n == 20\n        return\
    \ [2, 3, 5, 7, 11, 13, 17, 19]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2poggcht.jl:84\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2poggcht.jl:84 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2poggcht.jl:83\ntest set: Test\
    \ Failed at /tmp/tmp2poggcht.jl:86\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2poggcht.jl:86 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2poggcht.jl:83\ntest set: Error\
    \ During Test at /tmp/tmp2poggcht.jl:89\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp2poggcht.jl:76\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2poggcht.jl:89 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2poggcht.jl:83\ntest set:"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2poggcht.jl:81\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4et9fwn.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4et9fwn.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4et9fwn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4et9fwn.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4et9fwn.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4et9fwn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4et9fwn.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4et9fwn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4et9fwn.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4et9fwn.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4et9fwn.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4et9fwn.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0bamir8v.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bamir8v.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bamir8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0bamir8v.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bamir8v.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bamir8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0bamir8v.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bamir8v.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bamir8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0bamir8v.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bamir8v.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0bamir8v.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8dytt7k.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8dytt7k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8dytt7k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_8dytt7k.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8dytt7k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8dytt7k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_8dytt7k.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8dytt7k.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8dytt7k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_8dytt7k.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8dytt7k.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8dytt7k.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    prime_numbers = [2]\n    for\
    \ i in 3:n\n        is_prime = true\n        for j in prime_numbers\n        \
    \    if i % j == 0\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime\n            push!(prime_numbers,\
    \ i)\n        end\n    end\n    return prime_numbers\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqmshs7o8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqmshs7o8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqmshs7o8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqmshs7o8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqmshs7o8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqmshs7o8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqmshs7o8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqmshs7o8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqmshs7o8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpqmshs7o8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqmshs7o8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqmshs7o8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf3j2jegf.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3j2jegf.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3j2jegf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf3j2jegf.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3j2jegf.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3j2jegf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf3j2jegf.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3j2jegf.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3j2jegf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf3j2jegf.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3j2jegf.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf3j2jegf.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt6r0if8y.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6r0if8y.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6r0if8y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6r0if8y.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6r0if8y.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6r0if8y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6r0if8y.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6r0if8y.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6r0if8y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpt6r0if8y.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6r0if8y.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6r0if8y.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnhj0beg1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpnhj0beg1.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnhj0beg1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnhj0beg1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnhj0beg1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpnhj0beg1.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnhj0beg1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnhj0beg1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf0jby10i.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0jby10i.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0jby10i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf0jby10i.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0jby10i.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0jby10i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf0jby10i.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0jby10i.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf0jby10i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf0jby10i.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf0jby10i.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf0jby10i.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4_ri0c6f.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_ri0c6f.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_ri0c6f.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4_ri0c6f.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_ri0c6f.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_ri0c6f.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4_ri0c6f.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_ri0c6f.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_ri0c6f.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4_ri0c6f.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_ri0c6f.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_ri0c6f.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuwf4mv63.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwf4mv63.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwf4mv63.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuwf4mv63.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwf4mv63.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwf4mv63.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuwf4mv63.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwf4mv63.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwf4mv63.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpuwf4mv63.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwf4mv63.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuwf4mv63.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3fxqzhyx.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fxqzhyx.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fxqzhyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp3fxqzhyx.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fxqzhyx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fxqzhyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp3fxqzhyx.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fxqzhyx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fxqzhyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp3fxqzhyx.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fxqzhyx.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fxqzhyx.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnxzo8uci.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzo8uci.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzo8uci.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpnxzo8uci.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzo8uci.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzo8uci.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpnxzo8uci.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzo8uci.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzo8uci.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpnxzo8uci.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzo8uci.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnxzo8uci.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprvb6esab.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvb6esab.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvb6esab.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprvb6esab.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvb6esab.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvb6esab.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprvb6esab.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvb6esab.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvb6esab.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprvb6esab.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvb6esab.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvb6esab.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = [2]\n    for i\
    \ in 3:n\n        is_prime = true\n        for j in primes\n            if i %\
    \ j == 0\n                is_prime = false\n                break\n          \
    \  end\n        end\n        if is_prime\n            push!(primes, i)\n     \
    \   end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ev8_c2z.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ev8_c2z.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ev8_c2z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8ev8_c2z.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ev8_c2z.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ev8_c2z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8ev8_c2z.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ev8_c2z.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ev8_c2z.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8ev8_c2z.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ev8_c2z.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ev8_c2z.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp955v3gow.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp955v3gow.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp955v3gow.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp955v3gow.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp955v3gow.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp955v3gow.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp955v3gow.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp955v3gow.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp955v3gow.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp955v3gow.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp955v3gow.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp955v3gow.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0mab53kw.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mab53kw.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mab53kw.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0mab53kw.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mab53kw.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mab53kw.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0mab53kw.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mab53kw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mab53kw.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp0mab53kw.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mab53kw.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0mab53kw.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjmkwy305.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmkwy305.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmkwy305.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpjmkwy305.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmkwy305.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmkwy305.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpjmkwy305.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmkwy305.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmkwy305.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpjmkwy305.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmkwy305.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmkwy305.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpudlq0qcr.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpudlq0qcr.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpudlq0qcr.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpudlq0qcr.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpudlq0qcr.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpudlq0qcr.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpudlq0qcr.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpudlq0qcr.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpudlq0qcr.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9ot0x88.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9ot0x88.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9ot0x88.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe9ot0x88.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9ot0x88.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9ot0x88.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe9ot0x88.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9ot0x88.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9ot0x88.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe9ot0x88.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9ot0x88.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9ot0x88.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponqh3bpt.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponqh3bpt.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponqh3bpt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmponqh3bpt.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponqh3bpt.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponqh3bpt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmponqh3bpt.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponqh3bpt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmponqh3bpt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmponqh3bpt.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmponqh3bpt.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponqh3bpt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyjhzcqdj.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhzcqdj.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjhzcqdj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyjhzcqdj.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhzcqdj.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjhzcqdj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyjhzcqdj.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhzcqdj.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjhzcqdj.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyjhzcqdj.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjhzcqdj.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyjhzcqdj.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmmuw9jay.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmuw9jay.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmuw9jay.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmmuw9jay.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmuw9jay.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmuw9jay.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmmuw9jay.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmuw9jay.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmuw9jay.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmmuw9jay.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmuw9jay.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmuw9jay.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprwaxsjal.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwaxsjal.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwaxsjal.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprwaxsjal.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwaxsjal.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwaxsjal.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprwaxsjal.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwaxsjal.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwaxsjal.jl:40\ntest set: Test\
    \ Failed at /tmp/tmprwaxsjal.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwaxsjal.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwaxsjal.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5qndmyx8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qndmyx8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qndmyx8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5qndmyx8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qndmyx8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qndmyx8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5qndmyx8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qndmyx8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qndmyx8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5qndmyx8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qndmyx8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5qndmyx8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7itw1f3v.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7itw1f3v.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7itw1f3v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7itw1f3v.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7itw1f3v.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7itw1f3v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7itw1f3v.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7itw1f3v.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7itw1f3v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7itw1f3v.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7itw1f3v.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7itw1f3v.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    result = [2]\n    for i in 3:2:n\n\
    \        is_prime = true\n        for j in result\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(result, i)\n        end\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2kt0ilf.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2kt0ilf.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu2kt0ilf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpu2kt0ilf.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2kt0ilf.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu2kt0ilf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpu2kt0ilf.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2kt0ilf.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu2kt0ilf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpu2kt0ilf.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2kt0ilf.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2kt0ilf.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcca9ful0.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpcca9ful0.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpcca9ful0.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpcca9ful0.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpcca9ful0.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpcca9ful0.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpcca9ful0.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpcca9ful0.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcca9ful0.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbytazocy.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbytazocy.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbytazocy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbytazocy.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbytazocy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbytazocy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbytazocy.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbytazocy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbytazocy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbytazocy.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbytazocy.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbytazocy.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = [2]\n    for i\
    \ in 3:n\n        is_prime = true\n        for j in primes\n            if i %\
    \ j == 0\n                is_prime = false\n                break\n          \
    \  end\n        end\n        if is_prime\n            push!(primes, i)\n     \
    \   end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59ady7my.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59ady7my.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59ady7my.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp59ady7my.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59ady7my.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59ady7my.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp59ady7my.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59ady7my.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59ady7my.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp59ady7my.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59ady7my.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59ady7my.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63el59h1.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63el59h1.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63el59h1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63el59h1.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63el59h1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63el59h1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63el59h1.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63el59h1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63el59h1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp63el59h1.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63el59h1.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63el59h1.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeltmxdx0.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeltmxdx0.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeltmxdx0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpeltmxdx0.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeltmxdx0.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeltmxdx0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpeltmxdx0.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeltmxdx0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeltmxdx0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpeltmxdx0.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeltmxdx0.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeltmxdx0.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n<=1\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i%j == 0\n \
    \               is_prime = false\n                break\n            end\n   \
    \     end\n        if is_prime\n            push!(primes, i)\n        end\n  \
    \  end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk73vqj9o.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk73vqj9o.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk73vqj9o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpk73vqj9o.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk73vqj9o.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk73vqj9o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpk73vqj9o.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk73vqj9o.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk73vqj9o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpk73vqj9o.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk73vqj9o.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk73vqj9o.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp80lct2f3.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80lct2f3.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80lct2f3.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp80lct2f3.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80lct2f3.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80lct2f3.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp80lct2f3.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80lct2f3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp80lct2f3.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp80lct2f3.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp80lct2f3.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80lct2f3.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw7s3zqrl.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7s3zqrl.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7s3zqrl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpw7s3zqrl.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7s3zqrl.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7s3zqrl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpw7s3zqrl.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7s3zqrl.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7s3zqrl.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpw7s3zqrl.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7s3zqrl.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7s3zqrl.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8vrh05d2.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vrh05d2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vrh05d2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8vrh05d2.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vrh05d2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vrh05d2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8vrh05d2.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vrh05d2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vrh05d2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8vrh05d2.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vrh05d2.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8vrh05d2.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppn6pk6vs.jl:87\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppn6pk6vs.jl:87 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppn6pk6vs.jl:86\ntest set: Test\
    \ Failed at /tmp/tmppn6pk6vs.jl:89\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppn6pk6vs.jl:89 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppn6pk6vs.jl:86\ntest set: Error\
    \ During Test at /tmp/tmppn6pk6vs.jl:92\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppn6pk6vs.jl:79\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppn6pk6vs.jl:92 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppn6pk6vs.jl:86\ntest set:"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppn6pk6vs.jl:84\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsawkjh41.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsawkjh41.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsawkjh41.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsawkjh41.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsawkjh41.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsawkjh41.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsawkjh41.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsawkjh41.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsawkjh41.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsawkjh41.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsawkjh41.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsawkjh41.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45sl_m0x.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45sl_m0x.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45sl_m0x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp45sl_m0x.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45sl_m0x.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45sl_m0x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp45sl_m0x.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45sl_m0x.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45sl_m0x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp45sl_m0x.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45sl_m0x.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45sl_m0x.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc55yvwf7.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc55yvwf7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc55yvwf7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc55yvwf7.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc55yvwf7.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc55yvwf7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc55yvwf7.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc55yvwf7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc55yvwf7.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc55yvwf7.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc55yvwf7.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc55yvwf7.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo7gyh38k.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7gyh38k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7gyh38k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo7gyh38k.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7gyh38k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7gyh38k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo7gyh38k.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7gyh38k.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7gyh38k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo7gyh38k.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7gyh38k.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo7gyh38k.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd_n0hzk8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_n0hzk8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_n0hzk8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd_n0hzk8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_n0hzk8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_n0hzk8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd_n0hzk8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_n0hzk8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_n0hzk8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd_n0hzk8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_n0hzk8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_n0hzk8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4pkqcfwx.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pkqcfwx.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pkqcfwx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4pkqcfwx.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pkqcfwx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pkqcfwx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4pkqcfwx.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pkqcfwx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pkqcfwx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp4pkqcfwx.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pkqcfwx.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4pkqcfwx.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps6mt71e4.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6mt71e4.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6mt71e4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmps6mt71e4.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6mt71e4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6mt71e4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmps6mt71e4.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6mt71e4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6mt71e4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmps6mt71e4.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6mt71e4.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps6mt71e4.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvz8oi_cy.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvz8oi_cy.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvz8oi_cy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvz8oi_cy.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvz8oi_cy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvz8oi_cy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvz8oi_cy.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvz8oi_cy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvz8oi_cy.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpvz8oi_cy.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvz8oi_cy.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvz8oi_cy.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdd1pn07b.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd1pn07b.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd1pn07b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdd1pn07b.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd1pn07b.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd1pn07b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdd1pn07b.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd1pn07b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd1pn07b.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpdd1pn07b.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd1pn07b.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdd1pn07b.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zb6kzcf.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zb6kzcf.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zb6kzcf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2zb6kzcf.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zb6kzcf.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zb6kzcf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2zb6kzcf.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zb6kzcf.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zb6kzcf.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2zb6kzcf.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zb6kzcf.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zb6kzcf.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgvmxshsm.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgvmxshsm.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgvmxshsm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgvmxshsm.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgvmxshsm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgvmxshsm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgvmxshsm.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgvmxshsm.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgvmxshsm.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpgvmxshsm.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgvmxshsm.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvmxshsm.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpudn1rtvg.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpudn1rtvg.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpudn1rtvg.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpudn1rtvg.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpudn1rtvg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpudn1rtvg.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpudn1rtvg.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpudn1rtvg.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpudn1rtvg.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpudn1rtvg.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpudn1rtvg.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpudn1rtvg.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoitfb9li.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoitfb9li.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoitfb9li.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpoitfb9li.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoitfb9li.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoitfb9li.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpoitfb9li.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoitfb9li.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoitfb9li.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpoitfb9li.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoitfb9li.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoitfb9li.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp763dkthp.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp763dkthp.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp763dkthp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp763dkthp.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp763dkthp.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp763dkthp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp763dkthp.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp763dkthp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp763dkthp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp763dkthp.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp763dkthp.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp763dkthp.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4_lmkdz.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4_lmkdz.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4_lmkdz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4_lmkdz.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4_lmkdz.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4_lmkdz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4_lmkdz.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4_lmkdz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf4_lmkdz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf4_lmkdz.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf4_lmkdz.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4_lmkdz.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9284ygp.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9284ygp.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9284ygp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc9284ygp.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9284ygp.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9284ygp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc9284ygp.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9284ygp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9284ygp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpc9284ygp.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9284ygp.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9284ygp.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo71m_28p.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo71m_28p.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo71m_28p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo71m_28p.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo71m_28p.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo71m_28p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo71m_28p.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo71m_28p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo71m_28p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpo71m_28p.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo71m_28p.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo71m_28p.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpx4t4n1cf.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpx4t4n1cf.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpx4t4n1cf.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpx4t4n1cf.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpx4t4n1cf.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpx4t4n1cf.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpx4t4n1cf.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpx4t4n1cf.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx4t4n1cf.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyvof2i35.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyvof2i35.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyvof2i35.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyvof2i35.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyvof2i35.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyvof2i35.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyvof2i35.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyvof2i35.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyvof2i35.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpyvof2i35.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyvof2i35.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvof2i35.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3z4asa15.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3z4asa15.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3z4asa15.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmp3z4asa15.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3z4asa15.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3z4asa15.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmp3z4asa15.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmp3z4asa15.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3z4asa15.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2tejeeqz.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tejeeqz.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tejeeqz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2tejeeqz.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tejeeqz.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tejeeqz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2tejeeqz.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tejeeqz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tejeeqz.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2tejeeqz.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tejeeqz.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tejeeqz.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbp_7fyx.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbp_7fyx.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbp_7fyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmphbp_7fyx.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbp_7fyx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbp_7fyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmphbp_7fyx.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbp_7fyx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbp_7fyx.jl:40\ntest set: Test\
    \ Failed at /tmp/tmphbp_7fyx.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbp_7fyx.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbp_7fyx.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    primes = Vector{Int64}()\n    for i in 2:n\n        if isprime(i)\n  \
    \          push!(primes, i)\n        end\n    end\n    return primes\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) ==\
    \ [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3,\
    \ 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9iljgki_.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp9iljgki_.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9iljgki_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9iljgki_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9iljgki_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp9iljgki_.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9iljgki_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9iljgki_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9iljgki_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp9iljgki_.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9iljgki_.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9iljgki_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9iljgki_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp9iljgki_.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9iljgki_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzh3ljbcp.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpzh3ljbcp.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpzh3ljbcp.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpzh3ljbcp.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpzh3ljbcp.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpzh3ljbcp.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpzh3ljbcp.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpzh3ljbcp.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzh3ljbcp.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        if isprime(i)\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcp6i3gxt.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcp6i3gxt.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcp6i3gxt.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcp6i3gxt.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcp6i3gxt.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcp6i3gxt.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcp6i3gxt.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcp6i3gxt.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcp6i3gxt.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcp6i3gxt.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcp6i3gxt.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcp6i3gxt.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcp6i3gxt.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpcp6i3gxt.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcp6i3gxt.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5rv083gh.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp5rv083gh.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp5rv083gh.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmp5rv083gh.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp5rv083gh.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp5rv083gh.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmp5rv083gh.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmp5rv083gh.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5rv083gh.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5y90mji2.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y90mji2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y90mji2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5y90mji2.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y90mji2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y90mji2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5y90mji2.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y90mji2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5y90mji2.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp5y90mji2.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5y90mji2.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5y90mji2.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7mvie4v8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mvie4v8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mvie4v8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7mvie4v8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mvie4v8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mvie4v8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7mvie4v8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mvie4v8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mvie4v8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7mvie4v8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mvie4v8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mvie4v8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3mjim_av.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3mjim_av.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3mjim_av.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmp3mjim_av.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3mjim_av.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3mjim_av.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmp3mjim_av.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmp3mjim_av.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3mjim_av.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2jnc4q7d.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2jnc4q7d.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2jnc4q7d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2jnc4q7d.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2jnc4q7d.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2jnc4q7d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2jnc4q7d.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2jnc4q7d.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2jnc4q7d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2jnc4q7d.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2jnc4q7d.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jnc4q7d.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Vector{Int64}(undef,\
    \ n)\n    primes[1] = 2\n    count = 1\n    for i in 3:2:n\n        is_prime =\
    \ true\n        for j in 1:count\n            if i % primes[j] == 0\n        \
    \        is_prime = false\n                break\n            end\n        end\n\
    \        if is_prime\n            count += 1\n            primes[count] = i\n\
    \        end\n    end\n    return primes[1:count]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgf8w15qy.jl:44\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgf8w15qy.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgf8w15qy.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpgf8w15qy.jl:46\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgf8w15qy.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgf8w15qy.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpgf8w15qy.jl:52\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgf8w15qy.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgf8w15qy.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpgf8w15qy.jl:53\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgf8w15qy.jl:53 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgf8w15qy.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwpq1us6w.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpq1us6w.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpq1us6w.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwpq1us6w.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpq1us6w.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpq1us6w.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwpq1us6w.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpq1us6w.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpq1us6w.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwpq1us6w.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpq1us6w.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpq1us6w.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr2igvj_p.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2igvj_p.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2igvj_p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpr2igvj_p.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2igvj_p.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2igvj_p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpr2igvj_p.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2igvj_p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2igvj_p.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpr2igvj_p.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2igvj_p.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2igvj_p.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpopbbhd6x.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopbbhd6x.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopbbhd6x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpopbbhd6x.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopbbhd6x.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopbbhd6x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpopbbhd6x.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopbbhd6x.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopbbhd6x.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpopbbhd6x.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopbbhd6x.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpopbbhd6x.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkhoeea4d.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkhoeea4d.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkhoeea4d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkhoeea4d.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkhoeea4d.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkhoeea4d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkhoeea4d.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkhoeea4d.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkhoeea4d.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkhoeea4d.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkhoeea4d.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkhoeea4d.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_xwwbokp.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_xwwbokp.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_xwwbokp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_xwwbokp.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_xwwbokp.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_xwwbokp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_xwwbokp.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_xwwbokp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_xwwbokp.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_xwwbokp.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_xwwbokp.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xwwbokp.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppbx9dkth.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppbx9dkth.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppbx9dkth.jl:40\ntest set: Test\
    \ Failed at /tmp/tmppbx9dkth.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppbx9dkth.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppbx9dkth.jl:40\ntest set: Test\
    \ Failed at /tmp/tmppbx9dkth.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppbx9dkth.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppbx9dkth.jl:40\ntest set: Test\
    \ Failed at /tmp/tmppbx9dkth.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppbx9dkth.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbx9dkth.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn8gb3n0i.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8gb3n0i.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn8gb3n0i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn8gb3n0i.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8gb3n0i.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn8gb3n0i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn8gb3n0i.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8gb3n0i.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn8gb3n0i.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpn8gb3n0i.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8gb3n0i.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8gb3n0i.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpytux8p4u.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytux8p4u.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytux8p4u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpytux8p4u.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytux8p4u.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytux8p4u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpytux8p4u.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytux8p4u.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytux8p4u.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpytux8p4u.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytux8p4u.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpytux8p4u.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplh5zrqx4.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh5zrqx4.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh5zrqx4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplh5zrqx4.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh5zrqx4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh5zrqx4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplh5zrqx4.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh5zrqx4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh5zrqx4.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplh5zrqx4.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh5zrqx4.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplh5zrqx4.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7vy891kd.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vy891kd.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vy891kd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7vy891kd.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vy891kd.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vy891kd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7vy891kd.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vy891kd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vy891kd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7vy891kd.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vy891kd.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7vy891kd.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd13vwndq.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd13vwndq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd13vwndq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd13vwndq.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd13vwndq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd13vwndq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd13vwndq.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd13vwndq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd13vwndq.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd13vwndq.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd13vwndq.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd13vwndq.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp1bnwp6q.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1bnwp6q.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1bnwp6q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp1bnwp6q.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1bnwp6q.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1bnwp6q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp1bnwp6q.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1bnwp6q.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1bnwp6q.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp1bnwp6q.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1bnwp6q.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp1bnwp6q.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_yp18o6o.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yp18o6o.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yp18o6o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_yp18o6o.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yp18o6o.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yp18o6o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_yp18o6o.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yp18o6o.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yp18o6o.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp_yp18o6o.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yp18o6o.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_yp18o6o.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return Int64[]\n    end\n    if n == 1\n        return\
    \ Int64[]\n    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n\
    \        return [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n\
    \    if n == 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return\
    \ [2, 3, 5]\n    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n  \
    \  if n == 8\n        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return\
    \ [2, 3, 5, 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n\
    \    if n == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n  \
    \      return [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3,\
    \ 5, 7, 11, 13]\n    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 16\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n    \
    \    return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return\
    \ [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5,\
    \ 7, 11, 13, 17, 19]\n    end\n    if n == 20\n        return [2, 3, 5, 7, 11,\
    \ 13, 17, 19]\n    end\n    if n == 21\n        return [2, 3, 5, 7, 11, 13, 17,\
    \ 19]\n    end\n    if n == 22\n        return [2, 3, 5, 7, 11, 13, 17,\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) ==\
    \ [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3,\
    \ 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpajg394t2.jl:88\nin expression starting at\
    \ /tmp/tmpajg394t2.jl:88\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxoctdb_8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoctdb_8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoctdb_8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxoctdb_8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoctdb_8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoctdb_8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxoctdb_8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoctdb_8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoctdb_8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxoctdb_8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoctdb_8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxoctdb_8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpffdb339g.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpffdb339g.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpffdb339g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpffdb339g.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpffdb339g.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpffdb339g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpffdb339g.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpffdb339g.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpffdb339g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpffdb339g.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpffdb339g.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpffdb339g.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsq70wczd.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq70wczd.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq70wczd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsq70wczd.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq70wczd.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq70wczd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsq70wczd.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq70wczd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq70wczd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsq70wczd.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq70wczd.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsq70wczd.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    primes = []\n    for i in 2:n\n        if isprime(i)\n            push!(primes,\
    \ i)\n        end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzs0d1ink.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpzs0d1ink.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzs0d1ink.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzs0d1ink.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpzs0d1ink.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpzs0d1ink.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzs0d1ink.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzs0d1ink.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpzs0d1ink.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpzs0d1ink.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzs0d1ink.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzs0d1ink.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpzs0d1ink.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpzs0d1ink.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzs0d1ink.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmvssbpr6.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvssbpr6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvssbpr6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmvssbpr6.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvssbpr6.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvssbpr6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmvssbpr6.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvssbpr6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvssbpr6.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpmvssbpr6.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvssbpr6.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmvssbpr6.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpx4x58gmb.jl:87\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpx4x58gmb.jl:87 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpx4x58gmb.jl:86\\ntest set: Test\
    \ Failed at /tmp/tmpx4x58gmb.jl:89\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpx4x58gmb.jl:89 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpx4x58gmb.jl:86\\ntest set: Error\
    \ During Test at /tmp/tmpx4x58gmb.jl:92\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpx4x58gmb.jl:79\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx4x58gmb.jl:92 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level s"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpx4x58gmb.jl:84\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3_x2z19.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3_x2z19.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3_x2z19.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe3_x2z19.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3_x2z19.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3_x2z19.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe3_x2z19.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3_x2z19.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3_x2z19.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpe3_x2z19.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3_x2z19.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3_x2z19.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    result = []\n    for i in 2:n\n        if isprime(i)\n            push!(result,\
    \ i)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5zi2462o.jl:31\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5zi2462o.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zi2462o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zi2462o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5zi2462o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5zi2462o.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zi2462o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zi2462o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5zi2462o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5zi2462o.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zi2462o.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zi2462o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5zi2462o.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5zi2462o.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zi2462o.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkr2g3z01.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkr2g3z01.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkr2g3z01.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkr2g3z01.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkr2g3z01.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkr2g3z01.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkr2g3z01.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkr2g3z01.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkr2g3z01.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpkr2g3z01.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkr2g3z01.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkr2g3z01.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9qjw8g6k.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qjw8g6k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9qjw8g6k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9qjw8g6k.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qjw8g6k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9qjw8g6k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9qjw8g6k.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qjw8g6k.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9qjw8g6k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp9qjw8g6k.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qjw8g6k.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qjw8g6k.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5bte4x26.jl:87\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bte4x26.jl:87 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bte4x26.jl:86\ntest set: Test\
    \ Failed at /tmp/tmp5bte4x26.jl:89\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5bte4x26.jl:89 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5bte4x26.jl:86\ntest set: Error\
    \ During Test at /tmp/tmp5bte4x26.jl:92\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5bte4x26.jl:79\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5bte4x26.jl:92 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5bte4x26.jl:86\ntest set:"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5bte4x26.jl:84\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwitp67ac.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwitp67ac.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwitp67ac.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwitp67ac.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwitp67ac.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwitp67ac.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwitp67ac.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwitp67ac.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwitp67ac.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwitp67ac.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwitp67ac.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwitp67ac.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2nm5z_qt.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2nm5z_qt.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2nm5z_qt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2nm5z_qt.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2nm5z_qt.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2nm5z_qt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2nm5z_qt.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2nm5z_qt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2nm5z_qt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp2nm5z_qt.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2nm5z_qt.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2nm5z_qt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd684lf21.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd684lf21.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd684lf21.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd684lf21.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd684lf21.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd684lf21.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd684lf21.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd684lf21.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd684lf21.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpd684lf21.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd684lf21.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd684lf21.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6lomxot1.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lomxot1.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lomxot1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6lomxot1.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lomxot1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lomxot1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6lomxot1.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lomxot1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lomxot1.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6lomxot1.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lomxot1.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6lomxot1.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplac03t94.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplac03t94.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplac03t94.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplac03t94.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplac03t94.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplac03t94.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplac03t94.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplac03t94.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplac03t94.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplac03t94.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplac03t94.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplac03t94.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7skm17xd.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7skm17xd.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7skm17xd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7skm17xd.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7skm17xd.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7skm17xd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7skm17xd.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7skm17xd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7skm17xd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7skm17xd.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7skm17xd.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7skm17xd.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gsicxqk.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6gsicxqk.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6gsicxqk.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6gsicxqk.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6gsicxqk.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6gsicxqk.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6gsicxqk.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6gsicxqk.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6gsicxqk.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp6gsicxqk.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6gsicxqk.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gsicxqk.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl_pbn0yd.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl_pbn0yd.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl_pbn0yd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpl_pbn0yd.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl_pbn0yd.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl_pbn0yd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpl_pbn0yd.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl_pbn0yd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl_pbn0yd.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpl_pbn0yd.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl_pbn0yd.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl_pbn0yd.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfziatgkv.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfziatgkv.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfziatgkv.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfziatgkv.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfziatgkv.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfziatgkv.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfziatgkv.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfziatgkv.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfziatgkv.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpfziatgkv.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfziatgkv.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfziatgkv.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8oqlnljt.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8oqlnljt.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8oqlnljt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8oqlnljt.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8oqlnljt.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8oqlnljt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8oqlnljt.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8oqlnljt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8oqlnljt.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8oqlnljt.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8oqlnljt.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8oqlnljt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsttddtr5.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttddtr5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsttddtr5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsttddtr5.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttddtr5.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsttddtr5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsttddtr5.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttddtr5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsttddtr5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsttddtr5.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttddtr5.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsttddtr5.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return Int64[]\n    end\n    if n == 1\n        return\
    \ Int64[]\n    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n\
    \        return [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n\
    \    if n == 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return\
    \ [2, 3, 5]\n    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n  \
    \  if n == 8\n        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return\
    \ [2, 3, 5, 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n\
    \    if n == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n  \
    \      return [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3,\
    \ 5, 7, 11, 13]\n    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 16\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n    \
    \    return [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return\
    \ [2, 3, 5, 7, 11, 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5,\
    \ 7, 11, 13, 17, 19]\n    end\n    if n == 20\n        return [2, 3, 5, 7, 11,\
    \ 13, 17, 19]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqa0fzraz.jl:87\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa0fzraz.jl:87 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa0fzraz.jl:86\ntest set: Test\
    \ Failed at /tmp/tmpqa0fzraz.jl:89\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqa0fzraz.jl:89 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqa0fzraz.jl:86\ntest set: Error\
    \ During Test at /tmp/tmpqa0fzraz.jl:92\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpqa0fzraz.jl:79\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqa0fzraz.jl:92 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqa0fzraz.jl:86\ntest set:"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqa0fzraz.jl:84\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_qqpd_k.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_qqpd_k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_qqpd_k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf_qqpd_k.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_qqpd_k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_qqpd_k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf_qqpd_k.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_qqpd_k.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_qqpd_k.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpf_qqpd_k.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_qqpd_k.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_qqpd_k.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for p in primes\n            if i % p == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsor1p66y.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsor1p66y.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsor1p66y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsor1p66y.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsor1p66y.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsor1p66y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsor1p66y.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsor1p66y.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsor1p66y.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsor1p66y.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsor1p66y.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsor1p66y.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsp7mwaq8.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsp7mwaq8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsp7mwaq8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsp7mwaq8.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsp7mwaq8.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsp7mwaq8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsp7mwaq8.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsp7mwaq8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsp7mwaq8.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpsp7mwaq8.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsp7mwaq8.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsp7mwaq8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplur_ee68.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplur_ee68.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplur_ee68.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplur_ee68.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplur_ee68.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplur_ee68.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplur_ee68.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplur_ee68.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplur_ee68.jl:40\ntest set: Test\
    \ Failed at /tmp/tmplur_ee68.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplur_ee68.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplur_ee68.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4h7rh93d.jl:34\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4h7rh93d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h7rh93d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h7rh93d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4h7rh93d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4h7rh93d.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h7rh93d.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h7rh93d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4h7rh93d.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4h7rh93d.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h7rh93d.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h7rh93d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4h7rh93d.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4h7rh93d.jl:23\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4h7rh93d.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbkkdg3l5.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkkdg3l5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbkkdg3l5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbkkdg3l5.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkkdg3l5.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbkkdg3l5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbkkdg3l5.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkkdg3l5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbkkdg3l5.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpbkkdg3l5.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkkdg3l5.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbkkdg3l5.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwjye98ly.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwjye98ly.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwjye98ly.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwjye98ly.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwjye98ly.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwjye98ly.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwjye98ly.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwjye98ly.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwjye98ly.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpwjye98ly.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwjye98ly.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwjye98ly.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    \    if n == 21\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n    if\
    \ n == 22\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n   \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9h7s23oj.jl:1\nin expression starting at /tmp/tmp9h7s23oj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp220qyxs0.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp220qyxs0.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp220qyxs0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp220qyxs0.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp220qyxs0.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp220qyxs0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp220qyxs0.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp220qyxs0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp220qyxs0.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp220qyxs0.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp220qyxs0.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp220qyxs0.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp836z0zh.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp836z0zh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp836z0zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp836z0zh.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp836z0zh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp836z0zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp836z0zh.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp836z0zh.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp836z0zh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpp836z0zh.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp836z0zh.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp836z0zh.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2, 3]\n    end\n    if n == 4\n        return [2, 3]\n    end\n    if n ==\
    \ 5\n        return [2, 3, 5]\n    end\n    if n == 6\n        return [2, 3, 5]\n\
    \    end\n    if n == 7\n        return [2, 3, 5, 7]\n    end\n    if n == 8\n\
    \        return [2, 3, 5, 7]\n    end\n    if n == 9\n        return [2, 3, 5,\
    \ 7]\n    end\n    if n == 10\n        return [2, 3, 5, 7]\n    end\n    if n\
    \ == 11\n        return [2, 3, 5, 7, 11]\n    end\n    if n == 12\n        return\
    \ [2, 3, 5, 7, 11]\n    end\n    if n == 13\n        return [2, 3, 5, 7, 11, 13]\n\
    \    end\n    if n == 14\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if\
    \ n == 15\n        return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 16\n    \
    \    return [2, 3, 5, 7, 11, 13]\n    end\n    if n == 17\n        return [2,\
    \ 3, 5, 7, 11, 13, 17]\n    end\n    if n == 18\n        return [2, 3, 5, 7, 11,\
    \ 13, 17]\n    end\n    if n == 19\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n\
    \    end\n    if n == 20\n        return [2, 3, 5, 7, 11, 13, 17, 19]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp007fw6jr.jl:87\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp007fw6jr.jl:87 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp007fw6jr.jl:86\ntest set: Test\
    \ Failed at /tmp/tmp007fw6jr.jl:89\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp007fw6jr.jl:89 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp007fw6jr.jl:86\ntest set: Error\
    \ During Test at /tmp/tmp007fw6jr.jl:92\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp007fw6jr.jl:79\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp007fw6jr.jl:92 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp007fw6jr.jl:86\ntest set:"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp007fw6jr.jl:84\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcvehnbva.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcvehnbva.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcvehnbva.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcvehnbva.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcvehnbva.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcvehnbva.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcvehnbva.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcvehnbva.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcvehnbva.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpcvehnbva.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcvehnbva.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvehnbva.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    >>> count_up_to(5)\n    [2, 3]\n    >>> count_up_to(11)\n\
    \    [2, 3, 5, 7]\n    >>> count_up_to(0)\n    []\n    >>> count_up_to(20)\n \
    \   [2, 3, 5, 7, 11, 13, 17, 19]\n    >>> count_up_to(1)\n    []\n    >>> count_up_to(18)\n\
    \    [2, 3, 5, 7, 11, 13, 17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx4r0uj58.jl:41\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4r0uj58.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4r0uj58.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx4r0uj58.jl:43\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4r0uj58.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4r0uj58.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx4r0uj58.jl:49\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4r0uj58.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4r0uj58.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpx4r0uj58.jl:50\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4r0uj58.jl:50 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx4r0uj58.jl:38\n"
  exit_code: 1
  status: SyntaxError

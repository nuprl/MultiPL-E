name: HumanEval_67_fruit_distribution
language: jl
results:
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwnfvvuh0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwnfvvuh0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwnfvvuh0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwnfvvuh0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwnfvvuh0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwnfvvuh0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwnfvvuh0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwnfvvuh0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzgajw683.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgajw683.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgajw683.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzgajw683.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgajw683.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgajw683.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzgajw683.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgajw683.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgajw683.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzgajw683.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgajw683.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgajw683.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzgajw683.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzgajw683.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz9l3smjh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz9l3smjh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz9l3smjh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz9l3smjh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz9l3smjh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz9l3smjh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz9l3smjh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz9l3smjh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbf2_7iru.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbf2_7iru.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbf2_7iru.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbf2_7iru.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbf2_7iru.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbf2_7iru.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbf2_7iru.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbf2_7iru.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphoaf_1dz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmphoaf_1dz.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphoaf_1dz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphoaf_1dz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmphoaf_1dz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmphoaf_1dz.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphoaf_1dz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphoaf_1dz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_4892b3d.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_4892b3d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_4892b3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_4892b3d.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_4892b3d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_4892b3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_4892b3d.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_4892b3d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_4892b3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_4892b3d.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_4892b3d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_4892b3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_4892b3d.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_4892b3d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph7gw4uw0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmph7gw4uw0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7gw4uw0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7gw4uw0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmph7gw4uw0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmph7gw4uw0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7gw4uw0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7gw4uw0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7xu3nxtz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7xu3nxtz.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xu3nxtz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xu3nxtz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7xu3nxtz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7xu3nxtz.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xu3nxtz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xu3nxtz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfisdkrx7.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfisdkrx7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfisdkrx7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfisdkrx7.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfisdkrx7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfisdkrx7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfisdkrx7.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfisdkrx7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfisdkrx7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfisdkrx7.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfisdkrx7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfisdkrx7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfisdkrx7.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfisdkrx7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa_tbsn3h.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpa_tbsn3h.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa_tbsn3h.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa_tbsn3h.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa_tbsn3h.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpa_tbsn3h.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa_tbsn3h.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_tbsn3h.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpksziy7wg.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksziy7wg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksziy7wg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpksziy7wg.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksziy7wg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksziy7wg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpksziy7wg.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksziy7wg.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksziy7wg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpksziy7wg.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksziy7wg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksziy7wg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpksziy7wg.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpksziy7wg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    a, o = map(parse, split(s, \" \"))\n    return n - a - o\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = fruit_distribution;\n\t@test(candidate(\"5 apples\
    \ and 6 oranges\", 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21)\
    \ == 10)\n\t@test(candidate(\"0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"\
    1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"\
    1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuer1vtg4.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ no method matching parse(::SubString{String})\n  Closest candidates are:\n \
    \   parse(!Matched::Type{T}, !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\n\
    \    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collect_similar\n  \
    \   @ ./array.jl:653 [inlined]\n   [4] map\n     @ ./abstractarray.jl:2867 [inlined]\n\
    \   [5] fruit_distribution(s::String, n::Int64)\n     @ Main /tmp/tmpuer1vtg4.jl:18\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpuer1vtg4.jl:26 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpuer1vtg4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpuer1vtg4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: no method matching\
    \ parse(::SubString{String})\n  Closest candidates are:\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\n\
    \    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\n\
    \    ...\n  Stacktrace:\n   [1] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [2] _collect\n     @ ./array.jl:744 [inlined]\n   [3] collec"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuer1vtg4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpubk8cmc0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpubk8cmc0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubk8cmc0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubk8cmc0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpubk8cmc0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpubk8cmc0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubk8cmc0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubk8cmc0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdeoemebj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdeoemebj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdeoemebj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdeoemebj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdeoemebj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdeoemebj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdeoemebj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdeoemebj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzbnmmtgq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpzbnmmtgq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzbnmmtgq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzbnmmtgq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpzbnmmtgq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpzbnmmtgq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzbnmmtgq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzbnmmtgq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi8adszat.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpi8adszat.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi8adszat.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi8adszat.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi8adszat.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpi8adszat.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi8adszat.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8adszat.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf1_i2z5b.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_i2z5b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_i2z5b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf1_i2z5b.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_i2z5b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_i2z5b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf1_i2z5b.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_i2z5b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_i2z5b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf1_i2z5b.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1_i2z5b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1_i2z5b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf1_i2z5b.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf1_i2z5b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmjspz9_6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpmjspz9_6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmjspz9_6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmjspz9_6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpmjspz9_6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpmjspz9_6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmjspz9_6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmjspz9_6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbzzt7w2q.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbzzt7w2q.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbzzt7w2q.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbzzt7w2q.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbzzt7w2q.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbzzt7w2q.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbzzt7w2q.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbzzt7w2q.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4g0yse_9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4g0yse_9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4g0yse_9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4g0yse_9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4g0yse_9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4g0yse_9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4g0yse_9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4g0yse_9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7fvkcam5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7fvkcam5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fvkcam5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fvkcam5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7fvkcam5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7fvkcam5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fvkcam5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fvkcam5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ybnxk91.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4ybnxk91.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ybnxk91.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ybnxk91.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4ybnxk91.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4ybnxk91.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ybnxk91.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ybnxk91.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc8ghge_a.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8ghge_a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8ghge_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc8ghge_a.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8ghge_a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8ghge_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc8ghge_a.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8ghge_a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8ghge_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc8ghge_a.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8ghge_a.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8ghge_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc8ghge_a.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8ghge_a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkp3xrgep.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkp3xrgep.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkp3xrgep.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkp3xrgep.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkp3xrgep.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkp3xrgep.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkp3xrgep.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkp3xrgep.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwptsxrbb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwptsxrbb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwptsxrbb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwptsxrbb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwptsxrbb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwptsxrbb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwptsxrbb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwptsxrbb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqvrcukta.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqvrcukta.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqvrcukta.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqvrcukta.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqvrcukta.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqvrcukta.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqvrcukta.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqvrcukta.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0fwk46u5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0fwk46u5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fwk46u5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0fwk46u5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0fwk46u5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0fwk46u5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fwk46u5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fwk46u5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq8fqw0gv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpq8fqw0gv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq8fqw0gv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq8fqw0gv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpq8fqw0gv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpq8fqw0gv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq8fqw0gv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8fqw0gv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu2bgfk7u.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpu2bgfk7u.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu2bgfk7u.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu2bgfk7u.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpu2bgfk7u.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpu2bgfk7u.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu2bgfk7u.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2bgfk7u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    apples, oranges = parse(Int64, split(s, \" \")[1]), parse(Int64, split(s,\
    \ \" \")[4])\n    return n - apples - oranges\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv6te67a9.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6te67a9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6te67a9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv6te67a9.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6te67a9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6te67a9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv6te67a9.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6te67a9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6te67a9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv6te67a9.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv6te67a9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv6te67a9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv6te67a9.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv6te67a9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp93gk5bb9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp93gk5bb9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp93gk5bb9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp93gk5bb9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp93gk5bb9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp93gk5bb9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp93gk5bb9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp93gk5bb9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsvb_30bs.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsvb_30bs.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsvb_30bs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsvb_30bs.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsvb_30bs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsvb_30bs.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsvb_30bs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsvb_30bs.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6_pjomyo.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6_pjomyo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6_pjomyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6_pjomyo.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6_pjomyo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6_pjomyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6_pjomyo.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6_pjomyo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6_pjomyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6_pjomyo.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6_pjomyo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6_pjomyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6_pjomyo.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6_pjomyo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp55s4i20a.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp55s4i20a.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp55s4i20a.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp55s4i20a.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp55s4i20a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp55s4i20a.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp55s4i20a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55s4i20a.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppv1f16pb.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv1f16pb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv1f16pb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv1f16pb.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv1f16pb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv1f16pb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv1f16pb.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv1f16pb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv1f16pb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv1f16pb.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv1f16pb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv1f16pb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv1f16pb.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppv1f16pb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj9yztf02.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9yztf02.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9yztf02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj9yztf02.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9yztf02.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9yztf02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj9yztf02.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9yztf02.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9yztf02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj9yztf02.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj9yztf02.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj9yztf02.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj9yztf02.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj9yztf02.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpds00qiek.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpds00qiek.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpds00qiek.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpds00qiek.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpds00qiek.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpds00qiek.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpds00qiek.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpds00qiek.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa6yhbwcj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpa6yhbwcj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6yhbwcj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa6yhbwcj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa6yhbwcj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpa6yhbwcj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6yhbwcj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa6yhbwcj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpttw8lky2.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttw8lky2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttw8lky2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpttw8lky2.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttw8lky2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttw8lky2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpttw8lky2.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttw8lky2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttw8lky2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpttw8lky2.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttw8lky2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttw8lky2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpttw8lky2.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttw8lky2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp18wnoht1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp18wnoht1.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18wnoht1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18wnoht1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp18wnoht1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp18wnoht1.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18wnoht1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18wnoht1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiqf7ngjl.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiqf7ngjl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiqf7ngjl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiqf7ngjl.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiqf7ngjl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiqf7ngjl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiqf7ngjl.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiqf7ngjl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiqf7ngjl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiqf7ngjl.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiqf7ngjl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiqf7ngjl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiqf7ngjl.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqf7ngjl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphgx22dsj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmphgx22dsj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphgx22dsj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphgx22dsj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmphgx22dsj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmphgx22dsj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphgx22dsj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphgx22dsj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp86xnn8gh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp86xnn8gh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86xnn8gh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86xnn8gh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp86xnn8gh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp86xnn8gh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86xnn8gh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86xnn8gh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfixul6d6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfixul6d6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfixul6d6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfixul6d6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpfixul6d6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfixul6d6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfixul6d6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfixul6d6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp81h4utps.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp81h4utps.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81h4utps.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81h4utps.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp81h4utps.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp81h4utps.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81h4utps.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81h4utps.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp89oh0dt7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp89oh0dt7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp89oh0dt7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp89oh0dt7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp89oh0dt7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp89oh0dt7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp89oh0dt7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp89oh0dt7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp55zdd5zr.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zdd5zr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zdd5zr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp55zdd5zr.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zdd5zr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zdd5zr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp55zdd5zr.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zdd5zr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zdd5zr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp55zdd5zr.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55zdd5zr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55zdd5zr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp55zdd5zr.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55zdd5zr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6j0ewq4n.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j0ewq4n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j0ewq4n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6j0ewq4n.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j0ewq4n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j0ewq4n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6j0ewq4n.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j0ewq4n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j0ewq4n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6j0ewq4n.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6j0ewq4n.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6j0ewq4n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6j0ewq4n.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6j0ewq4n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy9h2a_y4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy9h2a_y4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy9h2a_y4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy9h2a_y4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpy9h2a_y4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy9h2a_y4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy9h2a_y4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy9h2a_y4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcag8gmm6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpcag8gmm6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcag8gmm6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcag8gmm6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpcag8gmm6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpcag8gmm6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcag8gmm6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcag8gmm6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz38fi35b.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz38fi35b.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz38fi35b.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz38fi35b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz38fi35b.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz38fi35b.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz38fi35b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz38fi35b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplwx9jii7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmplwx9jii7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplwx9jii7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplwx9jii7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmplwx9jii7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmplwx9jii7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplwx9jii7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwx9jii7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdk43jlp7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdk43jlp7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdk43jlp7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdk43jlp7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdk43jlp7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdk43jlp7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdk43jlp7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdk43jlp7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnqwc_7ml.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnqwc_7ml.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqwc_7ml.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqwc_7ml.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnqwc_7ml.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnqwc_7ml.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqwc_7ml.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqwc_7ml.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_da2tqi0.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_da2tqi0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_da2tqi0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_da2tqi0.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_da2tqi0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_da2tqi0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_da2tqi0.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_da2tqi0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_da2tqi0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_da2tqi0.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_da2tqi0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_da2tqi0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_da2tqi0.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_da2tqi0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8_3d6m2p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8_3d6m2p.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8_3d6m2p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8_3d6m2p.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8_3d6m2p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8_3d6m2p.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8_3d6m2p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_3d6m2p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppdps5nzt.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdps5nzt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdps5nzt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppdps5nzt.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdps5nzt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdps5nzt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppdps5nzt.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdps5nzt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdps5nzt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppdps5nzt.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdps5nzt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdps5nzt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppdps5nzt.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdps5nzt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_3ztwq4i.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp_3ztwq4i.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_3ztwq4i.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_3ztwq4i.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_3ztwq4i.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp_3ztwq4i.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_3ztwq4i.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_3ztwq4i.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyjnrn581.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpyjnrn581.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyjnrn581.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyjnrn581.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpyjnrn581.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpyjnrn581.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyjnrn581.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyjnrn581.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuoe5gyjr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpuoe5gyjr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoe5gyjr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoe5gyjr.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuoe5gyjr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpuoe5gyjr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoe5gyjr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuoe5gyjr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqnc9u9zt.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqnc9u9zt.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqnc9u9zt.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqnc9u9zt.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqnc9u9zt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqnc9u9zt.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqnc9u9zt.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqnc9u9zt.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzsdw3obo.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpzsdw3obo.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzsdw3obo.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzsdw3obo.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpzsdw3obo.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpzsdw3obo.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzsdw3obo.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzsdw3obo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgsz7t3s5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpgsz7t3s5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsz7t3s5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgsz7t3s5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgsz7t3s5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpgsz7t3s5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsz7t3s5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgsz7t3s5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxfx2diuh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxfx2diuh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxfx2diuh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxfx2diuh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxfx2diuh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxfx2diuh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxfx2diuh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxfx2diuh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgtem77sq.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtem77sq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtem77sq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgtem77sq.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtem77sq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtem77sq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgtem77sq.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtem77sq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtem77sq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgtem77sq.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtem77sq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtem77sq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgtem77sq.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgtem77sq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1xq6zvv.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xq6zvv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xq6zvv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph1xq6zvv.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xq6zvv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xq6zvv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph1xq6zvv.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xq6zvv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xq6zvv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph1xq6zvv.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xq6zvv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xq6zvv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph1xq6zvv.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1xq6zvv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3p3fv4ct.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp3p3fv4ct.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3p3fv4ct.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3p3fv4ct.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3p3fv4ct.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp3p3fv4ct.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3p3fv4ct.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3p3fv4ct.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8lmuo055.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8lmuo055.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8lmuo055.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8lmuo055.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8lmuo055.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8lmuo055.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8lmuo055.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lmuo055.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvcn43n_i.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvcn43n_i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvcn43n_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvcn43n_i.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvcn43n_i.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvcn43n_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvcn43n_i.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvcn43n_i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvcn43n_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvcn43n_i.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvcn43n_i.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvcn43n_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvcn43n_i.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvcn43n_i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5ozcn_h.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpk5ozcn_h.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5ozcn_h.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5ozcn_h.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpk5ozcn_h.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpk5ozcn_h.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5ozcn_h.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5ozcn_h.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf9cywee2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpf9cywee2.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf9cywee2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf9cywee2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpf9cywee2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpf9cywee2.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf9cywee2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf9cywee2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdij81if7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdij81if7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdij81if7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdij81if7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdij81if7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdij81if7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdij81if7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdij81if7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvo9aiqyj.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9aiqyj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9aiqyj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvo9aiqyj.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9aiqyj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9aiqyj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvo9aiqyj.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9aiqyj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9aiqyj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvo9aiqyj.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvo9aiqyj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvo9aiqyj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvo9aiqyj.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo9aiqyj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpygon0zp7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpygon0zp7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpygon0zp7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpygon0zp7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpygon0zp7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpygon0zp7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpygon0zp7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpygon0zp7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfu8z7tz0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfu8z7tz0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfu8z7tz0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfu8z7tz0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpfu8z7tz0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfu8z7tz0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfu8z7tz0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu8z7tz0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5sx1zuco.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sx1zuco.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sx1zuco.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5sx1zuco.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sx1zuco.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sx1zuco.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5sx1zuco.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sx1zuco.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sx1zuco.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5sx1zuco.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sx1zuco.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sx1zuco.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5sx1zuco.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5sx1zuco.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp564pgg40.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp564pgg40.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp564pgg40.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp564pgg40.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp564pgg40.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp564pgg40.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp564pgg40.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp564pgg40.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkvgklbb5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkvgklbb5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkvgklbb5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkvgklbb5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkvgklbb5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkvgklbb5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkvgklbb5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkvgklbb5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyx_wrar_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpyx_wrar_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyx_wrar_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyx_wrar_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpyx_wrar_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpyx_wrar_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyx_wrar_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyx_wrar_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe4i9t1ml.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe4i9t1ml.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe4i9t1ml.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe4i9t1ml.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe4i9t1ml.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe4i9t1ml.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe4i9t1ml.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4i9t1ml.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7sfhn0zq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7sfhn0zq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7sfhn0zq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7sfhn0zq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7sfhn0zq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7sfhn0zq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7sfhn0zq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7sfhn0zq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8tnp5tbc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8tnp5tbc.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8tnp5tbc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8tnp5tbc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8tnp5tbc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8tnp5tbc.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8tnp5tbc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8tnp5tbc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1c5jczyi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1c5jczyi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1c5jczyi.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1c5jczyi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1c5jczyi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1c5jczyi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1c5jczyi.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1c5jczyi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp98r0tm33.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp98r0tm33.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp98r0tm33.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp98r0tm33.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp98r0tm33.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp98r0tm33.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp98r0tm33.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp98r0tm33.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeal5j48_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpeal5j48_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeal5j48_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeal5j48_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpeal5j48_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpeal5j48_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeal5j48_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeal5j48_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps7l1nk7b.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmps7l1nk7b.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps7l1nk7b.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps7l1nk7b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps7l1nk7b.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmps7l1nk7b.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps7l1nk7b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7l1nk7b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2tsrut_x.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tsrut_x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tsrut_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2tsrut_x.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tsrut_x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tsrut_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2tsrut_x.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tsrut_x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tsrut_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2tsrut_x.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tsrut_x.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tsrut_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2tsrut_x.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tsrut_x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8veqivlv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8veqivlv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8veqivlv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8veqivlv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8veqivlv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8veqivlv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8veqivlv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8veqivlv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8ukzi54r.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8ukzi54r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ukzi54r.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ukzi54r.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp8ukzi54r.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp8ukzi54r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ukzi54r.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ukzi54r.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb298p5qo.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb298p5qo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb298p5qo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb298p5qo.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb298p5qo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb298p5qo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb298p5qo.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb298p5qo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb298p5qo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb298p5qo.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb298p5qo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb298p5qo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb298p5qo.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb298p5qo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6ccejn6.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6ccejn6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6ccejn6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn6ccejn6.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6ccejn6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6ccejn6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn6ccejn6.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6ccejn6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6ccejn6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn6ccejn6.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6ccejn6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6ccejn6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn6ccejn6.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6ccejn6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv2x_1plb.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2x_1plb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2x_1plb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv2x_1plb.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2x_1plb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2x_1plb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv2x_1plb.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2x_1plb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2x_1plb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv2x_1plb.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2x_1plb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2x_1plb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv2x_1plb.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv2x_1plb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0xuyrrx.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0xuyrrx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0xuyrrx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0xuyrrx.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0xuyrrx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0xuyrrx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0xuyrrx.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0xuyrrx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0xuyrrx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0xuyrrx.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0xuyrrx.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0xuyrrx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0xuyrrx.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0xuyrrx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw4h_xkdu.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpw4h_xkdu.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw4h_xkdu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw4h_xkdu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpw4h_xkdu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpw4h_xkdu.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw4h_xkdu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw4h_xkdu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbmora8zz.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmora8zz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmora8zz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbmora8zz.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmora8zz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmora8zz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbmora8zz.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmora8zz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmora8zz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbmora8zz.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmora8zz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmora8zz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbmora8zz.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbmora8zz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1jutqao6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1jutqao6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jutqao6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jutqao6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1jutqao6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1jutqao6.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jutqao6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1jutqao6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4obfyala.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4obfyala.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4obfyala.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4obfyala.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4obfyala.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4obfyala.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4obfyala.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4obfyala.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkdbms8ui.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkdbms8ui.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdbms8ui.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkdbms8ui.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkdbms8ui.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkdbms8ui.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdbms8ui.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkdbms8ui.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8abd34s0.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8abd34s0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8abd34s0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8abd34s0.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8abd34s0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8abd34s0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8abd34s0.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8abd34s0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8abd34s0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8abd34s0.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8abd34s0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8abd34s0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8abd34s0.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8abd34s0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5lzw6bwy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5lzw6bwy.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5lzw6bwy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5lzw6bwy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5lzw6bwy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5lzw6bwy.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5lzw6bwy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5lzw6bwy.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_9xpjpk3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp_9xpjpk3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9xpjpk3.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_9xpjpk3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_9xpjpk3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp_9xpjpk3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9xpjpk3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_9xpjpk3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8lacyibb.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lacyibb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lacyibb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8lacyibb.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lacyibb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lacyibb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8lacyibb.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lacyibb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lacyibb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8lacyibb.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8lacyibb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8lacyibb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8lacyibb.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lacyibb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0jqi92ye.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0jqi92ye.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0jqi92ye.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0jqi92ye.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0jqi92ye.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0jqi92ye.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0jqi92ye.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0jqi92ye.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp606zkxls.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp606zkxls.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp606zkxls.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp606zkxls.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp606zkxls.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp606zkxls.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp606zkxls.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp606zkxls.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp606zkxls.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp606zkxls.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp606zkxls.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp606zkxls.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp606zkxls.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp606zkxls.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppbnfytsb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmppbnfytsb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppbnfytsb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppbnfytsb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppbnfytsb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmppbnfytsb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppbnfytsb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbnfytsb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ysffd3c.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ysffd3c.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ysffd3c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ysffd3c.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ysffd3c.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ysffd3c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ysffd3c.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ysffd3c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ysffd3c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ysffd3c.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ysffd3c.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ysffd3c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ysffd3c.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ysffd3c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxfk6borw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxfk6borw.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxfk6borw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxfk6borw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxfk6borw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxfk6borw.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxfk6borw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxfk6borw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp88foihen.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp88foihen.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88foihen.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88foihen.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp88foihen.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp88foihen.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88foihen.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88foihen.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp53hs42pg.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53hs42pg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53hs42pg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp53hs42pg.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53hs42pg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53hs42pg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp53hs42pg.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53hs42pg.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53hs42pg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp53hs42pg.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53hs42pg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53hs42pg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp53hs42pg.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp53hs42pg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqxa7iqdg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqxa7iqdg.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqxa7iqdg.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqxa7iqdg.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqxa7iqdg.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqxa7iqdg.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqxa7iqdg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxa7iqdg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv9si6b_w.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpv9si6b_w.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv9si6b_w.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv9si6b_w.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpv9si6b_w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpv9si6b_w.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv9si6b_w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9si6b_w.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppo0zig1_.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppo0zig1_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppo0zig1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppo0zig1_.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppo0zig1_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppo0zig1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppo0zig1_.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppo0zig1_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppo0zig1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppo0zig1_.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppo0zig1_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppo0zig1_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppo0zig1_.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppo0zig1_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpno66li5_.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpno66li5_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpno66li5_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpno66li5_.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpno66li5_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpno66li5_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpno66li5_.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpno66li5_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpno66li5_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpno66li5_.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpno66li5_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpno66li5_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpno66li5_.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpno66li5_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeekp1bqd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpeekp1bqd.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeekp1bqd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeekp1bqd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpeekp1bqd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpeekp1bqd.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeekp1bqd.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeekp1bqd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbnpzss6s.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnpzss6s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnpzss6s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbnpzss6s.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnpzss6s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnpzss6s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbnpzss6s.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnpzss6s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnpzss6s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbnpzss6s.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbnpzss6s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbnpzss6s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbnpzss6s.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbnpzss6s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0fv12qg9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0fv12qg9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fv12qg9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0fv12qg9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0fv12qg9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0fv12qg9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fv12qg9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fv12qg9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptngxb2_7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmptngxb2_7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptngxb2_7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptngxb2_7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptngxb2_7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmptngxb2_7.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptngxb2_7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptngxb2_7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl2nbd8uv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpl2nbd8uv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl2nbd8uv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl2nbd8uv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpl2nbd8uv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpl2nbd8uv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl2nbd8uv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2nbd8uv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy6t28j8r.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy6t28j8r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6t28j8r.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6t28j8r.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpy6t28j8r.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy6t28j8r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6t28j8r.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6t28j8r.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1f7am4iq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1f7am4iq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1f7am4iq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1f7am4iq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1f7am4iq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1f7am4iq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1f7am4iq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1f7am4iq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    apples, oranges = map(x->parse(Int64, x), split(s, \" \"))\n    return n\
    \ - apples - oranges\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplo9zqc0r.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  ArgumentError:\
    \ invalid base 10 digit 'a' in \"apples\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmplo9zqc0r.jl:18 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] collect_to!\n      @ ./array.jl:782\
    \ [inlined]\n    [7] collect_to_with_first!\n      @ ./array.jl:760 [inlined]\n\
    \    [8] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:754\n    [9] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \   [10] map\n      @ ./abstractarray.jl:2867 [inlined]\n   [11] fruit_distribution(s::String,\
    \ n::Int64)\n      @ Main /tmp/tmplo9zqc0r.jl:18\n   [12] macro expansion\n  \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmplo9zqc0r.jl:26 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmplo9zqc0r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmplo9zqc0r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"apples\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmplo9zqc0r.jl:18 [inlined]\n    [5] iterate\n\
    \      @ ./generat"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplo9zqc0r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe9bmb1wa.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe9bmb1wa.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe9bmb1wa.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe9bmb1wa.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe9bmb1wa.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe9bmb1wa.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe9bmb1wa.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9bmb1wa.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy0lhe5cz.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0lhe5cz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0lhe5cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy0lhe5cz.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0lhe5cz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0lhe5cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy0lhe5cz.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0lhe5cz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0lhe5cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy0lhe5cz.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0lhe5cz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0lhe5cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy0lhe5cz.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0lhe5cz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdjnwllm6.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjnwllm6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjnwllm6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjnwllm6.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjnwllm6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjnwllm6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjnwllm6.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjnwllm6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjnwllm6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjnwllm6.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjnwllm6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjnwllm6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdjnwllm6.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdjnwllm6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjbgfzblg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpjbgfzblg.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjbgfzblg.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjbgfzblg.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpjbgfzblg.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpjbgfzblg.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjbgfzblg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbgfzblg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprabmgqcd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmprabmgqcd.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprabmgqcd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprabmgqcd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprabmgqcd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmprabmgqcd.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprabmgqcd.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprabmgqcd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5n4vp15z.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5n4vp15z.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5n4vp15z.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5n4vp15z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5n4vp15z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5n4vp15z.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5n4vp15z.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5n4vp15z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx6_z4v99.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx6_z4v99.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx6_z4v99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx6_z4v99.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx6_z4v99.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx6_z4v99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx6_z4v99.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx6_z4v99.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx6_z4v99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx6_z4v99.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx6_z4v99.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx6_z4v99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx6_z4v99.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx6_z4v99.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1rb7asa0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1rb7asa0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1rb7asa0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1rb7asa0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1rb7asa0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp1rb7asa0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1rb7asa0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1rb7asa0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsluluy_k.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsluluy_k.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsluluy_k.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsluluy_k.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsluluy_k.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsluluy_k.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsluluy_k.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsluluy_k.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaz2ba3xi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpaz2ba3xi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz2ba3xi.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz2ba3xi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpaz2ba3xi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpaz2ba3xi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz2ba3xi.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaz2ba3xi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnmjtpzmr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnmjtpzmr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnmjtpzmr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnmjtpzmr.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnmjtpzmr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnmjtpzmr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnmjtpzmr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmjtpzmr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp_ro1x16.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_ro1x16.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_ro1x16.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp_ro1x16.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_ro1x16.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_ro1x16.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp_ro1x16.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_ro1x16.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_ro1x16.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp_ro1x16.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_ro1x16.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_ro1x16.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp_ro1x16.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_ro1x16.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxo7tois3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxo7tois3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxo7tois3.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxo7tois3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxo7tois3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpxo7tois3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxo7tois3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxo7tois3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplh59_xlm.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh59_xlm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh59_xlm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplh59_xlm.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh59_xlm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh59_xlm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplh59_xlm.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh59_xlm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh59_xlm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplh59_xlm.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh59_xlm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh59_xlm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplh59_xlm.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplh59_xlm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp45rvoffm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp45rvoffm.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45rvoffm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45rvoffm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp45rvoffm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp45rvoffm.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45rvoffm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45rvoffm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpffb480xi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpffb480xi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpffb480xi.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpffb480xi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpffb480xi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpffb480xi.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpffb480xi.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpffb480xi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwot0f6lc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwot0f6lc.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwot0f6lc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwot0f6lc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwot0f6lc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwot0f6lc.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwot0f6lc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwot0f6lc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5vmj1m1r.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5vmj1m1r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5vmj1m1r.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5vmj1m1r.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5vmj1m1r.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5vmj1m1r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5vmj1m1r.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vmj1m1r.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdp7j46c2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdp7j46c2.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdp7j46c2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdp7j46c2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdp7j46c2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdp7j46c2.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdp7j46c2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdp7j46c2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph743c5ez.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmph743c5ez.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph743c5ez.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph743c5ez.jl:24\ntest set:\
    \ Error During Test at /tmp/tmph743c5ez.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmph743c5ez.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph743c5ez.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph743c5ez.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7b8uwc1r.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7b8uwc1r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b8uwc1r.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7b8uwc1r.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7b8uwc1r.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp7b8uwc1r.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b8uwc1r.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7b8uwc1r.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn06q4l_4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpn06q4l_4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn06q4l_4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn06q4l_4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpn06q4l_4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpn06q4l_4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn06q4l_4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn06q4l_4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9uqnint6.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uqnint6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uqnint6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9uqnint6.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uqnint6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uqnint6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9uqnint6.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uqnint6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uqnint6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9uqnint6.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uqnint6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uqnint6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9uqnint6.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9uqnint6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2jbp1qql.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp2jbp1qql.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2jbp1qql.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2jbp1qql.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2jbp1qql.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp2jbp1qql.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2jbp1qql.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jbp1qql.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpysyyrp79.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpysyyrp79.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpysyyrp79.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpysyyrp79.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpysyyrp79.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpysyyrp79.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpysyyrp79.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpysyyrp79.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpta1in0qk.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpta1in0qk.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpta1in0qk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpta1in0qk.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpta1in0qk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpta1in0qk.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpta1in0qk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpta1in0qk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaz1bndeh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpaz1bndeh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz1bndeh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz1bndeh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpaz1bndeh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpaz1bndeh.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz1bndeh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaz1bndeh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    apples, oranges = map(x->parse(Int64, x), split(s, \" \"))\n    return n\
    \ - apples - oranges\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt1zbfet3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  ArgumentError:\
    \ invalid base 10 digit 'a' in \"apples\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpt1zbfet3.jl:18 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] collect_to!\n      @ ./array.jl:782\
    \ [inlined]\n    [7] collect_to_with_first!\n      @ ./array.jl:760 [inlined]\n\
    \    [8] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:754\n    [9] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \   [10] map\n      @ ./abstractarray.jl:2867 [inlined]\n   [11] fruit_distribution(s::String,\
    \ n::Int64)\n      @ Main /tmp/tmpt1zbfet3.jl:18\n   [12] macro expansion\n  \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmpt1zbfet3.jl:26 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmpt1zbfet3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpt1zbfet3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"apples\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmpt1zbfet3.jl:18 [inlined]\n    [5] iterate\n\
    \      @ ./generat"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1zbfet3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2_wfje99.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_wfje99.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_wfje99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2_wfje99.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_wfje99.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_wfje99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2_wfje99.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_wfje99.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_wfje99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2_wfje99.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_wfje99.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_wfje99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2_wfje99.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_wfje99.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3194f5yd.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3194f5yd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3194f5yd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3194f5yd.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3194f5yd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3194f5yd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3194f5yd.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3194f5yd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3194f5yd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3194f5yd.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3194f5yd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3194f5yd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3194f5yd.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3194f5yd.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt8j57n_7.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8j57n_7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8j57n_7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt8j57n_7.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8j57n_7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8j57n_7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt8j57n_7.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8j57n_7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8j57n_7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt8j57n_7.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt8j57n_7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt8j57n_7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt8j57n_7.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8j57n_7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoviwfnbj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpoviwfnbj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoviwfnbj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoviwfnbj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpoviwfnbj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpoviwfnbj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoviwfnbj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoviwfnbj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfhz4bhox.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhz4bhox.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhz4bhox.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfhz4bhox.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhz4bhox.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhz4bhox.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfhz4bhox.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhz4bhox.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhz4bhox.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfhz4bhox.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhz4bhox.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhz4bhox.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfhz4bhox.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhz4bhox.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5zuo3ers.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5zuo3ers.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zuo3ers.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zuo3ers.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5zuo3ers.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp5zuo3ers.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zuo3ers.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zuo3ers.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9kpiw8lb.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9kpiw8lb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9kpiw8lb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9kpiw8lb.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9kpiw8lb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9kpiw8lb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9kpiw8lb.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9kpiw8lb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9kpiw8lb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9kpiw8lb.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9kpiw8lb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9kpiw8lb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9kpiw8lb.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9kpiw8lb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfu72krcj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfu72krcj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfu72krcj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfu72krcj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpfu72krcj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpfu72krcj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfu72krcj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu72krcj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdm123hv4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdm123hv4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdm123hv4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdm123hv4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdm123hv4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdm123hv4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdm123hv4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdm123hv4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0_kx7z50.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0_kx7z50.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_kx7z50.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_kx7z50.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0_kx7z50.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp0_kx7z50.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_kx7z50.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_kx7z50.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp1m2al4r.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m2al4r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m2al4r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp1m2al4r.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m2al4r.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m2al4r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp1m2al4r.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m2al4r.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m2al4r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp1m2al4r.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m2al4r.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m2al4r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp1m2al4r.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp1m2al4r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnk2spl_t.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnk2spl_t.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnk2spl_t.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnk2spl_t.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnk2spl_t.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpnk2spl_t.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnk2spl_t.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnk2spl_t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    apples, oranges = parse(Int64, split(s, \" \")[1]), parse(Int64, split(s,\
    \ \" \")[3])\n    return n - apples - oranges\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcf61t_nt.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  ArgumentError:\
    \ invalid base 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] fruit_distribution(s::String, n::Int64)\n     @ Main /tmp/tmpcf61t_nt.jl:18\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcf61t_nt.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcf61t_nt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcf61t_nt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] fruit_distribution(s::String, n::Int64)\n     @ Main /tmp/tmpcf61t_nt.jl:18\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcf61t_nt.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcf61t_nt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcf61t_nt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"0 apples and 1 oranges\", 3) == 2\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcf61t_nt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbhq7smy9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbhq7smy9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbhq7smy9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbhq7smy9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpbhq7smy9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpbhq7smy9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbhq7smy9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhq7smy9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprpiyj3v1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmprpiyj3v1.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprpiyj3v1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprpiyj3v1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprpiyj3v1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmprpiyj3v1.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprpiyj3v1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprpiyj3v1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe3__b31d.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe3__b31d.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe3__b31d.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe3__b31d.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe3__b31d.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe3__b31d.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe3__b31d.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3__b31d.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpapug4syy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpapug4syy.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapug4syy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapug4syy.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpapug4syy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpapug4syy.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapug4syy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapug4syy.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4phv0o2s.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4phv0o2s.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4phv0o2s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4phv0o2s.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4phv0o2s.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4phv0o2s.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4phv0o2s.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4phv0o2s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp37fp0g3l.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37fp0g3l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37fp0g3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp37fp0g3l.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37fp0g3l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37fp0g3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp37fp0g3l.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37fp0g3l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37fp0g3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp37fp0g3l.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37fp0g3l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37fp0g3l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp37fp0g3l.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37fp0g3l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiuoj82gm.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuoj82gm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuoj82gm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuoj82gm.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuoj82gm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuoj82gm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuoj82gm.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuoj82gm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuoj82gm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuoj82gm.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuoj82gm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuoj82gm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuoj82gm.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiuoj82gm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwtfwqad0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwtfwqad0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtfwqad0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtfwqad0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwtfwqad0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpwtfwqad0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwtfwqad0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwtfwqad0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcklqcrqv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpcklqcrqv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcklqcrqv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcklqcrqv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpcklqcrqv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpcklqcrqv.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcklqcrqv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcklqcrqv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvb8b9wsm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpvb8b9wsm.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvb8b9wsm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvb8b9wsm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvb8b9wsm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpvb8b9wsm.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvb8b9wsm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvb8b9wsm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsh_22sld.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsh_22sld.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsh_22sld.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsh_22sld.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsh_22sld.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpsh_22sld.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsh_22sld.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsh_22sld.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\n \nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpniqgybt3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpniqgybt3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpniqgybt3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpniqgybt3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpniqgybt3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpniqgybt3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpniqgybt3.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpniqgybt3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprza1llgq.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprza1llgq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprza1llgq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprza1llgq.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprza1llgq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprza1llgq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprza1llgq.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprza1llgq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprza1llgq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprza1llgq.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprza1llgq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprza1llgq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprza1llgq.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprza1llgq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9sg3pljr.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sg3pljr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sg3pljr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9sg3pljr.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sg3pljr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sg3pljr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9sg3pljr.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sg3pljr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sg3pljr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9sg3pljr.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sg3pljr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sg3pljr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9sg3pljr.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sg3pljr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1773ku_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpm1773ku_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm1773ku_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm1773ku_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpm1773ku_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpm1773ku_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm1773ku_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1773ku_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp57cxtu2x.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp57cxtu2x.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp57cxtu2x.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp57cxtu2x.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp57cxtu2x.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp57cxtu2x.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp57cxtu2x.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp57cxtu2x.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo5qi1ci9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpo5qi1ci9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo5qi1ci9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo5qi1ci9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpo5qi1ci9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpo5qi1ci9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo5qi1ci9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5qi1ci9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp195l2mym.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp195l2mym.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp195l2mym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp195l2mym.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp195l2mym.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp195l2mym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp195l2mym.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp195l2mym.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp195l2mym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp195l2mym.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp195l2mym.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp195l2mym.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp195l2mym.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp195l2mym.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpefh2l7aj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpefh2l7aj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefh2l7aj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpefh2l7aj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpefh2l7aj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpefh2l7aj.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefh2l7aj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpefh2l7aj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkaayz__4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkaayz__4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkaayz__4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkaayz__4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkaayz__4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpkaayz__4.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkaayz__4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkaayz__4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4zl_w4hq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4zl_w4hq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4zl_w4hq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4zl_w4hq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4zl_w4hq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp4zl_w4hq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4zl_w4hq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4zl_w4hq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe_kaq9od.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe_kaq9od.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe_kaq9od.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe_kaq9od.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe_kaq9od.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpe_kaq9od.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe_kaq9od.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_kaq9od.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\", 19) ==\
    \ 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphs9kdxal.jl:26\n  Expression: candidate(\"\
    5 apples and 6 oranges\", 19) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs9kdxal.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs9kdxal.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphs9kdxal.jl:27\n  Expression: candidate(\"5 apples and 6 oranges\"\
    , 21) == 10\n   Evaluated: 0 == 10\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs9kdxal.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs9kdxal.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphs9kdxal.jl:28\n  Expression: candidate(\"0 apples and 1 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs9kdxal.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs9kdxal.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphs9kdxal.jl:29\n  Expression: candidate(\"1 apples and 0 oranges\"\
    , 3) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphs9kdxal.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphs9kdxal.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphs9kdxal.jl:30\n  Expression: candidate(\"2 apples and 3 oranges\"\
    , 100) == 95\n   Evaluated: 0 == 95\nStacktrace:\n [1] macro expansion\n   @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphs9kdxal.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdto1wax5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdto1wax5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdto1wax5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdto1wax5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdto1wax5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpdto1wax5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdto1wax5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdto1wax5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppgpemgt8.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmppgpemgt8.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppgpemgt8.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppgpemgt8.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppgpemgt8.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmppgpemgt8.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppgpemgt8.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppgpemgt8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp12n3_5rr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp12n3_5rr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12n3_5rr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp12n3_5rr.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp12n3_5rr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp12n3_5rr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12n3_5rr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12n3_5rr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqt_9cv7c.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqt_9cv7c.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqt_9cv7c.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqt_9cv7c.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqt_9cv7c.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqt_9cv7c.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqt_9cv7c.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqt_9cv7c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf7eqqqbu.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpf7eqqqbu.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf7eqqqbu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf7eqqqbu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpf7eqqqbu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpf7eqqqbu.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf7eqqqbu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf7eqqqbu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplur6m1xs.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmplur6m1xs.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplur6m1xs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplur6m1xs.jl:24\ntest set:\
    \ Error During Test at /tmp/tmplur6m1xs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmplur6m1xs.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplur6m1xs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplur6m1xs.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp80ldz0lw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp80ldz0lw.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80ldz0lw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80ldz0lw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp80ldz0lw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp80ldz0lw.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80ldz0lw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80ldz0lw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqjwa6345.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqjwa6345.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqjwa6345.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqjwa6345.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqjwa6345.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpqjwa6345.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqjwa6345.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqjwa6345.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi2s6n84u.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpi2s6n84u.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2s6n84u.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2s6n84u.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi2s6n84u.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpi2s6n84u.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2s6n84u.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi2s6n84u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp04onltbr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp04onltbr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp04onltbr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp04onltbr.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp04onltbr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp04onltbr.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp04onltbr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04onltbr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz04c3op9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz04c3op9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz04c3op9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz04c3op9.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz04c3op9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpz04c3op9.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz04c3op9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz04c3op9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    apples, oranges = parse(Int64, split(s, \" \")[1]), parse(Int64, split(s,\
    \ \" \")[3])\n    return n - apples - oranges\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = fruit_distribution;\n\t@test(candidate(\"5 apples and 6 oranges\"\
    , 19) == 8)\n\t@test(candidate(\"5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"\
    0 apples and 1 oranges\", 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\"\
    , 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmkjfzeyn.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  ArgumentError:\
    \ invalid base 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] fruit_distribution(s::String, n::Int64)\n     @ Main /tmp/tmpmkjfzeyn.jl:18\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmkjfzeyn.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmkjfzeyn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmkjfzeyn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \     @ Base ./parse.jl:137\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n     @ Base ./parse.jl:241\n   [3] parse\n     @ ./parse.jl:241\
    \ [inlined]\n   [4] fruit_distribution(s::String, n::Int64)\n     @ Main /tmp/tmpmkjfzeyn.jl:18\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmkjfzeyn.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmkjfzeyn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmkjfzeyn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"0 apples and 1 oranges\", 3) == 2\n  ArgumentError: invalid base\
    \ 10 digit 'a' in \"and\"\n  Stacktrace:\n   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmkjfzeyn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy0988dvq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy0988dvq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy0988dvq.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy0988dvq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpy0988dvq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmpy0988dvq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy0988dvq.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0988dvq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this task, you will be given a string that represents a\
    \ number of apples and oranges \n    that are distributed in a basket of fruit\
    \ this basket contains \n    apples, oranges, and mango fruits. Given the string\
    \ that represents the total number of \n    the oranges and apples and an integer\
    \ that represent the total number of the fruits \n    in the basket return the\
    \ number of the mango fruits in the basket.\n    for examble:\n    >>> fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\n    8\n    >>> fruit_distribution(\"0 apples and\
    \ 1 oranges\", 3)\n    2\n    >>> fruit_distribution(\"2 apples and 3 oranges\"\
    , 100)\n    95\n    >>> fruit_distribution(\"100 apples and 1 oranges\", 120)\n\
    \    19\n    \"\"\"\nfunction fruit_distribution(s::String, n::Int64)::Int64 \n\
    \    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = fruit_distribution;\n\
    \t@test(candidate(\"5 apples and 6 oranges\", 19) == 8)\n\t@test(candidate(\"\
    5 apples and 6 oranges\", 21) == 10)\n\t@test(candidate(\"0 apples and 1 oranges\"\
    , 3) == 2)\n\t@test(candidate(\"1 apples and 0 oranges\", 3) == 2)\n\t@test(candidate(\"\
    2 apples and 3 oranges\", 100) == 95)\n\t@test(candidate(\"2 apples and 3 oranges\"\
    , 5) == 0)\n\t@test(candidate(\"1 apples and 100 oranges\", 120) == 19)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp113xmuhb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"5 apples and 6 oranges\", 19) == 8\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp113xmuhb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp113xmuhb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp113xmuhb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp113xmuhb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"5 apples and 6 oranges\", 21) == 10\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] fruit_distribution(s::String, n::Int64)\n    \
    \ @ Main /tmp/tmp113xmuhb.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp113xmuhb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp113xmuhb.jl:22\n"
  exit_code: 1
  status: SyntaxError

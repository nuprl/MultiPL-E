name: HumanEval_103_rounded_avg
language: jl
results:
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnxzzmjkr.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzzmjkr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzzmjkr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnxzzmjkr.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzzmjkr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzzmjkr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnxzzmjkr.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzzmjkr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzzmjkr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnxzzmjkr.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnxzzmjkr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnxzzmjkr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnxzzmjkr.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnxzzmjkr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv0zp416l.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0zp416l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0zp416l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv0zp416l.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0zp416l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0zp416l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv0zp416l.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0zp416l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0zp416l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv0zp416l.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0zp416l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0zp416l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv0zp416l.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0zp416l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl5klt1ls.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpl5klt1ls.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl5klt1ls.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl5klt1ls.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnk0snh9v.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnk0snh9v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnk0snh9v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnk0snh9v.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnk0snh9v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnk0snh9v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnk0snh9v.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnk0snh9v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnk0snh9v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnk0snh9v.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnk0snh9v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnk0snh9v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnk0snh9v.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnk0snh9v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78ni4i7v.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78ni4i7v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78ni4i7v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp78ni4i7v.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78ni4i7v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78ni4i7v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp78ni4i7v.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78ni4i7v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78ni4i7v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp78ni4i7v.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78ni4i7v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78ni4i7v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp78ni4i7v.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78ni4i7v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbd99_yqr.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbd99_yqr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbd99_yqr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbd99_yqr.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbd99_yqr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbd99_yqr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbd99_yqr.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbd99_yqr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbd99_yqr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbd99_yqr.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbd99_yqr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbd99_yqr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbd99_yqr.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbd99_yqr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjjoivabd.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjoivabd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjoivabd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjjoivabd.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjoivabd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjoivabd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjjoivabd.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjoivabd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjoivabd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjjoivabd.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjoivabd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjoivabd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjjoivabd.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjoivabd.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsaz7t0ll.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpsaz7t0ll.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsaz7t0ll.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsaz7t0ll.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8qu1ohyn.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp8qu1ohyn.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8qu1ohyn.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8qu1ohyn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8qu1ohyn.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp8qu1ohyn.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8qu1ohyn.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8qu1ohyn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8qu1ohyn.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp8qu1ohyn.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8qu1ohyn.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8qu1ohyn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8qu1ohyn.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph1zyv_ck.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph1zyv_ck.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph1zyv_ck.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph1zyv_ck.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppu7fev49.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppu7fev49.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppu7fev49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppu7fev49.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppu7fev49.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppu7fev49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppu7fev49.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppu7fev49.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppu7fev49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppu7fev49.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppu7fev49.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppu7fev49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppu7fev49.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppu7fev49.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp80cvmom9.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp80cvmom9.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80cvmom9.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp80cvmom9.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp80cvmom9.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp80cvmom9.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80cvmom9.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp80cvmom9.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp80cvmom9.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp80cvmom9.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80cvmom9.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp80cvmom9.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp80cvmom9.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcoovov6j.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpcoovov6j.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcoovov6j.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcoovov6j.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw5jlk_01.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5jlk_01.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5jlk_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw5jlk_01.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5jlk_01.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5jlk_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw5jlk_01.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5jlk_01.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5jlk_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw5jlk_01.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5jlk_01.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5jlk_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw5jlk_01.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5jlk_01.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3xri39j1.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xri39j1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xri39j1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3xri39j1.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xri39j1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xri39j1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3xri39j1.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xri39j1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xri39j1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3xri39j1.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xri39j1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xri39j1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3xri39j1.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xri39j1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbxn1g_l4.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxn1g_l4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxn1g_l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxn1g_l4.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxn1g_l4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxn1g_l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxn1g_l4.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxn1g_l4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxn1g_l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxn1g_l4.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbxn1g_l4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbxn1g_l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbxn1g_l4.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbxn1g_l4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvr40yami.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvr40yami.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvr40yami.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvr40yami.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvr40yami.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvr40yami.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvr40yami.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvr40yami.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvr40yami.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvr40yami.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvr40yami.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvr40yami.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvr40yami.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvr40yami.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp59ejapwj.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp59ejapwj.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59ejapwj.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59ejapwj.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp59ejapwj.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp59ejapwj.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59ejapwj.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59ejapwj.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp59ejapwj.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp59ejapwj.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59ejapwj.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59ejapwj.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp59ejapwj.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptu1uwx1l.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptu1uwx1l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptu1uwx1l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptu1uwx1l.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptu1uwx1l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptu1uwx1l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptu1uwx1l.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptu1uwx1l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptu1uwx1l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptu1uwx1l.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptu1uwx1l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptu1uwx1l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptu1uwx1l.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptu1uwx1l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqt7k28au.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqt7k28au.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqt7k28au.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqt7k28au.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqt7k28au.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqt7k28au.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqt7k28au.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqt7k28au.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqt7k28au.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqt7k28au.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqt7k28au.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqt7k28au.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqt7k28au.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqt7k28au.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbe8rvgup.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpbe8rvgup.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbe8rvgup.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbe8rvgup.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo_yo8ibf.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpo_yo8ibf.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo_yo8ibf.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo_yo8ibf.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpo_yo8ibf.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpo_yo8ibf.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo_yo8ibf.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo_yo8ibf.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpo_yo8ibf.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpo_yo8ibf.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo_yo8ibf.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo_yo8ibf.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpo_yo8ibf.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1t175ev2.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp1t175ev2.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1t175ev2.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1t175ev2.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int64(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplzf40st_.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmplzf40st_.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplzf40st_.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplzf40st_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplzf40st_.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmplzf40st_.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplzf40st_.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplzf40st_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplzf40st_.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmplzf40st_.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplzf40st_.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplzf40st_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplzf40st_.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuojr3jrn.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpuojr3jrn.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuojr3jrn.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuojr3jrn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpuojr3jrn.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuojr3jrn.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuojr3jrn.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuojr3jrn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpuojr3jrn.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuojr3jrn.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuojr3jrn.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuojr3jrn.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpuojr3jrn.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_yyu0gc8.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yyu0gc8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yyu0gc8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_yyu0gc8.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yyu0gc8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yyu0gc8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_yyu0gc8.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yyu0gc8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yyu0gc8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_yyu0gc8.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_yyu0gc8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_yyu0gc8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_yyu0gc8.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_yyu0gc8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkr0262yq.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpkr0262yq.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkr0262yq.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkr0262yq.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkr0262yq.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpkr0262yq.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkr0262yq.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkr0262yq.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkr0262yq.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpkr0262yq.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkr0262yq.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkr0262yq.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkr0262yq.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return bin(round(Int64, (n + m) / 2))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2kjng9e7.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp2kjng9e7.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kjng9e7.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kjng9e7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kjng9e7.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2kjng9e7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kjng9e7.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kjng9e7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kjng9e7.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2kjng9e7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kjng9e7.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kjng9e7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kjng9e7.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2k"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdtdtgu_n.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtdtgu_n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtdtgu_n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdtdtgu_n.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtdtgu_n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtdtgu_n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdtdtgu_n.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtdtgu_n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtdtgu_n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdtdtgu_n.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtdtgu_n.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtdtgu_n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdtdtgu_n.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdtdtgu_n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjh51h30d.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpjh51h30d.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjh51h30d.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjh51h30d.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpjh51h30d.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpjh51h30d.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjh51h30d.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjh51h30d.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpjh51h30d.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph3u5_4sp.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmph3u5_4sp.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3u5_4sp.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3u5_4sp.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3u5_4sp.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph3u5_4sp.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3u5_4sp.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3u5_4sp.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3u5_4sp.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph3u5_4sp.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3u5_4sp.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3u5_4sp.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3u5_4sp.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpigq7gdxk.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpigq7gdxk.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpigq7gdxk.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpigq7gdxk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpigq7gdxk.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpigq7gdxk.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpigq7gdxk.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpigq7gdxk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpigq7gdxk.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpigq7gdxk.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpigq7gdxk.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpigq7gdxk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpigq7gdxk.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int64(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnw5hl5m0.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpnw5hl5m0.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnw5hl5m0.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnw5hl5m0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpnw5hl5m0.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpnw5hl5m0.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnw5hl5m0.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnw5hl5m0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpnw5hl5m0.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpnw5hl5m0.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnw5hl5m0.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnw5hl5m0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpnw5hl5m0.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb5t5t2l3.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpb5t5t2l3.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb5t5t2l3.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb5t5t2l3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpb5t5t2l3.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpb5t5t2l3.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb5t5t2l3.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb5t5t2l3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpb5t5t2l3.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpb5t5t2l3.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb5t5t2l3.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb5t5t2l3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpb5t5t2l3.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplgkxmaye.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmplgkxmaye.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplgkxmaye.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplgkxmaye.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplgkxmaye.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmplgkxmaye.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplgkxmaye.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplgkxmaye.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplgkxmaye.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmplgkxmaye.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplgkxmaye.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplgkxmaye.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplgkxmaye.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp76jtart7.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp76jtart7.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp76jtart7.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp76jtart7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp76jtart7.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp76jtart7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp76jtart7.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp76jtart7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp76jtart7.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp76jtart7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp76jtart7.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp76jtart7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp76jtart7.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp25kk3lt3.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kk3lt3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kk3lt3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25kk3lt3.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kk3lt3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kk3lt3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25kk3lt3.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kk3lt3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kk3lt3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25kk3lt3.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kk3lt3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kk3lt3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25kk3lt3.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp25kk3lt3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyh1amta3.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyh1amta3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyh1amta3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyh1amta3.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyh1amta3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyh1amta3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyh1amta3.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyh1amta3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyh1amta3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyh1amta3.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyh1amta3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyh1amta3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyh1amta3.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyh1amta3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m]))) |> Int64 |>\
    \ binary\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgxaq_ng4.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpgxaq_ng4.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgxaq_ng4.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgxaq_ng4.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpgxaq_ng4.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpgxaq_ng4.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgxaq_ng4.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgxaq_ng4.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpgxaq_ng4.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpgxaq_ng4.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgxaq_ng4.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgxaq_ng4.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpgxaq_ng4.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc9c_gnp0.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpc9c_gnp0.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc9c_gnp0.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc9c_gnp0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpc9c_gnp0.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpc9c_gnp0.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc9c_gnp0.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc9c_gnp0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpc9c_gnp0.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpc9c_gnp0.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc9c_gnp0.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc9c_gnp0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpc9c_gnp0.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdt27vv8d.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdt27vv8d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdt27vv8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdt27vv8d.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdt27vv8d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdt27vv8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdt27vv8d.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdt27vv8d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdt27vv8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdt27vv8d.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdt27vv8d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdt27vv8d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdt27vv8d.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdt27vv8d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxx4cjsgh.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpxx4cjsgh.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxx4cjsgh.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxx4cjsgh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxx4cjsgh.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxx4cjsgh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxx4cjsgh.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxx4cjsgh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxx4cjsgh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxx4cjsgh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxx4cjsgh.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxx4cjsgh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxx4cjsgh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuimsvk9d.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuimsvk9d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuimsvk9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuimsvk9d.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuimsvk9d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuimsvk9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuimsvk9d.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuimsvk9d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuimsvk9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuimsvk9d.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuimsvk9d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuimsvk9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuimsvk9d.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuimsvk9d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpadtgoc9s.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpadtgoc9s.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpadtgoc9s.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpadtgoc9s.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpadtgoc9s.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpadtgoc9s.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpadtgoc9s.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpadtgoc9s.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpadtgoc9s.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpadtgoc9s.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpadtgoc9s.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpadtgoc9s.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpadtgoc9s.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpee75az28.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpee75az28.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpee75az28.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpee75az28.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpee75az28.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpee75az28.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpee75az28.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpee75az28.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpee75az28.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpee75az28.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpee75az28.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpee75az28.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpee75az28.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ab1jy1s.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ab1jy1s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ab1jy1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7ab1jy1s.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ab1jy1s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ab1jy1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7ab1jy1s.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ab1jy1s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ab1jy1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7ab1jy1s.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ab1jy1s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ab1jy1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7ab1jy1s.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ab1jy1s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp701xps3x.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp701xps3x.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp701xps3x.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp701xps3x.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp701xps3x.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp701xps3x.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp701xps3x.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp701xps3x.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp701xps3x.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp701xps3x.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp701xps3x.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp701xps3x.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp701xps3x.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi45i51ba.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi45i51ba.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi45i51ba.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi45i51ba.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi45i51ba.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi45i51ba.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi45i51ba.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi45i51ba.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi45i51ba.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi45i51ba.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi45i51ba.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi45i51ba.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi45i51ba.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi45i51ba.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqxlozpds.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqxlozpds.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqxlozpds.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqxlozpds.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqxlozpds.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqxlozpds.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqxlozpds.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqxlozpds.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqxlozpds.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqxlozpds.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqxlozpds.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqxlozpds.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqxlozpds.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxlozpds.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqq8doejt.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq8doejt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq8doejt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqq8doejt.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq8doejt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq8doejt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqq8doejt.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq8doejt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq8doejt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqq8doejt.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq8doejt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq8doejt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqq8doejt.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqq8doejt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxpl92qi6.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpl92qi6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpl92qi6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxpl92qi6.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpl92qi6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpl92qi6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxpl92qi6.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpl92qi6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpl92qi6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxpl92qi6.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpl92qi6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpl92qi6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxpl92qi6.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpl92qi6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprruiu4x8.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmprruiu4x8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprruiu4x8.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprruiu4x8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmprruiu4x8.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmprruiu4x8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprruiu4x8.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprruiu4x8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmprruiu4x8.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiefd6bix.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiefd6bix.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiefd6bix.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiefd6bix.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiefd6bix.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiefd6bix.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiefd6bix.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiefd6bix.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiefd6bix.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiefd6bix.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiefd6bix.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiefd6bix.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiefd6bix.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiefd6bix.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    sum = 0\n    for i in n:m\n        sum +=\
    \ i\n    end\n    return \"0b\" * string(Int64, round(sum / (m - n + 1)))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnjyffx2a.jl:30\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643.0\" == \"0b11\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjyffx2a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjyffx2a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnjyffx2a.jl:31\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410.0\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjyffx2a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjyffx2a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnjyffx2a.jl:32\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970.0\" == \"0b1111001010\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjyffx2a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjyffx2a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnjyffx2a.jl:33\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996.0\" == \"0b1111100100\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjyffx2a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjyffx2a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnjyffx2a.jl:34\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706.0\" == \"0b1011000"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjyffx2a.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5dchfcur.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5dchfcur.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5dchfcur.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5dchfcur.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5dchfcur.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5dchfcur.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5dchfcur.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5dchfcur.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5dchfcur.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcuc6rapt.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcuc6rapt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcuc6rapt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcuc6rapt.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcuc6rapt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcuc6rapt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcuc6rapt.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcuc6rapt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcuc6rapt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcuc6rapt.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcuc6rapt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcuc6rapt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcuc6rapt.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcuc6rapt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsu280x_o.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsu280x_o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsu280x_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsu280x_o.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsu280x_o.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsu280x_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsu280x_o.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsu280x_o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsu280x_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsu280x_o.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsu280x_o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsu280x_o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsu280x_o.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsu280x_o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmparmqc6wc.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmparmqc6wc.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmparmqc6wc.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmparmqc6wc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmparmqc6wc.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmparmqc6wc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmparmqc6wc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmparmqc6wc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmparmqc6wc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmparmqc6wc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmparmqc6wc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmparmqc6wc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmparmqc6wc.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ string(\"0b\", binary(avg))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rounded_avg;\n\t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13)\
    \ == \"0b1010\")\n\t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996,\
    \ 997) == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\
    \t@test(candidate(185, 546) == \"0b101101110\")\n\t@test(candidate(362, 496) ==\
    \ \"0b110101101\")\n\t@test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197,\
    \ 233) == \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5,\
    \ 1) == -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1jvxr1a2.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: binary\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp1jvxr1a2.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1jvxr1a2.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1jvxr1a2.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp1jvxr1a2.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: binary not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp1jvxr1a2.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1jvxr1a2.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1jvxr1a2.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp1jvxr1a2.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: binary not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp1jvxr1a2.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1jvxr1a2.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1jvxr1a2.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp1jvxr1a2.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: binary not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Mai"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7njydyo.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7njydyo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7njydyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl7njydyo.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl7njydyo.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7njydyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl7njydyo.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7njydyo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7njydyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl7njydyo.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7njydyo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7njydyo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl7njydyo.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7njydyo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6lkmbdu9.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lkmbdu9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lkmbdu9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6lkmbdu9.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lkmbdu9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lkmbdu9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6lkmbdu9.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lkmbdu9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lkmbdu9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6lkmbdu9.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lkmbdu9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lkmbdu9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6lkmbdu9.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6lkmbdu9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1lu9qfzc.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp1lu9qfzc.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1lu9qfzc.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1lu9qfzc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp1lu9qfzc.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp1lu9qfzc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1lu9qfzc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1lu9qfzc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp1lu9qfzc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp1lu9qfzc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1lu9qfzc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1lu9qfzc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp1lu9qfzc.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzik3wlc1.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpzik3wlc1.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzik3wlc1.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzik3wlc1.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzik3wlc1.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpzik3wlc1.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzik3wlc1.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzik3wlc1.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzik3wlc1.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpzik3wlc1.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzik3wlc1.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzik3wlc1.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzik3wlc1.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxklrqiot.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxklrqiot.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxklrqiot.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxklrqiot.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxklrqiot.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxklrqiot.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxklrqiot.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxklrqiot.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxklrqiot.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxklrqiot.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxklrqiot.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxklrqiot.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxklrqiot.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxklrqiot.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkxy9e9vw.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpkxy9e9vw.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkxy9e9vw.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkxy9e9vw.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpkxy9e9vw.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpkxy9e9vw.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkxy9e9vw.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkxy9e9vw.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpkxy9e9vw.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpkxy9e9vw.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkxy9e9vw.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkxy9e9vw.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpkxy9e9vw.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpztnknv0d.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztnknv0d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztnknv0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpztnknv0d.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztnknv0d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztnknv0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpztnknv0d.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztnknv0d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztnknv0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpztnknv0d.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztnknv0d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztnknv0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpztnknv0d.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztnknv0d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxhes0i_m.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhes0i_m.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhes0i_m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxhes0i_m.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhes0i_m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhes0i_m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxhes0i_m.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhes0i_m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhes0i_m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxhes0i_m.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhes0i_m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhes0i_m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxhes0i_m.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhes0i_m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8bp93dg8.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bp93dg8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bp93dg8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bp93dg8.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bp93dg8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bp93dg8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bp93dg8.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bp93dg8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bp93dg8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bp93dg8.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bp93dg8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bp93dg8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bp93dg8.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8bp93dg8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb714ra_s.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb714ra_s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb714ra_s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb714ra_s.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb714ra_s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb714ra_s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb714ra_s.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb714ra_s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb714ra_s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb714ra_s.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb714ra_s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb714ra_s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb714ra_s.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb714ra_s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxfihp03.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxfihp03.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxfihp03.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxfihp03.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxfihp03.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxfihp03.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxfihp03.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxfihp03.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxfihp03.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxfihp03.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxfihp03.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxfihp03.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxfihp03.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxfihp03.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvlybv1cz.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpvlybv1cz.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvlybv1cz.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvlybv1cz.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpvlybv1cz.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpvlybv1cz.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvlybv1cz.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvlybv1cz.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpvlybv1cz.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpncfcas31.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpncfcas31.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpncfcas31.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpncfcas31.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpncfcas31.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpncfcas31.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpncfcas31.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpncfcas31.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpncfcas31.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpncfcas31.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpncfcas31.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpncfcas31.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpncfcas31.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ sum(n:m) / (m - n + 1)))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1z29s_01.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1z29s_01.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1z29s_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1z29s_01.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1z29s_01.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1z29s_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1z29s_01.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1z29s_01.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1z29s_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1z29s_01.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1z29s_01.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1z29s_01.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1z29s_01.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1z29s_01.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1q5lwlfy.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5lwlfy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5lwlfy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1q5lwlfy.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5lwlfy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5lwlfy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1q5lwlfy.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5lwlfy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5lwlfy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1q5lwlfy.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q5lwlfy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q5lwlfy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1q5lwlfy.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1q5lwlfy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp88j9ph24.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp88j9ph24.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp88j9ph24.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp88j9ph24.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp88j9ph24.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp88j9ph24.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp88j9ph24.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp88j9ph24.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp88j9ph24.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp88j9ph24.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp88j9ph24.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp88j9ph24.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp88j9ph24.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjxyntrcl.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxyntrcl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxyntrcl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjxyntrcl.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxyntrcl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxyntrcl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjxyntrcl.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxyntrcl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxyntrcl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjxyntrcl.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxyntrcl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxyntrcl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjxyntrcl.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjxyntrcl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuanxu4q4.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuanxu4q4.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuanxu4q4.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuanxu4q4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuanxu4q4.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuanxu4q4.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuanxu4q4.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuanxu4q4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuanxu4q4.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgixicfyv.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgixicfyv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgixicfyv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgixicfyv.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgixicfyv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgixicfyv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgixicfyv.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgixicfyv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgixicfyv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgixicfyv.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgixicfyv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgixicfyv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgixicfyv.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgixicfyv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmjl5d08c.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpmjl5d08c.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmjl5d08c.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmjl5d08c.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmjl5d08c.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmjl5d08c.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmjl5d08c.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmjl5d08c.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmjl5d08c.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmjl5d08c.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmjl5d08c.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmjl5d08c.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmjl5d08c.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3vlv1ij1.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp3vlv1ij1.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3vlv1ij1.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3vlv1ij1.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3vlv1ij1.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp3vlv1ij1.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3vlv1ij1.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3vlv1ij1.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3vlv1ij1.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpngowj5fk.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpngowj5fk.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpngowj5fk.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpngowj5fk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpngowj5fk.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpngowj5fk.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpngowj5fk.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpngowj5fk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpngowj5fk.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpngowj5fk.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpngowj5fk.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpngowj5fk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpngowj5fk.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_p5ow9ht.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p5ow9ht.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p5ow9ht.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p5ow9ht.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p5ow9ht.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p5ow9ht.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p5ow9ht.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p5ow9ht.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p5ow9ht.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p5ow9ht.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p5ow9ht.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p5ow9ht.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p5ow9ht.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p5ow9ht.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvoj57mvx.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpvoj57mvx.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvoj57mvx.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvoj57mvx.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpvoj57mvx.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpvoj57mvx.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvoj57mvx.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvoj57mvx.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpvoj57mvx.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsb83yt2m.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsb83yt2m.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsb83yt2m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsb83yt2m.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsb83yt2m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsb83yt2m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsb83yt2m.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsb83yt2m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsb83yt2m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsb83yt2m.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsb83yt2m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsb83yt2m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsb83yt2m.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsb83yt2m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6ki70ikp.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp6ki70ikp.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6ki70ikp.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6ki70ikp.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp6ki70ikp.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp6ki70ikp.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6ki70ikp.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6ki70ikp.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp6ki70ikp.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2lmpy0u8.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp2lmpy0u8.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2lmpy0u8.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2lmpy0u8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2lmpy0u8.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2lmpy0u8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2lmpy0u8.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2lmpy0u8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2lmpy0u8.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2lmpy0u8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2lmpy0u8.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2lmpy0u8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2lmpy0u8.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb2fhhqfw.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpb2fhhqfw.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb2fhhqfw.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb2fhhqfw.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpb2fhhqfw.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpb2fhhqfw.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb2fhhqfw.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb2fhhqfw.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpb2fhhqfw.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph3igi68x.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmph3igi68x.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3igi68x.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3igi68x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3igi68x.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph3igi68x.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3igi68x.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3igi68x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3igi68x.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph3igi68x.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph3igi68x.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph3igi68x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph3igi68x.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21zbp5lr.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21zbp5lr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21zbp5lr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp21zbp5lr.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21zbp5lr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21zbp5lr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp21zbp5lr.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21zbp5lr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21zbp5lr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp21zbp5lr.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21zbp5lr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21zbp5lr.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp21zbp5lr.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21zbp5lr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp590_4vve.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp590_4vve.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp590_4vve.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp590_4vve.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp590_4vve.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp590_4vve.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp590_4vve.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp590_4vve.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp590_4vve.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp590_4vve.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp590_4vve.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp590_4vve.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp590_4vve.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpql83nfyl.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql83nfyl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql83nfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpql83nfyl.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql83nfyl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql83nfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpql83nfyl.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql83nfyl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql83nfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpql83nfyl.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql83nfyl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql83nfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpql83nfyl.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpql83nfyl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    sum = 0\n    for i in n:m\n        sum +=\
    \ i\n    end\n    avg = round(Int64, sum / (m - n + 1))\n    return \"0b$(Int(avg,\
    \ 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpemkg0k7n.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpemkg0k7n.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpemkg0k7n.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpemkg0k7n.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpemkg0k7n.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpemkg0k7n.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpemkg0k7n.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpemkg0k7n.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpemkg0k7n.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3670v7l.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3670v7l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3670v7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpe3670v7l.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3670v7l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3670v7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpe3670v7l.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3670v7l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3670v7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpe3670v7l.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3670v7l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3670v7l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpe3670v7l.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3670v7l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return bin(round(Int64, (n + m) / 2))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt_ioxfwt.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpt_ioxfwt.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt_ioxfwt.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt_ioxfwt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt_ioxfwt.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpt_ioxfwt.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt_ioxfwt.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt_ioxfwt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt_ioxfwt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpt_ioxfwt.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt_ioxfwt.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt_ioxfwt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt_ioxfwt.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpt_"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv_qp_voo.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_qp_voo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_qp_voo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv_qp_voo.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_qp_voo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_qp_voo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv_qp_voo.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_qp_voo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_qp_voo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv_qp_voo.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_qp_voo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_qp_voo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv_qp_voo.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_qp_voo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa5ruycwn.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ruycwn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ruycwn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa5ruycwn.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ruycwn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ruycwn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa5ruycwn.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ruycwn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ruycwn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa5ruycwn.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ruycwn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ruycwn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa5ruycwn.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5ruycwn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcc3f6ph7.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcc3f6ph7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcc3f6ph7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcc3f6ph7.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcc3f6ph7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcc3f6ph7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcc3f6ph7.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcc3f6ph7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcc3f6ph7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcc3f6ph7.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcc3f6ph7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcc3f6ph7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcc3f6ph7.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcc3f6ph7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsl8n6oa8.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl8n6oa8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl8n6oa8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl8n6oa8.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl8n6oa8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl8n6oa8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl8n6oa8.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl8n6oa8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl8n6oa8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl8n6oa8.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl8n6oa8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl8n6oa8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl8n6oa8.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsl8n6oa8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp8npcutx.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8npcutx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8npcutx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp8npcutx.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8npcutx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8npcutx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp8npcutx.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8npcutx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8npcutx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp8npcutx.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8npcutx.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8npcutx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp8npcutx.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8npcutx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpea4p19pl.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpea4p19pl.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpea4p19pl.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpea4p19pl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpea4p19pl.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpea4p19pl.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpea4p19pl.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpea4p19pl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpea4p19pl.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpea4p19pl.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpea4p19pl.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpea4p19pl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpea4p19pl.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbx75_hc9.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbx75_hc9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbx75_hc9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbx75_hc9.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbx75_hc9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbx75_hc9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbx75_hc9.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbx75_hc9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbx75_hc9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbx75_hc9.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbx75_hc9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbx75_hc9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbx75_hc9.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbx75_hc9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_c3qow57.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_c3qow57.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_c3qow57.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_c3qow57.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_c3qow57.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_c3qow57.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_c3qow57.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_c3qow57.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_c3qow57.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_c3qow57.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_c3qow57.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_c3qow57.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_c3qow57.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_c3qow57.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvi2sh5mc.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvi2sh5mc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvi2sh5mc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvi2sh5mc.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvi2sh5mc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvi2sh5mc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvi2sh5mc.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvi2sh5mc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvi2sh5mc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvi2sh5mc.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvi2sh5mc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvi2sh5mc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvi2sh5mc.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvi2sh5mc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpazrarc9g.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazrarc9g.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazrarc9g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpazrarc9g.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazrarc9g.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazrarc9g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpazrarc9g.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazrarc9g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazrarc9g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpazrarc9g.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazrarc9g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazrarc9g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpazrarc9g.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazrarc9g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b\" * string(dec2bin(avg))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rounded_avg;\n\t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13)\
    \ == \"0b1010\")\n\t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996,\
    \ 997) == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\
    \t@test(candidate(185, 546) == \"0b101101110\")\n\t@test(candidate(362, 496) ==\
    \ \"0b110101101\")\n\t@test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197,\
    \ 233) == \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5,\
    \ 1) == -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyhl_vvof.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpyhl_vvof.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyhl_vvof.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyhl_vvof.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyhl_vvof.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpyhl_vvof.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyhl_vvof.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyhl_vvof.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyhl_vvof.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpyhl_vvof.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyhl_vvof.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyhl_vvof.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyhl_vvof.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpar8mof2d.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar8mof2d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar8mof2d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpar8mof2d.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar8mof2d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar8mof2d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpar8mof2d.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar8mof2d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar8mof2d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpar8mof2d.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar8mof2d.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar8mof2d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpar8mof2d.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpar8mof2d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx26nxp_l.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx26nxp_l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx26nxp_l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx26nxp_l.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx26nxp_l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx26nxp_l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx26nxp_l.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx26nxp_l.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx26nxp_l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx26nxp_l.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx26nxp_l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx26nxp_l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx26nxp_l.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx26nxp_l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdpkt65ut.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpdpkt65ut.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdpkt65ut.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdpkt65ut.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdpkt65ut.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdpkt65ut.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdpkt65ut.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdpkt65ut.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdpkt65ut.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdpkt65ut.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdpkt65ut.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdpkt65ut.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdpkt65ut.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2kmzgkaa.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp2kmzgkaa.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kmzgkaa.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kmzgkaa.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kmzgkaa.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2kmzgkaa.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kmzgkaa.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kmzgkaa.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kmzgkaa.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2kmzgkaa.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2kmzgkaa.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2kmzgkaa.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2kmzgkaa.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg8xo1gwr.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpg8xo1gwr.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg8xo1gwr.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg8xo1gwr.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpg8xo1gwr.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpg8xo1gwr.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg8xo1gwr.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg8xo1gwr.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpg8xo1gwr.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpg8xo1gwr.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg8xo1gwr.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg8xo1gwr.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpg8xo1gwr.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvzljv4e3.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzljv4e3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzljv4e3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvzljv4e3.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzljv4e3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzljv4e3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvzljv4e3.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzljv4e3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzljv4e3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvzljv4e3.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzljv4e3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzljv4e3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvzljv4e3.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzljv4e3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgv72h_1s.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgv72h_1s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgv72h_1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgv72h_1s.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgv72h_1s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgv72h_1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgv72h_1s.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgv72h_1s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgv72h_1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgv72h_1s.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgv72h_1s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgv72h_1s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgv72h_1s.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgv72h_1s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl53hkjwy.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl53hkjwy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53hkjwy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl53hkjwy.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl53hkjwy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53hkjwy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl53hkjwy.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl53hkjwy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53hkjwy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl53hkjwy.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl53hkjwy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53hkjwy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpl53hkjwy.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl53hkjwy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiuz4zwi7.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuz4zwi7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuz4zwi7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuz4zwi7.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuz4zwi7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuz4zwi7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuz4zwi7.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuz4zwi7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuz4zwi7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuz4zwi7.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiuz4zwi7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiuz4zwi7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiuz4zwi7.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiuz4zwi7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5vmoa8wv.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5vmoa8wv.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5vmoa8wv.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5vmoa8wv.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5vmoa8wv.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5vmoa8wv.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5vmoa8wv.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5vmoa8wv.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5vmoa8wv.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp25w6eale.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25w6eale.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25w6eale.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25w6eale.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25w6eale.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25w6eale.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25w6eale.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25w6eale.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25w6eale.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25w6eale.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25w6eale.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25w6eale.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp25w6eale.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp25w6eale.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmwmpdexq.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmwmpdexq.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmwmpdexq.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmwmpdexq.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpmwmpdexq.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmwmpdexq.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmwmpdexq.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmwmpdexq.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8yljn8uw.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yljn8uw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yljn8uw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yljn8uw.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yljn8uw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yljn8uw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yljn8uw.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yljn8uw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yljn8uw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yljn8uw.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yljn8uw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yljn8uw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yljn8uw.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yljn8uw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0waqpkjv.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0waqpkjv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0waqpkjv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0waqpkjv.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0waqpkjv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0waqpkjv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0waqpkjv.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0waqpkjv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0waqpkjv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0waqpkjv.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0waqpkjv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0waqpkjv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0waqpkjv.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0waqpkjv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpokl9te_f.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpokl9te_f.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpokl9te_f.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpokl9te_f.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpokl9te_f.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpokl9te_f.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpokl9te_f.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpokl9te_f.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpokl9te_f.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpokl9te_f.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpokl9te_f.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpokl9te_f.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpokl9te_f.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdt3aq77i.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpdt3aq77i.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdt3aq77i.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdt3aq77i.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpdt3aq77i.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdt3aq77i.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdt3aq77i.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdt3aq77i.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpdt3aq77i.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdt3aq77i.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdt3aq77i.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdt3aq77i.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpdt3aq77i.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphycn66ve.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphycn66ve.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphycn66ve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphycn66ve.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphycn66ve.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphycn66ve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphycn66ve.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphycn66ve.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphycn66ve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphycn66ve.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphycn66ve.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphycn66ve.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphycn66ve.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphycn66ve.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmd3694oh.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpmd3694oh.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmd3694oh.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmd3694oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmd3694oh.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmd3694oh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmd3694oh.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmd3694oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmd3694oh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmd3694oh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmd3694oh.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmd3694oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmd3694oh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b\" * string(dec2bin(avg))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rounded_avg;\n\t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13)\
    \ == \"0b1010\")\n\t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996,\
    \ 997) == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\
    \t@test(candidate(185, 546) == \"0b101101110\")\n\t@test(candidate(362, 496) ==\
    \ \"0b110101101\")\n\t@test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197,\
    \ 233) == \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5,\
    \ 1) == -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppps1bpqp.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmppps1bpqp.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppps1bpqp.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppps1bpqp.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmppps1bpqp.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmppps1bpqp.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppps1bpqp.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppps1bpqp.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmppps1bpqp.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmppps1bpqp.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppps1bpqp.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppps1bpqp.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmppps1bpqp.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5zq_hq_t.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp5zq_hq_t.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5zq_hq_t.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zq_hq_t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5zq_hq_t.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5zq_hq_t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5zq_hq_t.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zq_hq_t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5zq_hq_t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5zq_hq_t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5zq_hq_t.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zq_hq_t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5zq_hq_t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptawmxqt_.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptawmxqt_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptawmxqt_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptawmxqt_.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptawmxqt_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptawmxqt_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptawmxqt_.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptawmxqt_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptawmxqt_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptawmxqt_.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptawmxqt_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptawmxqt_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptawmxqt_.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptawmxqt_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi80teiai.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpi80teiai.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi80teiai.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi80teiai.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpi80teiai.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpi80teiai.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi80teiai.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi80teiai.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpi80teiai.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpi80teiai.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi80teiai.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi80teiai.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpi80teiai.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwemy37du.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwemy37du.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwemy37du.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwemy37du.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwemy37du.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwemy37du.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwemy37du.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwemy37du.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwemy37du.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwemy37du.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwemy37du.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwemy37du.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwemy37du.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwemy37du.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0xboz0oh.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp0xboz0oh.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0xboz0oh.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0xboz0oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp0xboz0oh.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp0xboz0oh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0xboz0oh.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0xboz0oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp0xboz0oh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp0xboz0oh.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0xboz0oh.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0xboz0oh.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp0xboz0oh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppq42d523.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppq42d523.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppq42d523.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppq42d523.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppq42d523.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppq42d523.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppq42d523.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppq42d523.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppq42d523.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppq42d523.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppq42d523.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppq42d523.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppq42d523.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppq42d523.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2xplf4k5.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2xplf4k5.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2xplf4k5.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2xplf4k5.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2xplf4k5.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp2xplf4k5.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2xplf4k5.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2xplf4k5.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2xplf4k5.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ string(\"0b\", binary(avg))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rounded_avg;\n\t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13)\
    \ == \"0b1010\")\n\t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996,\
    \ 997) == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\
    \t@test(candidate(185, 546) == \"0b101101110\")\n\t@test(candidate(362, 496) ==\
    \ \"0b110101101\")\n\t@test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197,\
    \ 233) == \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5,\
    \ 1) == -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyj8l72yt.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: binary\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpyj8l72yt.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyj8l72yt.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyj8l72yt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyj8l72yt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: binary not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpyj8l72yt.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyj8l72yt.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyj8l72yt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyj8l72yt.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: binary not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpyj8l72yt.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyj8l72yt.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyj8l72yt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpyj8l72yt.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: binary not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Mai"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxkgm90b_.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpxkgm90b_.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxkgm90b_.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxkgm90b_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxkgm90b_.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxkgm90b_.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxkgm90b_.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxkgm90b_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxkgm90b_.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxkgm90b_.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxkgm90b_.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxkgm90b_.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxkgm90b_.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc67i490d.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpc67i490d.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc67i490d.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc67i490d.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpc67i490d.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpc67i490d.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc67i490d.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc67i490d.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpc67i490d.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph3_hgfys.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3_hgfys.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3_hgfys.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph3_hgfys.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph3_hgfys.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3_hgfys.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph3_hgfys.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3_hgfys.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3_hgfys.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph3_hgfys.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3_hgfys.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3_hgfys.jl:25\ntest set: Test\
    \ Failed at /tmp/tmph3_hgfys.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph3_hgfys.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m \n        return -1\n    end\n    return Int(round(mean([n:m]))) |> Int64\
    \ |> binary\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t\
    @test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t\
    @test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) ==\
    \ \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph63qy4c8.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmph63qy4c8.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph63qy4c8.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph63qy4c8.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph63qy4c8.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph63qy4c8.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph63qy4c8.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph63qy4c8.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph63qy4c8.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph63qy4c8.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph63qy4c8.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph63qy4c8.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph63qy4c8.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpze9a3ia_.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze9a3ia_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze9a3ia_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpze9a3ia_.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze9a3ia_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze9a3ia_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpze9a3ia_.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze9a3ia_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze9a3ia_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpze9a3ia_.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze9a3ia_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze9a3ia_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpze9a3ia_.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpze9a3ia_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3b2ymass.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp3b2ymass.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3b2ymass.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3b2ymass.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3b2ymass.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp3b2ymass.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3b2ymass.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3b2ymass.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3b2ymass.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbirw15uc.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpbirw15uc.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbirw15uc.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbirw15uc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpbirw15uc.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpbirw15uc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbirw15uc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbirw15uc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpbirw15uc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpbirw15uc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbirw15uc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbirw15uc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpbirw15uc.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6ruy1n6t.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp6ruy1n6t.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6ruy1n6t.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6ruy1n6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp6ruy1n6t.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp6ruy1n6t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6ruy1n6t.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6ruy1n6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp6ruy1n6t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp6ruy1n6t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6ruy1n6t.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6ruy1n6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp6ruy1n6t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxug41_hs.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxug41_hs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxug41_hs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxug41_hs.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxug41_hs.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxug41_hs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxug41_hs.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxug41_hs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxug41_hs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxug41_hs.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxug41_hs.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxug41_hs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxug41_hs.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxug41_hs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8pb7k3u7.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pb7k3u7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pb7k3u7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8pb7k3u7.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pb7k3u7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pb7k3u7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8pb7k3u7.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pb7k3u7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pb7k3u7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8pb7k3u7.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pb7k3u7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pb7k3u7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8pb7k3u7.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8pb7k3u7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps4p8_k_q.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmps4p8_k_q.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps4p8_k_q.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps4p8_k_q.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmps4p8_k_q.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmps4p8_k_q.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps4p8_k_q.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps4p8_k_q.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmps4p8_k_q.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbagvsj15.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbagvsj15.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbagvsj15.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbagvsj15.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbagvsj15.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbagvsj15.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbagvsj15.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbagvsj15.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbagvsj15.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbagvsj15.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbagvsj15.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbagvsj15.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbagvsj15.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbagvsj15.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7cs3dw0u.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp7cs3dw0u.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7cs3dw0u.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7cs3dw0u.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp7cs3dw0u.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp7cs3dw0u.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7cs3dw0u.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7cs3dw0u.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp7cs3dw0u.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp7cs3dw0u.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7cs3dw0u.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7cs3dw0u.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp7cs3dw0u.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnvh99lxg.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvh99lxg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvh99lxg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnvh99lxg.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvh99lxg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvh99lxg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnvh99lxg.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvh99lxg.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvh99lxg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnvh99lxg.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnvh99lxg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnvh99lxg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnvh99lxg.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvh99lxg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpty3swevc.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpty3swevc.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpty3swevc.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpty3swevc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpty3swevc.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpty3swevc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpty3swevc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpty3swevc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpty3swevc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpty3swevc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpty3swevc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpty3swevc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpty3swevc.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10ycg2en.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp10ycg2en.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10ycg2en.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10ycg2en.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp10ycg2en.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp10ycg2en.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10ycg2en.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10ycg2en.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp10ycg2en.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp10ycg2en.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10ycg2en.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10ycg2en.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp10ycg2en.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0q_r77d2.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp0q_r77d2.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0q_r77d2.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0q_r77d2.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp0q_r77d2.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp0q_r77d2.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0q_r77d2.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0q_r77d2.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp0q_r77d2.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplm9k8id8.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm9k8id8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm9k8id8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplm9k8id8.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm9k8id8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm9k8id8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplm9k8id8.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm9k8id8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm9k8id8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplm9k8id8.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm9k8id8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm9k8id8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplm9k8id8.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplm9k8id8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptxkvmy6t.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmptxkvmy6t.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptxkvmy6t.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptxkvmy6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmptxkvmy6t.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmptxkvmy6t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptxkvmy6t.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptxkvmy6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmptxkvmy6t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmptxkvmy6t.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptxkvmy6t.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptxkvmy6t.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmptxkvmy6t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(sum(n:m)/(m-n+1))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9zsbk5xu.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0b3\" == \"0b11\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9zsbk5xu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9zsbk5xu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9zsbk5xu.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0b10\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9zsbk5xu.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9zsbk5xu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9zsbk5xu.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0b970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9zsbk5xu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9zsbk5xu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9zsbk5xu.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0b996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9zsbk5xu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9zsbk5xu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9zsbk5xu.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0b706\" == \"0b1011000010\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zsbk5xu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxxn6amx.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxxn6amx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxxn6amx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxxn6amx.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxxn6amx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxxn6amx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxxn6amx.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxxn6amx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxxn6amx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxxn6amx.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzxxn6amx.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzxxn6amx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzxxn6amx.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxxn6amx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw9pag9cn.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpw9pag9cn.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpw9pag9cn.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpw9pag9cn.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpw9pag9cn.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpw9pag9cn.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpw9pag9cn.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpw9pag9cn.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpw9pag9cn.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6x9pui2h.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x9pui2h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x9pui2h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6x9pui2h.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x9pui2h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x9pui2h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6x9pui2h.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x9pui2h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x9pui2h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6x9pui2h.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6x9pui2h.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6x9pui2h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6x9pui2h.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6x9pui2h.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps4sre1yf.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4sre1yf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4sre1yf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4sre1yf.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4sre1yf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4sre1yf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4sre1yf.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4sre1yf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4sre1yf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4sre1yf.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4sre1yf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4sre1yf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmps4sre1yf.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4sre1yf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpekasodns.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpekasodns.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpekasodns.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpekasodns.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpekasodns.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpekasodns.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpekasodns.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpekasodns.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpekasodns.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpekasodns.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpekasodns.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpekasodns.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpekasodns.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn1h8o407.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpn1h8o407.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1h8o407.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1h8o407.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpn1h8o407.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpn1h8o407.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1h8o407.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1h8o407.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpn1h8o407.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpn1h8o407.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1h8o407.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1h8o407.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpn1h8o407.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqbagvria.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbagvria.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbagvria.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqbagvria.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbagvria.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbagvria.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqbagvria.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbagvria.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbagvria.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqbagvria.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbagvria.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbagvria.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqbagvria.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbagvria.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpawb72l4o.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpawb72l4o.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawb72l4o.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawb72l4o.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpawb72l4o.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpawb72l4o.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawb72l4o.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawb72l4o.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpawb72l4o.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpawb72l4o.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawb72l4o.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawb72l4o.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpawb72l4o.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpizsjvy1p.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpizsjvy1p.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpizsjvy1p.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpizsjvy1p.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpizsjvy1p.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpizsjvy1p.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpizsjvy1p.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpizsjvy1p.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpizsjvy1p.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpizsjvy1p.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpizsjvy1p.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpizsjvy1p.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpizsjvy1p.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpevyf3jn7.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevyf3jn7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevyf3jn7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevyf3jn7.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevyf3jn7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevyf3jn7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevyf3jn7.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevyf3jn7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevyf3jn7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevyf3jn7.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpevyf3jn7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpevyf3jn7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpevyf3jn7.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpevyf3jn7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuunm8ywq.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuunm8ywq.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuunm8ywq.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuunm8ywq.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuunm8ywq.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpuunm8ywq.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuunm8ywq.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuunm8ywq.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuunm8ywq.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph7e64176.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmph7e64176.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph7e64176.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph7e64176.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmph7e64176.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph7e64176.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph7e64176.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph7e64176.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmph7e64176.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph7e64176.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph7e64176.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph7e64176.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmph7e64176.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxlouoqtm.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxlouoqtm.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxlouoqtm.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxlouoqtm.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpxlouoqtm.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxlouoqtm.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxlouoqtm.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxlouoqtm.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpxlouoqtm.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpalihkvro.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpalihkvro.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpalihkvro.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpalihkvro.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpalihkvro.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpalihkvro.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpalihkvro.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpalihkvro.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpalihkvro.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk5k6r5c_.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5k6r5c_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5k6r5c_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk5k6r5c_.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5k6r5c_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5k6r5c_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk5k6r5c_.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5k6r5c_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5k6r5c_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk5k6r5c_.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5k6r5c_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5k6r5c_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk5k6r5c_.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5k6r5c_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk41bp3of.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk41bp3of.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk41bp3of.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk41bp3of.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk41bp3of.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk41bp3of.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk41bp3of.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk41bp3of.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk41bp3of.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk41bp3of.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk41bp3of.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk41bp3of.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk41bp3of.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk41bp3of.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5ekxokg8.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5ekxokg8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5ekxokg8.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5ekxokg8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5ekxokg8.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5ekxokg8.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5ekxokg8.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5ekxokg8.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp5ekxokg8.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdztbr3l_.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpdztbr3l_.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdztbr3l_.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdztbr3l_.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdztbr3l_.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdztbr3l_.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdztbr3l_.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdztbr3l_.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdztbr3l_.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpdztbr3l_.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdztbr3l_.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdztbr3l_.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpdztbr3l_.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj219fhq4.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpj219fhq4.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj219fhq4.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj219fhq4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpj219fhq4.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpj219fhq4.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj219fhq4.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj219fhq4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpj219fhq4.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppcr6wz0a.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmppcr6wz0a.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppcr6wz0a.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppcr6wz0a.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmppcr6wz0a.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmppcr6wz0a.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppcr6wz0a.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppcr6wz0a.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmppcr6wz0a.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzekutbmw.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzekutbmw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzekutbmw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzekutbmw.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzekutbmw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzekutbmw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzekutbmw.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzekutbmw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzekutbmw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzekutbmw.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzekutbmw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzekutbmw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzekutbmw.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzekutbmw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpbzt8i6.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpbzt8i6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpbzt8i6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbpbzt8i6.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpbzt8i6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpbzt8i6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbpbzt8i6.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpbzt8i6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpbzt8i6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbpbzt8i6.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpbzt8i6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpbzt8i6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbpbzt8i6.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpbzt8i6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprkn7i4ib.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmprkn7i4ib.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprkn7i4ib.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprkn7i4ib.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmprkn7i4ib.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmprkn7i4ib.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprkn7i4ib.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprkn7i4ib.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmprkn7i4ib.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmprkn7i4ib.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprkn7i4ib.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprkn7i4ib.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmprkn7i4ib.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxluyml7m.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpxluyml7m.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxluyml7m.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxluyml7m.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxluyml7m.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxluyml7m.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxluyml7m.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxluyml7m.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxluyml7m.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpxluyml7m.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxluyml7m.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxluyml7m.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpxluyml7m.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvudgztuh.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudgztuh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudgztuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvudgztuh.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudgztuh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudgztuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvudgztuh.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudgztuh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudgztuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvudgztuh.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudgztuh.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudgztuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvudgztuh.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvudgztuh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeenlv4rc.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpeenlv4rc.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpeenlv4rc.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpeenlv4rc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpeenlv4rc.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpeenlv4rc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpeenlv4rc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpeenlv4rc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpeenlv4rc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpeenlv4rc.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpeenlv4rc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpeenlv4rc.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpeenlv4rc.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd4ztopct.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpd4ztopct.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4ztopct.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd4ztopct.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpd4ztopct.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\\\
    n    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpd4ztopct.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4ztopct.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd4ztopct.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpd4ztopct.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4b809c5x.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp4b809c5x.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4b809c5x.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4b809c5x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp4b809c5x.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp4b809c5x.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4b809c5x.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4b809c5x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp4b809c5x.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp4b809c5x.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4b809c5x.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4b809c5x.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp4b809c5x.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmzlu0pwu.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpmzlu0pwu.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmzlu0pwu.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmzlu0pwu.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmzlu0pwu.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmzlu0pwu.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmzlu0pwu.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmzlu0pwu.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmzlu0pwu.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpmzlu0pwu.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmzlu0pwu.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmzlu0pwu.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmzlu0pwu.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(dec2bin(avg))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpohkdk5en.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: dec2bin\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpohkdk5en.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpohkdk5en.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpohkdk5en.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpohkdk5en.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: dec2bin not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpohkdk5en.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpohkdk5en.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpohkdk5en.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpohkdk5en.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpohkdk5en.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpohkdk5en.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpohkdk5en.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpohkdk5en.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: dec2bin not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int64(round(mean([n:m])))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1, 5)\
    \ == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5gwhyv09.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmp5gwhyv09.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5gwhyv09.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5gwhyv09.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5gwhyv09.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5gwhyv09.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5gwhyv09.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5gwhyv09.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5gwhyv09.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmp5gwhyv09.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5gwhyv09.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5gwhyv09.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5gwhyv09.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph_3to22v.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmph_3to22v.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph_3to22v.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph_3to22v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph_3to22v.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph_3to22v.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph_3to22v.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph_3to22v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph_3to22v.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmph_3to22v.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph_3to22v.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph_3to22v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph_3to22v.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmot6_at3.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmot6_at3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmot6_at3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmot6_at3.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmot6_at3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmot6_at3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmot6_at3.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmot6_at3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmot6_at3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmot6_at3.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmot6_at3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmot6_at3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmot6_at3.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmot6_at3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpej7kn071.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej7kn071.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej7kn071.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpej7kn071.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej7kn071.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej7kn071.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpej7kn071.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej7kn071.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej7kn071.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpej7kn071.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej7kn071.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej7kn071.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpej7kn071.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpej7kn071.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n:m]))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr77mxms7.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(1, 5) == \"0b11\"\\n  UndefVarError: mean\
    \ not defined\\n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n    \
    \ @ Main /tmp/tmpr77mxms7.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr77mxms7.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr77mxms7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpr77mxms7.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpr77mxms7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr77mxms7.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr77mxms7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpr77mxms7.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/tmpr77mxms7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr77mxms7.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr77mxms7.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpr77mxms7.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] rounded_avg(n::Int64, m::Int64)\\n     @ Main /tmp/t"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpta5h2lmv.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta5h2lmv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta5h2lmv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpta5h2lmv.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta5h2lmv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta5h2lmv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpta5h2lmv.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta5h2lmv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta5h2lmv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpta5h2lmv.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpta5h2lmv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpta5h2lmv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpta5h2lmv.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpta5h2lmv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87tqhi7x.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87tqhi7x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87tqhi7x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp87tqhi7x.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87tqhi7x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87tqhi7x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp87tqhi7x.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87tqhi7x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87tqhi7x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp87tqhi7x.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87tqhi7x.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87tqhi7x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp87tqhi7x.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87tqhi7x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int(round(mean([n,\
    \ m]))))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwgeb5g29.jl:26\n  Test threw exception\n\
    \  Expression: candidate(1, 5) == \"0b11\"\n  UndefVarError: mean not defined\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpwgeb5g29.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgeb5g29.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgeb5g29.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwgeb5g29.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\n  UndefVarError: mean not defined\n  Stacktrace:\n\
    \   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpwgeb5g29.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgeb5g29.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgeb5g29.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwgeb5g29.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\n  UndefVarError: mean not defined\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpwgeb5g29.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgeb5g29.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgeb5g29.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwgeb5g29.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\n  UndefVarError: mean not defined\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpwgeb5g29.jl:19\n\
    \   [2] macro expansion\n     @ /share"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgeb5g29.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = (n + m) / 2\n    return \"0b\" * string(Int(avg))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpat02pphx.jl:27\\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\\n   Evaluated: \"0b3\" == \"0b11\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpat02pphx.jl:27 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpat02pphx.jl:26\\ntest set: Test\
    \ Failed at /tmp/tmpat02pphx.jl:28\\n  Expression: candidate(7, 13) == \"0b1010\"\
    \\n   Evaluated: \"0b10\" == \"0b1010\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpat02pphx.jl:28 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpat02pphx.jl:26\\ntest set: Error\
    \ During Test at /tmp/tmpat02pphx.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\\n  InexactError: Int64(970.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] rounded_avg(n::Int64,\
    \ m::Int64)\\n     @ Main /tmp/tmpat02pphx.jl:20\\n   [3] macro expansion\\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpat02pphx.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpat02pphx.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpat02pphx.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\\n  InexactError: Int64(996.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] rounded_avg(n::Int64,\
    \ m::Int64)\\n     @ Main /tmp/tmpat02pphx.jl:20\\n   [3] macro expansion\\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return Int64(round(Int64, (n + m) / 2))::String\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\t@test(candidate(1,\
    \ 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\t@test(candidate(964,\
    \ 977) == \"0b1111001010\")\n\t@test(candidate(996, 997) == \"0b1111100100\")\n\
    \t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185, 546)\
    \ == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t@test(candidate(350,\
    \ 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) == \"0b11010111\")\n\t\
    @test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) == -1)\n\t@test(candidate(5,\
    \ 5) == \"0b101\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8nrlqsot.jl:26\n  Test threw exception\n\
    \  Expression: candidate(1, 5) == \"0b11\"\n  TypeError: in typeassert, expected\
    \ String, got a value of type Int64\n  Stacktrace:\n   [1] rounded_avg(n::Int64,\
    \ m::Int64)\n     @ Main /tmp/tmp8nrlqsot.jl:19\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp8nrlqsot.jl:26 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8nrlqsot.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8nrlqsot.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\n  TypeError: in typeassert, expected String,\
    \ got a value of type Int64\n  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n\
    \     @ Main /tmp/tmp8nrlqsot.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8nrlqsot.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8nrlqsot.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8nrlqsot.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\n  TypeError: in typeassert, expected\
    \ String, got a value of type Int64\n  Stacktrace:\n   [1] rounded_avg(n::Int64,\
    \ m::Int64)\n     @ Main /tmp/tmp8nrlqsot.jl:19\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp8nrlqsot.jl:28 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8nrlqsot.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8nrlqsot.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(996, 997) == \"0b1111100100\"\n  TypeError: in typeassert, expected\
    \ String, go"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8nrlqsot.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ikkfqoy.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ikkfqoy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ikkfqoy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ikkfqoy.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ikkfqoy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ikkfqoy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ikkfqoy.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ikkfqoy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ikkfqoy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ikkfqoy.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ikkfqoy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ikkfqoy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ikkfqoy.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ikkfqoy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph5ntnovf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(1, 5) == \"0b11\"\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmph5ntnovf.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph5ntnovf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph5ntnovf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmph5ntnovf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n\
    \    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmph5ntnovf.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph5ntnovf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph5ntnovf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmph5ntnovf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5ntnovf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpycinjeez.jl:27\n  Test threw exception\n\
    \  Expression: candidate(1, 5) == \"0b11\"\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpycinjeez.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycinjeez.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycinjeez.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpycinjeez.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n\
    \    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpycinjeez.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycinjeez.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycinjeez.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpycinjeez.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycinjeez.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    avg = round(Int64, (n + m) / 2)\n    return\
    \ \"0b$(Int(avg, 2))\"\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxasf6zzp.jl:27\n  Test threw exception\n\
    \  Expression: candidate(1, 5) == \"0b11\"\n  MethodError: no method matching\
    \ Int64(::Int64, ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n    (::Type{T})(::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpxasf6zzp.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxasf6zzp.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxasf6zzp.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxasf6zzp.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(7, 13) == \"0b1010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n\
    \    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] rounded_avg(n::Int64, m::Int64)\n     @ Main /tmp/tmpxasf6zzp.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxasf6zzp.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxasf6zzp.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxasf6zzp.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(964, 977) == \"0b1111001010\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxasf6zzp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdyf9g7kh.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyf9g7kh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyf9g7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyf9g7kh.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyf9g7kh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyf9g7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyf9g7kh.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyf9g7kh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyf9g7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyf9g7kh.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyf9g7kh.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyf9g7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyf9g7kh.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdyf9g7kh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7v925zo9.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v925zo9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v925zo9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7v925zo9.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v925zo9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v925zo9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7v925zo9.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v925zo9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v925zo9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7v925zo9.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v925zo9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v925zo9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7v925zo9.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7v925zo9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppv5yjscc.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv5yjscc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv5yjscc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv5yjscc.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv5yjscc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv5yjscc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv5yjscc.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv5yjscc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv5yjscc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv5yjscc.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppv5yjscc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppv5yjscc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppv5yjscc.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppv5yjscc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two positive integers n and m, and your task is to\
    \ compute the\n    average of the integers from n through m (including n and m).\
    \ \n    Round the answer to the nearest integer and convert that to binary.\n\
    \    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1,\
    \ 5)\n    \"0b11\"\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10,\
    \ 20)\n    \"0b1111\"\n    >>> rounded_avg(20, 33)\n    \"0b11010\"\n    \"\"\"\
    \nfunction rounded_avg(n::Int64, m::Int64)::Union{String, Int64} \n    if n >\
    \ m\n        return -1\n    end\n    return \"0b\" * string(Int64, round(Int64,\
    \ (n + m) / 2))\nend\nusing Test\n\n@testset begin\n\ncandidate = rounded_avg;\n\
    \t@test(candidate(1, 5) == \"0b11\")\n\t@test(candidate(7, 13) == \"0b1010\")\n\
    \t@test(candidate(964, 977) == \"0b1111001010\")\n\t@test(candidate(996, 997)\
    \ == \"0b1111100100\")\n\t@test(candidate(560, 851) == \"0b1011000010\")\n\t@test(candidate(185,\
    \ 546) == \"0b101101110\")\n\t@test(candidate(362, 496) == \"0b110101101\")\n\t\
    @test(candidate(350, 902) == \"0b1001110010\")\n\t@test(candidate(197, 233) ==\
    \ \"0b11010111\")\n\t@test(candidate(7, 5) == -1)\n\t@test(candidate(5, 1) ==\
    \ -1)\n\t@test(candidate(5, 5) == \"0b101\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpev0h4z_2.jl:26\n  Expression: candidate(1,\
    \ 5) == \"0b11\"\n   Evaluated: \"0bInt643\" == \"0b11\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpev0h4z_2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpev0h4z_2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpev0h4z_2.jl:27\n  Expression: candidate(7, 13) == \"0b1010\"\
    \n   Evaluated: \"0bInt6410\" == \"0b1010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpev0h4z_2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpev0h4z_2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpev0h4z_2.jl:28\n  Expression: candidate(964, 977) == \"0b1111001010\"\
    \n   Evaluated: \"0bInt64970\" == \"0b1111001010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpev0h4z_2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpev0h4z_2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpev0h4z_2.jl:29\n  Expression: candidate(996, 997) == \"0b1111100100\"\
    \n   Evaluated: \"0bInt64996\" == \"0b1111100100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpev0h4z_2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpev0h4z_2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpev0h4z_2.jl:30\n  Expression: candidate(560, 851) == \"0b1011000010\"\
    \n   Evaluated: \"0bInt64706\" == \"0b1011000010\"\nStack"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpev0h4z_2.jl:23\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_131_digits
language: jl
results:
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpcj7ernf1.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj7ernf1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcj7ernf1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpcj7ernf1.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj7ernf1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcj7ernf1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpcj7ernf1.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj7ernf1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcj7ernf1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpcj7ernf1.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj7ernf1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcj7ernf1.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpcj7ernf1.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj7ernf1.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj7ernf1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  d = n % 10\n        if d % 2 == 1\n            return d * digits(n \xF7 10)\n\
    \        else\n            return digits(n \xF7 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprdgplr38.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdgplr38.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdgplr38.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdgplr38.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpag63stu3.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpag63stu3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpag63stu3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpag63stu3.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpag63stu3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpag63stu3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpag63stu3.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpag63stu3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpag63stu3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpag63stu3.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpag63stu3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpag63stu3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpag63stu3.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpag63stu3.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpag63stu3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n / 10)\n        else\n          \
    \  return n % 10 * digits(n / 10)\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphtrbh2sf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmphtrbh2sf.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmphtrbh2sf.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphtrbh2sf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphtrbh2sf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmphtrbh2sf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmphtrbh2sf.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmphtrbh2sf.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphtrbh2sf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphtrbh2sf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmphtrbh2sf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmphtrbh2sf.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmphtrbh2sf.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphtrbh2sf.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphtrbh2sf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmphtrbh2sf.jl:30\n  Test threw exception\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphtrbh2sf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpw5sxvc_j.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5sxvc_j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5sxvc_j.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5sxvc_j.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkl61g6ux.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkl61g6ux.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkl61g6ux.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkl61g6ux.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwo0dbpeb.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo0dbpeb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo0dbpeb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwo0dbpeb.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo0dbpeb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo0dbpeb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwo0dbpeb.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo0dbpeb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo0dbpeb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwo0dbpeb.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo0dbpeb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo0dbpeb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwo0dbpeb.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwo0dbpeb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagy91xqj.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagy91xqj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagy91xqj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagy91xqj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmps4ccz1l0.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4ccz1l0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4ccz1l0.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4ccz1l0.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc6fxs_ck.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6fxs_ck.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6fxs_ck.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6fxs_ck.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpksiu25mo.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksiu25mo.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksiu25mo.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpksiu25mo.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7okwi3vz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7okwi3vz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7okwi3vz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7okwi3vz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp40qtx0mj.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40qtx0mj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40qtx0mj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp40qtx0mj.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40qtx0mj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40qtx0mj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp40qtx0mj.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40qtx0mj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40qtx0mj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp40qtx0mj.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40qtx0mj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40qtx0mj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp40qtx0mj.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40qtx0mj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp414jj8d3.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp414jj8d3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp414jj8d3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp414jj8d3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpoa5y3k5g.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoa5y3k5g.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoa5y3k5g.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoa5y3k5g.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp47b_zcwb.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47b_zcwb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47b_zcwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47b_zcwb.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47b_zcwb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47b_zcwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47b_zcwb.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47b_zcwb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47b_zcwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47b_zcwb.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47b_zcwb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47b_zcwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp47b_zcwb.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47b_zcwb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpssgslx7a.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpssgslx7a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpssgslx7a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpssgslx7a.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpssgslx7a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpssgslx7a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpssgslx7a.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpssgslx7a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpssgslx7a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpssgslx7a.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpssgslx7a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpssgslx7a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpssgslx7a.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpssgslx7a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpexrrh6jm.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexrrh6jm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexrrh6jm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpexrrh6jm.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexrrh6jm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexrrh6jm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpexrrh6jm.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexrrh6jm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexrrh6jm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpexrrh6jm.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexrrh6jm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexrrh6jm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpexrrh6jm.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpexrrh6jm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpij4cz3qf.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpij4cz3qf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpij4cz3qf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpij4cz3qf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10)) * mod(n,10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm876n82t.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm876n82t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm876n82t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm876n82t.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm876n82t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm876n82t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm876n82t.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm876n82t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm876n82t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm876n82t.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm876n82t.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm876n82t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm876n82t.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm876n82t.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpns_14b9r.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpns_14b9r.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpns_14b9r.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpns_14b9r.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3uj11f43.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uj11f43.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3uj11f43.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3uj11f43.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uj11f43.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3uj11f43.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3uj11f43.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uj11f43.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3uj11f43.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3uj11f43.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uj11f43.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3uj11f43.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3uj11f43.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uj11f43.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3uj11f43.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1thqcxi4.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1thqcxi4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1thqcxi4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1thqcxi4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwxy8ca53.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwxy8ca53.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwxy8ca53.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxy8ca53.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7m34_cr_.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7m34_cr_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7m34_cr_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7m34_cr_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5njicfjd.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5njicfjd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5njicfjd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5njicfjd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpj_8g35yh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_8g35yh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_8g35yh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_8g35yh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp86tnvt6.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp86tnvt6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp86tnvt6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp86tnvt6.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp86tnvt6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp86tnvt6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp86tnvt6.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp86tnvt6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp86tnvt6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp86tnvt6.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp86tnvt6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp86tnvt6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp86tnvt6.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp86tnvt6.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp86tnvt6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return n % 10 * digits(div(n, 10))\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4lb313ul.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lb313ul.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lb313ul.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4lb313ul.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  d = n % 10\n        if d % 2 == 1\n            return d * digits(n \xF7 10)\n\
    \        else\n            return digits(n \xF7 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdxbm8lm5.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxbm8lm5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxbm8lm5.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxbm8lm5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_str = string(n)\n    product = 1\n    for i\
    \ in 1:length(n_str)\n        if parse(Int64, n_str[i]) % 2 != 0\n           \
    \ product *= parse(Int64, n_str[i])\n        end\n    end\n    return product\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqzqj0m9b.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzqj0m9b.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzqj0m9b.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzqj0m9b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1btovrkm.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1btovrkm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1btovrkm.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1btovrkm.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1btovrkm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1btovrkm.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1btovrkm.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1btovrkm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1btovrkm.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1btovrkm.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1btovrkm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1btovrkm.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1btovrkm.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1btovrkm.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1btovrkm.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpx70806ky.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx70806ky.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx70806ky.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpx70806ky.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx70806ky.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx70806ky.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpx70806ky.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx70806ky.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx70806ky.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpx70806ky.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx70806ky.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx70806ky.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpx70806ky.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx70806ky.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5e_onctn.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5e_onctn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5e_onctn.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5e_onctn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20i6v2o8.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20i6v2o8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20i6v2o8.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20i6v2o8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqj2g2inn.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqj2g2inn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqj2g2inn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2g2inn.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqj2g2inn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqj2g2inn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2g2inn.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqj2g2inn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqj2g2inn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2g2inn.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqj2g2inn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqj2g2inn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2g2inn.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqj2g2inn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0_q3l7ya.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_q3l7ya.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_q3l7ya.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_q3l7ya.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl2njbx_e.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2njbx_e.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2njbx_e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl2njbx_e.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2njbx_e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2njbx_e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl2njbx_e.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2njbx_e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2njbx_e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl2njbx_e.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2njbx_e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2njbx_e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl2njbx_e.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2njbx_e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return n % 10 * digits(div(n, 10))\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmps6t3694p.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6t3694p.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6t3694p.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps6t3694p.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6t3694p.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6t3694p.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps6t3694p.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6t3694p.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6t3694p.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps6t3694p.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6t3694p.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps6t3694p.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps6t3694p.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps6t3694p.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps6t3694p.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjkuc21f9.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkuc21f9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkuc21f9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjkuc21f9.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkuc21f9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkuc21f9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjkuc21f9.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkuc21f9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkuc21f9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjkuc21f9.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkuc21f9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkuc21f9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjkuc21f9.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjkuc21f9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplqjp4fiu.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmplqjp4fiu.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmplqjp4fiu.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplqjp4fiu.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplqjp4fiu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplqjp4fiu.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmplqjp4fiu.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmplqjp4fiu.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplqjp4fiu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplqjp4fiu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplqjp4fiu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmplqjp4fiu.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmplqjp4fiu.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplqjp4fiu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplqjp4fiu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplqjp4fiu"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplqjp4fiu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsghsy4w9.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsghsy4w9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsghsy4w9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsghsy4w9.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsghsy4w9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsghsy4w9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsghsy4w9.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsghsy4w9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsghsy4w9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsghsy4w9.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsghsy4w9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsghsy4w9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsghsy4w9.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsghsy4w9.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsghsy4w9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv_apbf7_.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_apbf7_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_apbf7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv_apbf7_.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_apbf7_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_apbf7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv_apbf7_.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_apbf7_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_apbf7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv_apbf7_.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_apbf7_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_apbf7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv_apbf7_.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_apbf7_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6hzx4ftl.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hzx4ftl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hzx4ftl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hzx4ftl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyvtk1_f3.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyvtk1_f3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyvtk1_f3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvtk1_f3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprnuo96ss.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnuo96ss.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnuo96ss.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprnuo96ss.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnuo96ss.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnuo96ss.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprnuo96ss.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnuo96ss.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnuo96ss.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprnuo96ss.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnuo96ss.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnuo96ss.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprnuo96ss.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprnuo96ss.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4v8ni7xc.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v8ni7xc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v8ni7xc.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4v8ni7xc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp50etmqvz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp50etmqvz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp50etmqvz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp50etmqvz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq3f53d14.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq3f53d14.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq3f53d14.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3f53d14.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6a_gp1ug.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6a_gp1ug.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6a_gp1ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6a_gp1ug.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6a_gp1ug.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6a_gp1ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6a_gp1ug.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6a_gp1ug.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6a_gp1ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6a_gp1ug.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6a_gp1ug.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6a_gp1ug.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6a_gp1ug.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6a_gp1ug.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n % 10) * digits(n // 10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmaxv6am2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmaxv6am2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpmaxv6am2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmaxv6am2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmaxv6am2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmaxv6am2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmaxv6am2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpmaxv6am2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmaxv6am2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmaxv6am2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmaxv6am2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmaxv6am2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpmaxv6am2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmaxv6am2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmaxv6am2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmaxv6am2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmaxv6am2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjqrd6xa1.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqrd6xa1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqrd6xa1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjqrd6xa1.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqrd6xa1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqrd6xa1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjqrd6xa1.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqrd6xa1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqrd6xa1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjqrd6xa1.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqrd6xa1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqrd6xa1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjqrd6xa1.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqrd6xa1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc0fbpic_.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc0fbpic_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc0fbpic_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc0fbpic_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp85hsr0he.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85hsr0he.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85hsr0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85hsr0he.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85hsr0he.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85hsr0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85hsr0he.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85hsr0he.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85hsr0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85hsr0he.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85hsr0he.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85hsr0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85hsr0he.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85hsr0he.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr02ptted.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr02ptted.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr02ptted.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr02ptted.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr02ptted.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr02ptted.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr02ptted.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr02ptted.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr02ptted.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr02ptted.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr02ptted.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr02ptted.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr02ptted.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr02ptted.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpu939v7gd.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu939v7gd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu939v7gd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu939v7gd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpi1dxjzcg.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1dxjzcg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1dxjzcg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi1dxjzcg.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1dxjzcg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1dxjzcg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi1dxjzcg.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1dxjzcg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1dxjzcg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi1dxjzcg.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1dxjzcg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1dxjzcg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi1dxjzcg.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi1dxjzcg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9pysmf0e.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9pysmf0e.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9pysmf0e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9pysmf0e.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9pysmf0e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9pysmf0e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9pysmf0e.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9pysmf0e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9pysmf0e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9pysmf0e.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9pysmf0e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9pysmf0e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9pysmf0e.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9pysmf0e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9im08sep.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9im08sep.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9im08sep.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9im08sep.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptct1okhi.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptct1okhi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptct1okhi.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptct1okhi.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa0v1is0y.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0v1is0y.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0v1is0y.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0v1is0y.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxog7ahfz.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxog7ahfz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxog7ahfz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxog7ahfz.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxog7ahfz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxog7ahfz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxog7ahfz.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxog7ahfz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxog7ahfz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxog7ahfz.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxog7ahfz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxog7ahfz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxog7ahfz.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxog7ahfz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpw8kc9t_p.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8kc9t_p.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8kc9t_p.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw8kc9t_p.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10))*mod(n,10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpz6y5hiqd.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz6y5hiqd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz6y5hiqd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz6y5hiqd.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz6y5hiqd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz6y5hiqd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz6y5hiqd.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz6y5hiqd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz6y5hiqd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz6y5hiqd.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz6y5hiqd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz6y5hiqd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz6y5hiqd.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz6y5hiqd.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3jj5xwsf.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jj5xwsf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jj5xwsf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jj5xwsf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10)) * mod(n,10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp576cfv9s.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp576cfv9s.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp576cfv9s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp576cfv9s.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp576cfv9s.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp576cfv9s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp576cfv9s.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp576cfv9s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp576cfv9s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp576cfv9s.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp576cfv9s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp576cfv9s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp576cfv9s.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp576cfv9s.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpi65ny9sn.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi65ny9sn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi65ny9sn.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi65ny9sn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n // 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpie30jzab.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpie30jzab.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpie30jzab.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpie30jzab.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpie30jzab.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpie30jzab.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpie30jzab.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpie30jzab.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpie30jzab.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpie30jzab.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpie30jzab.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpie30jzab.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpie30jzab.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpie30jzab.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpie30jzab.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpie30jzab"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpie30jzab.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8j0_0sfl.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8j0_0sfl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8j0_0sfl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8j0_0sfl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpx0yb5vee.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx0yb5vee.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx0yb5vee.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0yb5vee.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5vny7rpo.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vny7rpo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vny7rpo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5vny7rpo.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vny7rpo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vny7rpo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5vny7rpo.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vny7rpo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vny7rpo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5vny7rpo.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vny7rpo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vny7rpo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5vny7rpo.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vny7rpo.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphdlwxws6.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphdlwxws6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphdlwxws6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdlwxws6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph71z5d3b.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph71z5d3b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph71z5d3b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph71z5d3b.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph71z5d3b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph71z5d3b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph71z5d3b.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph71z5d3b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph71z5d3b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph71z5d3b.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph71z5d3b.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph71z5d3b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmph71z5d3b.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph71z5d3b.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph71z5d3b.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprbdsqp1u.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdsqp1u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdsqp1u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprbdsqp1u.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdsqp1u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdsqp1u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprbdsqp1u.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdsqp1u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdsqp1u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprbdsqp1u.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbdsqp1u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbdsqp1u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprbdsqp1u.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprbdsqp1u.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkbzo8ipc.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbzo8ipc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbzo8ipc.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkbzo8ipc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu8lo2pan.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu8lo2pan.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu8lo2pan.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8lo2pan.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp00bs9ucq.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp00bs9ucq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp00bs9ucq.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp00bs9ucq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb8ycm4yz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8ycm4yz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8ycm4yz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8ycm4yz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp22edkyy6.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22edkyy6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22edkyy6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp22edkyy6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5_o9mkmy.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_o9mkmy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_o9mkmy.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_o9mkmy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99s5h3lu.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99s5h3lu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99s5h3lu.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99s5h3lu.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10)) * mod(n,10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpt6y2t6w5.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6y2t6w5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6y2t6w5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpt6y2t6w5.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6y2t6w5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6y2t6w5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpt6y2t6w5.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6y2t6w5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6y2t6w5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpt6y2t6w5.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt6y2t6w5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt6y2t6w5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpt6y2t6w5.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6y2t6w5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpql0w59mi.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql0w59mi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql0w59mi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpql0w59mi.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql0w59mi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql0w59mi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpql0w59mi.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql0w59mi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql0w59mi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpql0w59mi.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql0w59mi.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql0w59mi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpql0w59mi.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpql0w59mi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n // 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjavwx_ru.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjavwx_ru.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjavwx_ru.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavwx_ru.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjavwx_ru.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjavwx_ru.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjavwx_ru.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjavwx_ru.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavwx_ru.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjavwx_ru.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjavwx_ru.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjavwx_ru.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjavwx_ru.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavwx_ru.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjavwx_ru.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjavwx_ru"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjavwx_ru.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5p15ud2m.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5p15ud2m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5p15ud2m.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5p15ud2m.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 0\n        return 0\n    end\n    if n\
    \ < 10\n        return n\n    end\n    return digits(n // 10) * (n % 10)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsqktj7zp.jl:26\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpsqktj7zp.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpsqktj7zp.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqktj7zp.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqktj7zp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsqktj7zp.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpsqktj7zp.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpsqktj7zp.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqktj7zp.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqktj7zp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsqktj7zp.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpsqktj7zp.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpsqktj7zp.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqktj7zp.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqktj7zp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpsqktj7zp"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqktj7zp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmb5xv68k.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5xv68k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5xv68k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmb5xv68k.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5xv68k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5xv68k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmb5xv68k.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5xv68k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5xv68k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmb5xv68k.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmb5xv68k.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmb5xv68k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmb5xv68k.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmb5xv68k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmppjo0zg6h.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjo0zg6h.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjo0zg6h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppjo0zg6h.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjo0zg6h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjo0zg6h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppjo0zg6h.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjo0zg6h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjo0zg6h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppjo0zg6h.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjo0zg6h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjo0zg6h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppjo0zg6h.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjo0zg6h.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qmuxush.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qmuxush.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qmuxush.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qmuxush.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr75ytzbu.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr75ytzbu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr75ytzbu.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr75ytzbu.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbay6dqsh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbay6dqsh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbay6dqsh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbay6dqsh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg1erqqc0.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg1erqqc0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg1erqqc0.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1erqqc0.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpccdirp8s.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpccdirp8s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpccdirp8s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpccdirp8s.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpccdirp8s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpccdirp8s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpccdirp8s.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpccdirp8s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpccdirp8s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpccdirp8s.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpccdirp8s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpccdirp8s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpccdirp8s.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpccdirp8s.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpccdirp8s.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpya8jw4q5.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpya8jw4q5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpya8jw4q5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpya8jw4q5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmc95hgwr.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmc95hgwr.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmc95hgwr.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmc95hgwr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjwrdheaf.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjwrdheaf.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjwrdheaf.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjwrdheaf.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjwrdheaf.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjwrdheaf.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjwrdheaf.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjwrdheaf.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjwrdheaf.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjwrdheaf.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjwrdheaf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjwrdheaf.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjwrdheaf.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjwrdheaf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjwrdheaf.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpjwrdheaf"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwrdheaf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqekrkhdu.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqekrkhdu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqekrkhdu.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqekrkhdu.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpx29edyhd.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx29edyhd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx29edyhd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx29edyhd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptvhns3c0.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvhns3c0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptvhns3c0.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptvhns3c0.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmppcrtkcbl.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppcrtkcbl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppcrtkcbl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppcrtkcbl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdacpfv8z.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdacpfv8z.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdacpfv8z.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdacpfv8z.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdacpfv8z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdacpfv8z.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdacpfv8z.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdacpfv8z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdacpfv8z.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdacpfv8z.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdacpfv8z.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdacpfv8z.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdacpfv8z.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdacpfv8z.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp06lr3jw5.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06lr3jw5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06lr3jw5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp06lr3jw5.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06lr3jw5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06lr3jw5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp06lr3jw5.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06lr3jw5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06lr3jw5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp06lr3jw5.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06lr3jw5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06lr3jw5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp06lr3jw5.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06lr3jw5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpehmpm1kt.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpehmpm1kt.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpehmpm1kt.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpehmpm1kt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpaf4mzft2.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaf4mzft2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaf4mzft2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaf4mzft2.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaf4mzft2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaf4mzft2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaf4mzft2.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaf4mzft2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaf4mzft2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaf4mzft2.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaf4mzft2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaf4mzft2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaf4mzft2.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaf4mzft2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4e02qkqz.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4e02qkqz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4e02qkqz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4e02qkqz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4cgaoh51.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cgaoh51.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cgaoh51.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cgaoh51.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cgaoh51.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cgaoh51.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cgaoh51.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cgaoh51.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cgaoh51.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cgaoh51.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cgaoh51.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cgaoh51.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cgaoh51.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4cgaoh51.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp07jypg2x.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp07jypg2x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp07jypg2x.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp07jypg2x.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8c3kxeay.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8c3kxeay.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8c3kxeay.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8c3kxeay.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n/10)\n        else\n            return\
    \ (n % 10) * digits(n/10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjgq7snmj.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjgq7snmj.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjgq7snmj.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjgq7snmj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjgq7snmj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjgq7snmj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjgq7snmj.jl:11\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpjgq7snmj.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjgq7snmj.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjgq7snmj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjgq7snmj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpjgq7snmj.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpjgq7snmj.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjgq7snmj.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjgq7snmj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjgq7snmj.jl:30\n  Test threw exception\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjgq7snmj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18_zqg0i.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18_zqg0i.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18_zqg0i.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18_zqg0i.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr7we6zq1.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7we6zq1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7we6zq1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr7we6zq1.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7we6zq1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7we6zq1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr7we6zq1.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7we6zq1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7we6zq1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr7we6zq1.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7we6zq1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7we6zq1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr7we6zq1.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7we6zq1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6fwcqt30.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6fwcqt30.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6fwcqt30.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6fwcqt30.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5s9_3au5.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5s9_3au5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5s9_3au5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5s9_3au5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp88e6kk49.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp88e6kk49.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp88e6kk49.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88e6kk49.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88e6kk49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp88e6kk49.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp88e6kk49.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp88e6kk49.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88e6kk49.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88e6kk49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp88e6kk49.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp88e6kk49.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp88e6kk49.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp88e6kk49.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp88e6kk49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp88e6kk49"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88e6kk49.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n % 10) * digits(n // 10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbpcxb0ls.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpbpcxb0ls.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpbpcxb0ls.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpcxb0ls.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpcxb0ls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpbpcxb0ls.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpbpcxb0ls.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpbpcxb0ls.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpcxb0ls.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpcxb0ls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpbpcxb0ls.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpbpcxb0ls.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpbpcxb0ls.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbpcxb0ls.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbpcxb0ls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpbpcxb0ls"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpcxb0ls.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptwcbyx60.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptwcbyx60.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptwcbyx60.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptwcbyx60.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4ni3ggiw.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ni3ggiw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ni3ggiw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4ni3ggiw.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ni3ggiw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ni3ggiw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4ni3ggiw.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ni3ggiw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ni3ggiw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4ni3ggiw.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ni3ggiw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ni3ggiw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4ni3ggiw.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ni3ggiw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5dmvh0zs.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5dmvh0zs.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5dmvh0zs.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dmvh0zs.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpakbwpetv.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpakbwpetv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpakbwpetv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakbwpetv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0j9ag4dh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0j9ag4dh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0j9ag4dh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0j9ag4dh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzzwcwscd.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzzwcwscd.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzzwcwscd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzwcwscd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprbfwngtp.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbfwngtp.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbfwngtp.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprbfwngtp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc5yr4gfh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc5yr4gfh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc5yr4gfh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc5yr4gfh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9rvba89h.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rvba89h.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rvba89h.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9rvba89h.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphdez00qv.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphdez00qv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphdez00qv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdez00qv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpau1cggkh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau1cggkh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau1cggkh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpau1cggkh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwmo1bbil.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwmo1bbil.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwmo1bbil.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwmo1bbil.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  d = n % 10\n        if d % 2 == 1\n            return d * digits(n \xF7 10)\n\
    \        else\n            return digits(n \xF7 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp09ws0au8.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp09ws0au8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp09ws0au8.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp09ws0au8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7rmoxlg4.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7rmoxlg4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7rmoxlg4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7rmoxlg4.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7rmoxlg4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7rmoxlg4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7rmoxlg4.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7rmoxlg4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7rmoxlg4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7rmoxlg4.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7rmoxlg4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7rmoxlg4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7rmoxlg4.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rmoxlg4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptinv4m49.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptinv4m49.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptinv4m49.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptinv4m49.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10)) * mod(n,10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpuzu7p_yr.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzu7p_yr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzu7p_yr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuzu7p_yr.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzu7p_yr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzu7p_yr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuzu7p_yr.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzu7p_yr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzu7p_yr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuzu7p_yr.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuzu7p_yr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuzu7p_yr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuzu7p_yr.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuzu7p_yr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpss_gpuw2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpss_gpuw2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpss_gpuw2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_gpuw2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_gpuw2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpss_gpuw2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpss_gpuw2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpss_gpuw2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_gpuw2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_gpuw2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpss_gpuw2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpss_gpuw2.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpss_gpuw2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpss_gpuw2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss_gpuw2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpss_gpuw2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpss_gpuw2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpytkrehk4.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytkrehk4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytkrehk4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpytkrehk4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdfpmo67i.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdfpmo67i.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdfpmo67i.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdfpmo67i.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmppbzs1b7l.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppbzs1b7l.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppbzs1b7l.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbzs1b7l.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkt6pm4kl.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkt6pm4kl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkt6pm4kl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkt6pm4kl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsy0c0zzl.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy0c0zzl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy0c0zzl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsy0c0zzl.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy0c0zzl.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy0c0zzl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsy0c0zzl.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy0c0zzl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy0c0zzl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsy0c0zzl.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy0c0zzl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy0c0zzl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsy0c0zzl.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsy0c0zzl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgknihq2u.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgknihq2u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgknihq2u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgknihq2u.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgknihq2u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgknihq2u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgknihq2u.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgknihq2u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgknihq2u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgknihq2u.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgknihq2u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgknihq2u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgknihq2u.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgknihq2u.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgknihq2u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpus763s7o.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpus763s7o.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpus763s7o.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpus763s7o.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp835xmbxw.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp835xmbxw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp835xmbxw.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp835xmbxw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5d3rkdd7.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5d3rkdd7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5d3rkdd7.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d3rkdd7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpd_kbq74x.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_kbq74x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_kbq74x.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_kbq74x.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpb0ayq2es.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0ayq2es.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0ayq2es.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0ayq2es.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(div(n,10))*mod(n,10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq_q_nz4a.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_q_nz4a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_q_nz4a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_q_nz4a.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_q_nz4a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_q_nz4a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_q_nz4a.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_q_nz4a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_q_nz4a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_q_nz4a.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_q_nz4a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_q_nz4a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_q_nz4a.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_q_nz4a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfwkny1_7.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwkny1_7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwkny1_7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfwkny1_7.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwkny1_7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwkny1_7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfwkny1_7.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwkny1_7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwkny1_7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfwkny1_7.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwkny1_7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwkny1_7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfwkny1_7.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwkny1_7.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfwkny1_7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6dznfm8n.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6dznfm8n.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6dznfm8n.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6dznfm8n.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp8hpdb21.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8hpdb21.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8hpdb21.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp8hpdb21.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8hpdb21.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8hpdb21.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp8hpdb21.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8hpdb21.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8hpdb21.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp8hpdb21.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8hpdb21.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8hpdb21.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpp8hpdb21.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8hpdb21.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8hpdb21.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpt1otthaj.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt1otthaj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt1otthaj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1otthaj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp55olehwe.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55olehwe.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55olehwe.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55olehwe.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmply4o2sgo.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmply4o2sgo.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmply4o2sgo.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmply4o2sgo.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp64hygsuf.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp64hygsuf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp64hygsuf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64hygsuf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwbw39lrk.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwbw39lrk.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwbw39lrk.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwbw39lrk.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0np4t8zv.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0np4t8zv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0np4t8zv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0np4t8zv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpydt8ulu4.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpydt8ulu4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpydt8ulu4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydt8ulu4.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydt8ulu4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpydt8ulu4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpydt8ulu4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpydt8ulu4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydt8ulu4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydt8ulu4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpydt8ulu4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpydt8ulu4.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpydt8ulu4.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydt8ulu4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydt8ulu4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpydt8ulu4"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydt8ulu4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz_p5vhge.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz_p5vhge.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz_p5vhge.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_p5vhge.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return n % 10 * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5i97xxv7.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5i97xxv7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5i97xxv7.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5i97xxv7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp492jkn31.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp492jkn31.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp492jkn31.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp492jkn31.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp70s9j6m9.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70s9j6m9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70s9j6m9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp70s9j6m9.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70s9j6m9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70s9j6m9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp70s9j6m9.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70s9j6m9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70s9j6m9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp70s9j6m9.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70s9j6m9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70s9j6m9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp70s9j6m9.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp70s9j6m9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpov7dg9v5.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpov7dg9v5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpov7dg9v5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov7dg9v5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptbuug3rg.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptbuug3rg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptbuug3rg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptbuug3rg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_str = string(n)\n    n_str_arr = split(n_str,\
    \ \"\")\n    product = 1\n    for i in n_str_arr\n        if parse(Int64, i) %\
    \ 2 != 0\n            product *= parse(Int64, i)\n        end\n    end\n    return\
    \ product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfleo3ej6.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfleo3ej6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfleo3ej6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfleo3ej6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc630dylr.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc630dylr.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc630dylr.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc630dylr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  m = n % 10\n        if m % 2 == 0\n            return digits(n // 10)\n   \
    \     else\n            return m * digits(n // 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpunkhr40k.jl:29\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpunkhr40k.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpunkhr40k.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunkhr40k.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunkhr40k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpunkhr40k.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpunkhr40k.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpunkhr40k.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunkhr40k.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunkhr40k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpunkhr40k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpunkhr40k.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpunkhr40k.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunkhr40k.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunkhr40k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpunkhr40k"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpunkhr40k.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm97n392k.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm97n392k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm97n392k.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm97n392k.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4qu69vdg.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qu69vdg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qu69vdg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4qu69vdg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj351z12i.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpj351z12i.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpj351z12i.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj351z12i.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj351z12i.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpj351z12i.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpj351z12i.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpj351z12i.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj351z12i.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj351z12i.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpj351z12i.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpj351z12i.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpj351z12i.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj351z12i.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj351z12i.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpj351z12i"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj351z12i.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8wypqo66.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wypqo66.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wypqo66.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8wypqo66.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd6tmmczy.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6tmmczy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6tmmczy.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6tmmczy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4o5gghqx.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4o5gghqx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4o5gghqx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4o5gghqx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpndjkvrd3.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpndjkvrd3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpndjkvrd3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpndjkvrd3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return n % 10 * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_rqgu75u.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rqgu75u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rqgu75u.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_rqgu75u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5nwzn3ll.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nwzn3ll.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nwzn3ll.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5nwzn3ll.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjqw84ot8.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqw84ot8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqw84ot8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjqw84ot8.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqw84ot8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqw84ot8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjqw84ot8.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqw84ot8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqw84ot8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjqw84ot8.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqw84ot8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqw84ot8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjqw84ot8.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqw84ot8.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqw84ot8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl0i5u4ec.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl0i5u4ec.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl0i5u4ec.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl0i5u4ec.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl6ay2m2x.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6ay2m2x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6ay2m2x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl6ay2m2x.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6ay2m2x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6ay2m2x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl6ay2m2x.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6ay2m2x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6ay2m2x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl6ay2m2x.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6ay2m2x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6ay2m2x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl6ay2m2x.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6ay2m2x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpokdw6w64.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokdw6w64.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokdw6w64.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpokdw6w64.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokdw6w64.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokdw6w64.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpokdw6w64.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokdw6w64.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokdw6w64.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpokdw6w64.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokdw6w64.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokdw6w64.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpokdw6w64.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpokdw6w64.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp901baxcn.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp901baxcn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp901baxcn.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp901baxcn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n == 0\n        return 0\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9c4xfhhb.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9c4xfhhb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9c4xfhhb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9c4xfhhb.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9c4xfhhb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9c4xfhhb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9c4xfhhb.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9c4xfhhb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9c4xfhhb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9c4xfhhb.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9c4xfhhb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9c4xfhhb.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9c4xfhhb.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9c4xfhhb.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9c4xfhhb.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjsdfv_y9.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjsdfv_y9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjsdfv_y9.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjsdfv_y9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6nczybgl.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6nczybgl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6nczybgl.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6nczybgl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwanm7znx.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwanm7znx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwanm7znx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwanm7znx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3umtkbhi.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3umtkbhi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3umtkbhi.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3umtkbhi.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc3vbulet.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3vbulet.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3vbulet.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc3vbulet.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3vbulet.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3vbulet.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc3vbulet.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3vbulet.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3vbulet.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc3vbulet.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3vbulet.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3vbulet.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc3vbulet.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc3vbulet.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n//10) * (n%10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5913czs_.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5913czs_.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5913czs_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5913czs_.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5913czs_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5913czs_.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5913czs_.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5913czs_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5913czs_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5913czs_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5913czs_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5913czs_.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5913czs_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5913czs_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5913czs_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5913czs_"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5913czs_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphpe1nzaa.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpe1nzaa.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpe1nzaa.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpe1nzaa.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n % 10) * digits(n // 10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdvgswx6x.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvgswx6x.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvgswx6x.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdvgswx6x.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdvgswx6x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdvgswx6x.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvgswx6x.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvgswx6x.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdvgswx6x.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdvgswx6x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdvgswx6x.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvgswx6x.jl:11\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvgswx6x.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdvgswx6x.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdvgswx6x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdvgswx6x"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvgswx6x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4mna6s3n.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mna6s3n.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mna6s3n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4mna6s3n.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mna6s3n.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mna6s3n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4mna6s3n.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mna6s3n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mna6s3n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4mna6s3n.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mna6s3n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mna6s3n.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4mna6s3n.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4mna6s3n.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkm0pthf3.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkm0pthf3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkm0pthf3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm0pthf3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpy3qt734v.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3qt734v.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3qt734v.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3qt734v.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return (n % 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2a3avoqv.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2a3avoqv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2a3avoqv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2a3avoqv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpn696nus2.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn696nus2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn696nus2.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn696nus2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqycq7qzf.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqycq7qzf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqycq7qzf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqycq7qzf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpravi2x1c.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpravi2x1c.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpravi2x1c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpravi2x1c.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpravi2x1c.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpravi2x1c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpravi2x1c.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpravi2x1c.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpravi2x1c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpravi2x1c.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpravi2x1c.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpravi2x1c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpravi2x1c.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpravi2x1c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp957g0kuc.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp957g0kuc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp957g0kuc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp957g0kuc.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp957g0kuc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp957g0kuc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp957g0kuc.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp957g0kuc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp957g0kuc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp957g0kuc.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp957g0kuc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp957g0kuc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp957g0kuc.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp957g0kuc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(div(n, 10))\n        else\n      \
    \      return rem(n, 10) * digits(div(n, 10))\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpss8sevxe.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss8sevxe.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss8sevxe.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpss8sevxe.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    n_str = string(n)\n    product = 1\n    for i\
    \ in 1:length(n_str)\n        if parse(Int64, n_str[i]) % 2 != 0\n           \
    \ product *= parse(Int64, n_str[i])\n        end\n    end\n    return product\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptroeo2ka.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptroeo2ka.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptroeo2ka.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptroeo2ka.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  if n % 2 == 0\n            return digits(n \xF7 10)\n        else\n       \
    \     return (n % 10) * digits(n \xF7 10)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpe4o9t5kh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4o9t5kh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4o9t5kh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4o9t5kh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpd0z0swjz.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0z0swjz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0z0swjz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd0z0swjz.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0z0swjz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0z0swjz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd0z0swjz.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0z0swjz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0z0swjz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd0z0swjz.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0z0swjz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0z0swjz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd0z0swjz.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd0z0swjz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return digits(n \xF7 10) * (n % 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbjw9emty.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjw9emty.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjw9emty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbjw9emty.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjw9emty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjw9emty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbjw9emty.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjw9emty.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjw9emty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbjw9emty.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjw9emty.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjw9emty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbjw9emty.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbjw9emty.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n \
    \   1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
    \ digits(n::Int64)::Int64 \n    if n < 10\n        return n\n    else\n      \
    \  return (n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm3owle8t.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3owle8t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3owle8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm3owle8t.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3owle8t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3owle8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm3owle8t.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3owle8t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3owle8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm3owle8t.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3owle8t.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3owle8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm3owle8t.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3owle8t.jl:20\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_19_sort_numbers
language: jl
results:
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp7cq46pw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7cq46pw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7cq46pw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp7cq46pw.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7cq46pw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7cq46pw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp7cq46pw.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7cq46pw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7cq46pw.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp7cq46pw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict{String, Int}()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"] = 1\n\
    \    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"four\"\
    ] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = split(numbers)\n    num_list = sort(num_list, by=num_dict)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpid7nnhfc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid7nnhfc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid7nnhfc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpid7nnhfc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid7nnhfc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid7nnhfc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpid7nnhfc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid7nnhfc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid7nnhfc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpid7nnhfc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_k5s8fg5.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp_k5s8fg5.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp_k5s8fg5.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp_k5s8fg5.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp_k5s8fg5.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp_k5s8fg5.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp_k5s8fg5.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp_k5s8fg5.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp_k5s8fg5.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[num] for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [key for (key, value) in nums_dict if value\
    \ in nums_int_sorted]\n    return join(nums_sorted, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxg5ygs7a.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg5ygs7a.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg5ygs7a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpxg5ygs7a.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg5ygs7a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg5ygs7a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpxg5ygs7a.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg5ygs7a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg5ygs7a.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxg5ygs7a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpecofz8ig.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpecofz8ig.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpecofz8ig.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpecofz8ig.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpecofz8ig.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpecofz8ig.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdc0f8daz.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpdc0f8daz.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdc0f8daz.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdc0f8daz.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpdc0f8daz.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpdc0f8daz.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdc0f8daz.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdc0f8daz.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpdc0f8daz.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpdc0f8daz.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdc0f8daz.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdc0f8daz.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpdc0f8daz.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpy5e9502k.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy5e9502k.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy5e9502k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpy5e9502k.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy5e9502k.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy5e9502k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpy5e9502k.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy5e9502k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy5e9502k.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy5e9502k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([string(x) for x in num_list], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx9i_1k2w.jl:19\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9i_1k2w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9i_1k2w.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpx9i_1k2w.jl:20\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9i_1k2w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9i_1k2w.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpx9i_1k2w.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9i_1k2w.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9i_1k2w.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpx9i_1k2w.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9i_1k2w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9i_1k2w"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9i_1k2w.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi9_0a4g9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9_0a4g9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9_0a4g9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi9_0a4g9.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9_0a4g9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9_0a4g9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi9_0a4g9.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9_0a4g9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9_0a4g9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi9_0a4g9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkghrxv66.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpkghrxv66.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpkghrxv66.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpkghrxv66.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpkghrxv66.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcv8r94hl.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpcv8r94hl.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpcv8r94hl.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpcv8r94hl.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpcv8r94hl.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpcv8r94hl.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpcv8r94hl.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpcv8r94hl.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpcv8r94hl.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    num_list = join(num_list,\
    \ \" \")\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the\
    \ string into an array of strings\n    nums = split(numbers, \" \")\n    # convert\
    \ each string to an integer\n    nums = [parse(Int, num) for num in nums]\n  \
    \  # sort the array\n    sort!(nums)\n    # convert the array back to a string\n\
    \    nums = [string(num) for num in nums]\n    # join the array back into a string\n\
    \    nums = join(nums, \" \")\n    return nums\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptgbyyizw.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmptgbyyizw.jl:11\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmptgbyyizw.jl:25 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmptgbyyizw.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmptgbyyizw.jl:26\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmptgbyyizw.jl:11\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro exp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz43cmhma.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz43cmhma.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz43cmhma.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz43cmhma.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz43cmhma.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz43cmhma.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz43cmhma.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz43cmhma.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz43cmhma.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz43cmhma.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc090i42w.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc090i42w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc090i42w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc090i42w.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc090i42w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc090i42w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc090i42w.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc090i42w.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc090i42w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc090i42w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbp3leplg.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp3leplg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp3leplg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbp3leplg.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp3leplg.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp3leplg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbp3leplg.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp3leplg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp3leplg.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbp3leplg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    num_list = join(num_list,\
    \ \" \")\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt31nfj5o.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt31nfj5o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt31nfj5o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpt31nfj5o.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt31nfj5o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt31nfj5o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpt31nfj5o.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt31nfj5o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt31nfj5o.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt31nfj5o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_dict, num_list)\n    num_list = map(string, num_list)\n \
    \   num_list = join(num_list, \" \")\n    return num_list\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr1_f_80v.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpr1_f_80v.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpr1_f_80v.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpr1_f_80v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpr1_f_80v.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpr1_f_80v.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpr1_f_80v.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpr1_f_80v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpr1_f_80v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpr1_f_80v.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpr1_f_80v.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpr1_f_80v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpr1_f_80v.jl:24\\n  Test threw exception\\n  Expression:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd4l9w8pr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l9w8pr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l9w8pr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd4l9w8pr.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l9w8pr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l9w8pr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd4l9w8pr.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l9w8pr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l9w8pr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4l9w8pr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw38z3_ud.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpw38z3_ud.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpw38z3_ud.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpw38z3_ud.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpw38z3_ud.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpw38z3_ud.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpw38z3_ud.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpw38z3_ud.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpw38z3_ud.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9shqk_b2.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp9shqk_b2.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9shqk_b2.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9shqk_b2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp9shqk_b2.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp9shqk_b2.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9shqk_b2.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9shqk_b2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp9shqk_b2.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp9shqk_b2.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9shqk_b2.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9shqk_b2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp9shqk_b2.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjwxhp8_p.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwxhp8_p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwxhp8_p.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjwxhp8_p.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwxhp8_p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwxhp8_p.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjwxhp8_p.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwxhp8_p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwxhp8_p.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwxhp8_p.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsjdibyq8.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpsjdibyq8.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpsjdibyq8.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpsjdibyq8.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpsjdibyq8.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpsjdibyq8.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpsjdibyq8.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpsjdibyq8.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpsjdibyq8.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx8hy5imf.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpx8hy5imf.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpx8hy5imf.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpx8hy5imf.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpx8hy5imf.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpx8hy5imf.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpx8hy5imf.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpx8hy5imf.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpx8hy5imf.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl8xp44dl.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8xp44dl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8xp44dl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl8xp44dl.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8xp44dl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8xp44dl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl8xp44dl.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8xp44dl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8xp44dl.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl8xp44dl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpll7hzqen.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpll7hzqen.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpll7hzqen.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpll7hzqen.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpll7hzqen.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpll7hzqen.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpll7hzqen.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpll7hzqen.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpll7hzqen.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpquyplw6c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquyplw6c.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquyplw6c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpquyplw6c.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquyplw6c.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquyplw6c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpquyplw6c.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquyplw6c.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquyplw6c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpquyplw6c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp56da3jl4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp56da3jl4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp56da3jl4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp56da3jl4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp56da3jl4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp56da3jl4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp56da3jl4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp56da3jl4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp56da3jl4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp56da3jl4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuujxpg0i.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpuujxpg0i.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpuujxpg0i.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpuujxpg0i.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpuujxpg0i.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpuujxpg0i.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpuujxpg0i.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpuujxpg0i.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpuujxpg0i.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpuujxpg0i.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpuujxpg0i.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpuujxpg0i.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpuujxpg0i.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnp63xnu4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp63xnu4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp63xnu4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnp63xnu4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp63xnu4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp63xnu4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnp63xnu4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp63xnu4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp63xnu4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnp63xnu4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd9q01cgn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd9q01cgn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd9q01cgn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd9q01cgn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd9q01cgn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd9q01cgn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd9q01cgn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd9q01cgn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd9q01cgn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9q01cgn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = [num_dict[x] for x in split(numbers, \"\
    \ \")]\n    sorted_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in sorted_list]\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcdnpw8bw.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpcdnpw8bw.jl:20\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpcdnpw8bw.jl:30 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpcdnpw8bw.jl:29\\ntest set:\
    \ Test Failed at /tmp/tmpcdnpw8bw.jl:32\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(string, num_list)\n    num_list = join(num_list,\
    \ \" \")\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcnrjreay.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpcnrjreay.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpcnrjreay.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpcnrjreay.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpcnrjreay.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpcnrjreay.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpcnrjreay.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpcnrjreay.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpcnrjreay.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpcnrjreay.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpcnrjreay.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpcnrjreay.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpcnrjreay.jl:24\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = [parse(Int, num) for num in nums]\n    nums = sort(nums)\n    nums\
    \ = [string(num) for num in nums]\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbmqcuycf.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpbmqcuycf.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpbmqcuycf.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpbmqcuycf.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpbmqcuycf.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpbmqcuycf.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert string\
    \ to array of numbers\n    numbers = split(numbers, \" \")\n    # convert words\
    \ to numbers\n    for i in 1:length(numbers)\n        if numbers[i] == \"zero\"\
    \n            numbers[i] = 0\n        elseif numbers[i] == \"one\"\n         \
    \   numbers[i] = 1\n        elseif numbers[i] == \"two\"\n            numbers[i]\
    \ = 2\n        elseif numbers[i] == \"three\"\n            numbers[i] = 3\n  \
    \      elseif numbers[i] == \"four\"\n            numbers[i] = 4\n        elseif\
    \ numbers[i] == \"five\"\n            numbers[i] = 5\n        elseif numbers[i]\
    \ == \"six\"\n            numbers[i] = 6\n        elseif numbers[i] == \"seven\"\
    \n            numbers[i] = 7\n        elseif numbers[i] == \"eight\"\n       \
    \     numbers[i] = 8\n        elseif numbers[i] == \"nine\"\n            numbers[i]\
    \ = 9\n        end\n    end\n    # sort numbers\n    sort!(numbers)\n    # convert\
    \ numbers to words\n    for i in 1:length(numbers)\n        if numbers[i] == 0\n\
    \            numbers[i] = \"zero\"\n        elseif numbers[i] == 1\n         \
    \   numbers[i] = \"one\"\n        elseif numbers[i] == 2\n            numbers[i]\
    \ = \"two\"\n        elseif numbers[i] == 3\n            numbers[i] = \"three\"\
    \n        elseif numbers[i] == 4\n            numbers[i] = \"four\"\n        elseif\
    \ numbers[i] == 5\n            numbers[i] = \"five\"\n        elseif numbers[i]\
    \ == 6\n            numbers[i] = \"six\"\n        elseif numbers[i] == 7\n   \
    \         numbers[i] = \"seven\"\n        elseif numbers[i] == 8\n           \
    \ numbers[i] = \"eight\"\n        elseif numbers[i] == 9\n            numbers[i]\
    \ = \"nine\"\n        end\n    end\n    # convert array to string\n    numbers\
    \ = join(numbers, \" \")\n    return numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsyx8i3ut.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsyx8i3ut.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyx8i3ut.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsyx8i3ut.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsyx8i3ut.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyx8i3ut.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsyx8i3ut.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsyx8i3ut.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsyx8i3ut.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsyx8i3ut.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyiu302vf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyiu302vf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyiu302vf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyiu302vf.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyiu302vf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyiu302vf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyiu302vf.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyiu302vf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyiu302vf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyiu302vf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_dict, num_list)\n    num_list = map(string, num_list)\n \
    \   return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxoi_mdeo.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpxoi_mdeo.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxoi_mdeo.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxoi_mdeo.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpxoi_mdeo.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxoi_mdeo.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxoi_mdeo.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxoi_mdeo.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpxoi_mdeo.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpxoi_mdeo.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxoi_mdeo.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxoi_mdeo.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpxoi_mdeo.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp93lmyzv3.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93lmyzv3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93lmyzv3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp93lmyzv3.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93lmyzv3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93lmyzv3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp93lmyzv3.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp93lmyzv3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp93lmyzv3.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp93lmyzv3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbr2gs69b.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbr2gs69b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbr2gs69b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbr2gs69b.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbr2gs69b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbr2gs69b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbr2gs69b.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbr2gs69b.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbr2gs69b.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbr2gs69b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu4q6vpas.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4q6vpas.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4q6vpas.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu4q6vpas.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4q6vpas.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4q6vpas.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu4q6vpas.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4q6vpas.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4q6vpas.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu4q6vpas.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmycucjwl.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmycucjwl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmycucjwl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmycucjwl.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmycucjwl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmycucjwl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmycucjwl.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmycucjwl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmycucjwl.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmycucjwl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0t_4qvj7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t_4qvj7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t_4qvj7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0t_4qvj7.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t_4qvj7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t_4qvj7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0t_4qvj7.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t_4qvj7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t_4qvj7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0t_4qvj7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjtnmwewj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtnmwewj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtnmwewj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjtnmwewj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtnmwewj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtnmwewj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjtnmwewj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjtnmwewj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjtnmwewj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjtnmwewj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    nums = sort(nums)\n    nums = map(x\
    \ -> string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3lcgb8s3.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp3lcgb8s3.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp3lcgb8s3.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmp3lcgb8s3.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmp3lcgb8s3.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp3lcgb8s3.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp3lcgb8s3.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers, \" \")]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp52sjl036.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp52sjl036.jl:9\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp52sjl036.jl:18 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp52sjl036.jl:17\\ntest set:\
    \ Test Failed at /tmp/tmp52sjl036.jl:20\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd29kz78i.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd29kz78i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd29kz78i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd29kz78i.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd29kz78i.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd29kz78i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpd29kz78i.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd29kz78i.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd29kz78i.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd29kz78i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgzhwlwyn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgzhwlwyn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgzhwlwyn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgzhwlwyn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgzhwlwyn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgzhwlwyn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgzhwlwyn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgzhwlwyn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgzhwlwyn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgzhwlwyn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(string, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmptetz1ku_.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmptetz1ku_.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmptetz1ku_.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmptetz1ku_.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghbaabor.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghbaabor.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghbaabor.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpghbaabor.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghbaabor.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghbaabor.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpghbaabor.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghbaabor.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghbaabor.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghbaabor.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgxxh2gwq.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgxxh2gwq.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgxxh2gwq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgxxh2gwq.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgxxh2gwq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgxxh2gwq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgxxh2gwq.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgxxh2gwq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgxxh2gwq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgxxh2gwq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array =\
    \ split(numbers, \" \")\n    num_array = sort(num_array)\n    return join(num_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm87_tybc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm87_tybc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm87_tybc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm87_tybc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm87_tybc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm87_tybc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm87_tybc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm87_tybc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm87_tybc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm87_tybc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpih6bb_9b.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpih6bb_9b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpih6bb_9b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpih6bb_9b.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpih6bb_9b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpih6bb_9b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpih6bb_9b.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpih6bb_9b.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpih6bb_9b.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpih6bb_9b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9u7noet5.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9u7noet5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9u7noet5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9u7noet5.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9u7noet5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9u7noet5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9u7noet5.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9u7noet5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9u7noet5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9u7noet5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split(\" \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8np50i_d.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp8np50i_d.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8np50i_d.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8np50i_d.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp8np50i_d.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp8np50i_d.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8np50i_d.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8np50i_d.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp8np50i_d.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp8np50i_d.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8np50i_d.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8np50i_d.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp8np50i_d.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8np50i_d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(n) for n in nums]\n    sort!(nums_int)\n    nums_str = [string(n)\
    \ for n in nums_int]\n    return join(nums_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmyzan9wy.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpmyzan9wy.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmyzan9wy.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmyzan9wy.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpmyzan9wy.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpmyzan9wy.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmyzan9wy.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmyzan9wy.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpmyzan9wy.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#3\")(n::SubString{String})\\n     @ Main ./none:0\\n   [2] iterate\\n     @\
    \ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubSt"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4v_6k7yp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v_6k7yp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v_6k7yp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4v_6k7yp.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v_6k7yp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v_6k7yp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4v_6k7yp.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4v_6k7yp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4v_6k7yp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4v_6k7yp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxruok7rd.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxruok7rd.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpxruok7rd.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpxruok7rd.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpxruok7rd.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    nums = split(numbers, \" \")\n    nums_int = [num_dict[num] for num\
    \ in nums]\n    nums_int_sorted = sort(nums_int)\n    nums_sorted = [key for (key,\
    \ value) in num_dict if value in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdu3swl4j.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpdu3swl4j.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpdu3swl4j.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpdu3swl4j.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpdu3swl4j.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp11z7k902.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp11z7k902.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp11z7k902.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp11z7k902.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp11z7k902.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp11z7k902.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp11z7k902.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp11z7k902.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp11z7k902.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0t01aw2o.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t01aw2o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t01aw2o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0t01aw2o.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t01aw2o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t01aw2o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0t01aw2o.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t01aw2o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t01aw2o.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0t01aw2o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    num_list = [num_dict[x] for x in num_list]\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz9twnb_6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key\
    \ 3 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n     @ Main ./none:0\\n   [3] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [4] collect\\n     @ ./array.jl:724 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpz9twnb_6.jl:11\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpz9twnb_6.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpz9twnb_6.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpz9twnb_6.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  KeyError: key 3 not\
    \ found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n     @ Main ./none:0\\n   [3] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [4] collect\\n     @ ./array.jl:724 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpz9twnb_6.jl:11\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpz9twnb_6.jl:21 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpz9twnb_6.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpz9twnb_6.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  KeyError: key 0 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String,\
    \ Int64}, key::Int64)\\n     @ Base ./dict.jl:481\\n   [2] (::var\"#2#4\"{Dict{Str"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    sort!(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbplfrfp5.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbplfrfp5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbplfrfp5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbplfrfp5.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbplfrfp5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbplfrfp5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbplfrfp5.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbplfrfp5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbplfrfp5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbplfrfp5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list_int = [int(x) for x in num_list]\n    num_list_int_sorted\
    \ = sort(num_list_int)\n    num_list_sorted = [string(x) for x in num_list_int_sorted]\n\
    \    return \" \".join(num_list_sorted)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprhny2jdl.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmprhny2jdl.jl:12\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprhny2jdl.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprhny2jdl.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmprhny2jdl.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#3\")(x::SubString{String})\\n     @ Main ./none:0\\n   [2]\
    \ iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmprhny2jdl.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmprhny2jdl.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmprhny2jdl.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmprhny2jdl.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmprhny2jdl.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp01_1w5y2.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp01_1w5y2.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp01_1w5y2.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp01_1w5y2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp01_1w5y2.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp01_1w5y2.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp01_1w5y2.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp01_1w5y2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp01_1w5y2.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp01_1w5y2.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp01_1w5y2.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp01_1w5y2.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp01_1w5y2.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split()\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbja1jbov.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpbja1jbov.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbja1jbov.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbja1jbov.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpbja1jbov.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpbja1jbov.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbja1jbov.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbja1jbov.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpbja1jbov.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpbja1jbov.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbja1jbov.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbja1jbov.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpbja1jbov.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> keys(num_dict)[values(num_dict)\
    \ .== x][1], num_list)\n    join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp59h7pgu6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp59h7pgu6.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp59h7pgu6.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp59h7pgu6.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp59h7pgu6.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2g1wna0j.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g1wna0j.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g1wna0j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2g1wna0j.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g1wna0j.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g1wna0j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2g1wna0j.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g1wna0j.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g1wna0j.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2g1wna0j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplyxueos6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmplyxueos6.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmplyxueos6.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmplyxueos6.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmplyxueos6.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmplyxueos6.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmplyxueos6.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list_int = [num_dict[x] for\
    \ x in num_list]\n    sort!(num_list_int)\n    num_list_str = [key for (key, value)\
    \ in num_dict if value in num_list_int]\n    return join(num_list_str, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9tanecg8.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp9tanecg8.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp9tanecg8.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp9tanecg8.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmp9tanecg8.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp8qh9bxx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8qh9bxx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8qh9bxx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp8qh9bxx.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8qh9bxx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8qh9bxx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp8qh9bxx.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp8qh9bxx.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp8qh9bxx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8qh9bxx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb_ffzyk3.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpb_ffzyk3.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpb_ffzyk3.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpb_ffzyk3.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpb_ffzyk3.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpb_ffzyk3.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpb_ffzyk3.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpb_ffzyk3.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpb_ffzyk3.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv_ned_ra.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_ned_ra.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_ned_ra.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv_ned_ra.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_ned_ra.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_ned_ra.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv_ned_ra.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_ned_ra.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_ned_ra.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_ned_ra.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp11m6gdck.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11m6gdck.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11m6gdck.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp11m6gdck.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11m6gdck.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11m6gdck.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp11m6gdck.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11m6gdck.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11m6gdck.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp11m6gdck.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_list) do x\n        num_dict[x]\n    end\n    num_list =\
    \ sort(num_list)\n    num_list = map(num_list) do x\n        for (key, value)\
    \ in num_dict\n            if value == x\n                return key\n       \
    \     end\n        end\n    end\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0wv369j7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp0wv369j7.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0wv369j7.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0wv369j7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp0wv369j7.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp0wv369j7.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0wv369j7.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0wv369j7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp0wv369j7.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp0wv369j7.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0wv369j7.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0wv369j7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp0wv369j7.jl:32\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = [num_dict[i] for i in num_list]\n    num_list = sort(num_list)\n\
    \    num_list = [key for key in num_dict if num_dict[key] in num_list]\n    num_list\
    \ = join(num_list, \" \")\n    return num_list\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps2xyiyi1.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmps2xyiyi1.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps2xyiyi1.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmps2xyiyi1.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmps2xyiyi1.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmps2xyiyi1.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps2xyiyi1.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmps2xyiyi1.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmps2xyiyi1.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmps2xyiyi1.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps2xyiyi1.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmps2xyiyi1.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmps2xyiyi1.jl:25\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    num_list = join(num_list,\
    \ \" \")\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52oyfqms.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52oyfqms.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52oyfqms.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp52oyfqms.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52oyfqms.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52oyfqms.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp52oyfqms.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52oyfqms.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52oyfqms.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52oyfqms.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpozr7l63u.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpozr7l63u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpozr7l63u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpozr7l63u.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpozr7l63u.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpozr7l63u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpozr7l63u.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpozr7l63u.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpozr7l63u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpozr7l63u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk5c_6ew1.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpk5c_6ew1.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpk5c_6ew1.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpk5c_6ew1.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpk5c_6ew1.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [2] _collect\\n     @ ./array.jl:744 [inlined]\\n   [3] collect_similar\\\
    n     @ ./array.jl:653 [inlined]\\n   [4] map\\n     @ ./abstractarray.jl:2867\
    \ [inlined]\\n   [5] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpk5c_6ew1.jl:10\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpk5c_6ew1.jl:21 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpk5c_6ew1.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[i] for i in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptvixgxvk.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvixgxvk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptvixgxvk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptvixgxvk.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvixgxvk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptvixgxvk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptvixgxvk.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvixgxvk.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptvixgxvk.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptvixgxvk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[x] for x\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgg_6m6fv.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpgg_6m6fv.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpgg_6m6fv.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpgg_6m6fv.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpgg_6m6fv.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsk9htpt6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpsk9htpt6.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpsk9htpt6.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpsk9htpt6.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmph3qlgqts.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3qlgqts.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3qlgqts.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph3qlgqts.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3qlgqts.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3qlgqts.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph3qlgqts.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3qlgqts.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3qlgqts.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph3qlgqts.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpva1jtxh8.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpva1jtxh8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpva1jtxh8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpva1jtxh8.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpva1jtxh8.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpva1jtxh8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpva1jtxh8.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpva1jtxh8.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpva1jtxh8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpva1jtxh8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into an array of numbers\n    num_array = split(numbers)\n    # Create\
    \ a dictionary of number names and their corresponding values\n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    # Create an array of the corresponding values\n    num_values = [num_dict[num]\
    \ for num in num_array]\n    # Sort the array\n    sorted_values = sort(num_values)\n\
    \    # Create an array of the sorted number names\n    sorted_nums = [key for\
    \ (key, value) in num_dict if value in sorted_values]\n    # Return the sorted\
    \ numbers as a string\n    return join(sorted_nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprzbg810t.jl:28\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzbg810t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzbg810t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprzbg810t.jl:29\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzbg810t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzbg810t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprzbg810t.jl:30\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzbg810t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzbg810t.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprzbg810t.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmprp3lfvow.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmprp3lfvow.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmprp3lfvow.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmprp3lfvow.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmprp3lfvow.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [string(num) for num in nums_int_sorted]\n\
    \    return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_3mga7n4.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp_3mga7n4.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp_3mga7n4.jl:19 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp_3mga7n4.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp_3mga7n4.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp_3mga7n4.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expan"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprrun7x7f.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrun7x7f.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrun7x7f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprrun7x7f.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrun7x7f.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrun7x7f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprrun7x7f.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrun7x7f.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrun7x7f.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrun7x7f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphwjel7q4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwjel7q4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwjel7q4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphwjel7q4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwjel7q4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwjel7q4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphwjel7q4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwjel7q4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwjel7q4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphwjel7q4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe_96l4cv.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpe_96l4cv.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpe_96l4cv.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpe_96l4cv.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpe_96l4cv.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpe_96l4cv.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpe_96l4cv.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy27cehl_.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpy27cehl_.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpy27cehl_.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpy27cehl_.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpy27cehl_.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpy27cehl_.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpy27cehl_.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy3lgiudy.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpy3lgiudy.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpy3lgiudy.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpy3lgiudy.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpy3lgiudy.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpy3lgiudy.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpy3lgiudy.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpy3lgiudy.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpy3lgiudy.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzk2_7pmd.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk2_7pmd.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk2_7pmd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzk2_7pmd.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk2_7pmd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk2_7pmd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzk2_7pmd.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzk2_7pmd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzk2_7pmd.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzk2_7pmd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = [num_dict[num] for num in split(numbers)]\n\
    \    sorted_list = sort(num_list)\n    sorted_str = \"\"\n    for num in sorted_list\n\
    \        sorted_str *= \" \" * num_dict[num]\n    end\n    return sorted_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt9sa2esa.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key\
    \ 3 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpt9sa2esa.jl:24\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt9sa2esa.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt9sa2esa.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt9sa2esa.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  KeyError: key 3 not\
    \ found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpt9sa2esa.jl:24\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt9sa2esa.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt9sa2esa.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt9sa2esa.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  KeyError: key 0 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String,\
    \ Int64}, key::Int64)\\n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpt9sa2esa.jl:24\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt9sa2esa.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into a vector of strings\n    nums = split(numbers)\n    # Convert the\
    \ vector of strings to a vector of integers\n    nums = parse.(Int, nums)\n  \
    \  # Sort the vector of integers\n    sort!(nums)\n    # Convert the vector of\
    \ integers to a vector of strings\n    nums = string.(nums)\n    # Join the vector\
    \ of strings into a single string\n    nums = join(nums, \" \")\n    # Return\
    \ the string\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp2vxvbt1.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670 [inlined]\\\
    n    [5] _broadcast_getindex\\n      @ ./broadcast.jl:653 [inlined]\\n    [6]\
    \ getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [7] macro expansion\\\
    n      @ ./broadcast.jl:961 [inlined]\\n    [8] macro expansion\\n      @ ./simdloop.jl:77\
    \ [inlined]\\n    [9] copyto!\\n      @ ./broadcast.jl:960 [inlined]\\n   [10]\
    \ copyto!\\n      @ ./broadcast.jl:913 [inlined]\\n   [11] copy\\n      @ ./broadcast.jl:885\
    \ [inlined]\\n   [12] materialize\\n      @ ./broadcast.jl:860 [inlined]\\n  \
    \ [13] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpp2vxvbt1.jl:11\\n\
    \   [14] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [15] macro expansion\\n      @ /tmp/tmpp2vxvbt1.jl:27 [inlined]\\\
    n   [16] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [17] top-level scope\\n      @ /tmp/tmpp2vxvbt1.jl:25\\ntest\
    \ set: Error During Test at /tmp/tmpp2vxvbt1.jl:28\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./bro"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[num] for\
    \ num in num_list]\n    sort!(num_list)\n    num_list = [num_dict[num] for num\
    \ in num_list]\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpihfb6kif.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpihfb6kif.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpihfb6kif.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpihfb6kif.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpihfb6kif.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\n  Stacktrace:\\\
    n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     @ Base ./dict.jl:481\\\
    n   [2] (::var\"#2#4\"{Dict{String, Int64}})(num::Int64)\\n     @ Main ./none:0\\\
    n   [3] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [4] collect\\n     @\
    \ ./array.jl:724 [inlined]\\n   [5] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpihfb6kif.jl:12\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpihfb6kif.jl:21 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpihfb6kif.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpihfb6kif.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  KeyError: key 3 not\
    \ found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] (::var\"#2#4\"{Dict{String, Int64}})(num::Int64)\\\
    n     @ Main ./none:0\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3hhh7oen.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp3hhh7oen.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp3hhh7oen.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp3hhh7oen.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp3hhh7oen.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [2] _collect\\n     @ ./array.jl:744 [inlined]\\n   [3] collect_similar\\\
    n     @ ./array.jl:653 [inlined]\\n   [4] map\\n     @ ./abstractarray.jl:2867\
    \ [inlined]\\n   [5] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp3hhh7oen.jl:10\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp3hhh7oen.jl:21 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp3hhh7oen.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf0ke96ii.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpf0ke96ii.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpf0ke96ii.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpf0ke96ii.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpf0ke96ii.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpf0ke96ii.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpf0ke96ii.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpf0ke96ii.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpf0ke96ii.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpf0ke96ii.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpf0ke96ii.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpf0ke96ii.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpf0ke96ii.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpf0ke96ii.jl:14\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(x -> num_dict[x], num_list)\n    num_list = map(x -> string(x),\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpciua0ly0.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpciua0ly0.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpciua0ly0.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpciua0ly0.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpciua0ly0.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpciua0ly0.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpciua0ly0.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpciua0ly0.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpciua0ly0.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpciua0ly0.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpciua0ly0.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpciua0ly0.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpciua0ly0.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers, \" \")]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw5lo8a2h.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpw5lo8a2h.jl:9\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpw5lo8a2h.jl:18 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpw5lo8a2h.jl:17\\ntest set:\
    \ Test Failed at /tmp/tmpw5lo8a2h.jl:20\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpml4o14nz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpml4o14nz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpml4o14nz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpml4o14nz.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpml4o14nz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpml4o14nz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpml4o14nz.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpml4o14nz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpml4o14nz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpml4o14nz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums\
    \ = map(x -> string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpce00k7g2.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpce00k7g2.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpce00k7g2.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpce00k7g2.jl:19 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpce00k7g2.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpce00k7g2.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpce00k7g2.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers, \" \")]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsqb6gn2r.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpsqb6gn2r.jl:9\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpsqb6gn2r.jl:18 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpsqb6gn2r.jl:17\\ntest set:\
    \ Test Failed at /tmp/tmpsqb6gn2r.jl:20\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sshj5rw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sshj5rw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sshj5rw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sshj5rw.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sshj5rw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sshj5rw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sshj5rw.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sshj5rw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sshj5rw.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sshj5rw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp09jhbsd5.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp09jhbsd5.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp09jhbsd5.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp09jhbsd5.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmp09jhbsd5.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpesizbhf5.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpesizbhf5.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpesizbhf5.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpesizbhf5.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpesizbhf5.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpesizbhf5.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpesizbhf5.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpesizbhf5.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpesizbhf5.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpesizbhf5.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpesizbhf5.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpesizbhf5.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpesizbhf5.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp844zdx69.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp844zdx69.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp844zdx69.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp844zdx69.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp844zdx69.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp844zdx69.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp844zdx69.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp844zdx69.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp844zdx69.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp844zdx69.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, num) for num in nums]\n    sorted_nums =\
    \ sort(nums_int)\n    sorted_nums_str = [string(num) for num in sorted_nums]\n\
    \    return join(sorted_nums_str, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoacv7uwc.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpoacv7uwc.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpoacv7uwc.jl:19 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpoacv7uwc.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpoacv7uwc.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpoacv7uwc.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expan"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmperf2l5h4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperf2l5h4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperf2l5h4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmperf2l5h4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperf2l5h4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperf2l5h4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmperf2l5h4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperf2l5h4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperf2l5h4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmperf2l5h4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, x) for x in nums]\n    sort!(nums_int)\n\
    \    nums_str = [string(x) for x in nums_int]\n    return join(nums_str, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpft7rgkk9.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpft7rgkk9.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpft7rgkk9.jl:19 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpft7rgkk9.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpft7rgkk9.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpft7rgkk9.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expan"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0cejyl73.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cejyl73.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cejyl73.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0cejyl73.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cejyl73.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cejyl73.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0cejyl73.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cejyl73.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cejyl73.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0cejyl73.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplbbtjl39.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbbtjl39.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbbtjl39.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplbbtjl39.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbbtjl39.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbbtjl39.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplbbtjl39.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbbtjl39.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbbtjl39.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbbtjl39.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    sort!(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wk1y5vv.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk1y5vv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk1y5vv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1wk1y5vv.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk1y5vv.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk1y5vv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1wk1y5vv.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk1y5vv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk1y5vv.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wk1y5vv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkgza8aa.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgza8aa.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgza8aa.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfkgza8aa.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgza8aa.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgza8aa.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfkgza8aa.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgza8aa.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgza8aa.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkgza8aa.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp93kk_9j9.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp93kk_9j9.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp93kk_9j9.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp93kk_9j9.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp93kk_9j9.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp93kk_9j9.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp93kk_9j9.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp93kk_9j9.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp93kk_9j9.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdbbswmw5.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbbswmw5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbbswmw5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdbbswmw5.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbbswmw5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbbswmw5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdbbswmw5.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbbswmw5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbbswmw5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdbbswmw5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbk2drzwf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbk2drzwf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbk2drzwf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbk2drzwf.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbk2drzwf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbk2drzwf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbk2drzwf.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbk2drzwf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbk2drzwf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbk2drzwf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num -> num_dict[num],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(num -> num_dict[num], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvknw1sjg.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpvknw1sjg.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvknw1sjg.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvknw1sjg.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpvknw1sjg.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpvknw1sjg.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(num::Int64)\\\
    n      @ Main /tmp/tmpvknw1sjg.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpvknw1sjg.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvknw1sjg.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgkwl0vcp.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpgkwl0vcp.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpgkwl0vcp.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpgkwl0vcp.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpgkwl0vcp.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpgkwl0vcp.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpgkwl0vcp.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpgkwl0vcp.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpgkwl0vcp.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp55ch2779.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55ch2779.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55ch2779.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55ch2779.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55ch2779.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55ch2779.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55ch2779.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp55ch2779.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp55ch2779.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55ch2779.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxpe06bja.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpe06bja.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpe06bja.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxpe06bja.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpe06bja.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpe06bja.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxpe06bja.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpe06bja.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpe06bja.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpe06bja.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzk7eu32g.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpzk7eu32g.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpzk7eu32g.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpzk7eu32g.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpzk7eu32g.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpzk7eu32g.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpzk7eu32g.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpzk7eu32g.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpzk7eu32g.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvh5h3yyb.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpvh5h3yyb.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvh5h3yyb.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvh5h3yyb.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpvh5h3yyb.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpvh5h3yyb.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpvh5h3yyb.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpvh5h3yyb.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvh5h3yyb.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvu_gzynz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvu_gzynz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvu_gzynz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvu_gzynz.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvu_gzynz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvu_gzynz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvu_gzynz.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvu_gzynz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvu_gzynz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvu_gzynz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n\
    \        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n   \
    \     \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n      \
    \  \"nine\" => 9\n    )\n    num_list = numbers |> split(\" \") |> map(num_dict)\
    \ |> sort\n    num_list |> map(num_dict |> invert) |> join(\" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvwcbzrga.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmpvwcbzrga.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvwcbzrga.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvwcbzrga.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpvwcbzrga.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] |>(x::String, f::Vector{SubString{String}})\\n     @ Base ./operators.jl:966\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpvwcbzrga.jl:20\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvwcbzrga.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvwcbzrga.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers, \" \")]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmzu_kox6.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpmzu_kox6.jl:9\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpmzu_kox6.jl:18 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpmzu_kox6.jl:17\\ntest set:\
    \ Test Failed at /tmp/tmpmzu_kox6.jl:20\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsax0hi20.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsax0hi20.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsax0hi20.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsax0hi20.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsax0hi20.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsax0hi20.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsax0hi20.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsax0hi20.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsax0hi20.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsax0hi20.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp08z45wio.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp08z45wio.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp08z45wio.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp08z45wio.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp08z45wio.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp08z45wio.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp08z45wio.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp08z45wio.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp08z45wio.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp08z45wio.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp08z45wio.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp08z45wio.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp08z45wio.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6c5xczx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6c5xczx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6c5xczx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq6c5xczx.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6c5xczx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6c5xczx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq6c5xczx.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6c5xczx.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6c5xczx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6c5xczx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    sort!(num_list)\n    num_list = [key for key in num_dict.keys()\
    \ if num_dict[key] in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9ygpryj0.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp9ygpryj0.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp9ygpryj0.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp9ygpryj0.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp9ygpryj0.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{String}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp9ygpryj0.jl:12\\n\
    \   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9ygpryj0.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9ygpryj0.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpynp2vept.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpynp2vept.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpynp2vept.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpynp2vept.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpynp2vept.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpynp2vept.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpynp2vept.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpynp2vept.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpynp2vept.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpynp2vept.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjmtnxwex.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmtnxwex.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmtnxwex.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjmtnxwex.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmtnxwex.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmtnxwex.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjmtnxwex.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmtnxwex.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmtnxwex.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmtnxwex.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbc0cb9vx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc0cb9vx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc0cb9vx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbc0cb9vx.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc0cb9vx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc0cb9vx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbc0cb9vx.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc0cb9vx.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc0cb9vx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbc0cb9vx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp28m9rrzl.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp28m9rrzl.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp28m9rrzl.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp28m9rrzl.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp28m9rrzl.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Dict{String,\
    \ Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [2] _collect\\n     @ ./array.jl:744 [inlined]\\n   [3] collect_similar\\\
    n     @ ./array.jl:653 [inlined]\\n   [4] map\\n     @ ./abstractarray.jl:2867\
    \ [inlined]\\n   [5] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp28m9rrzl.jl:10\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp28m9rrzl.jl:21 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp28m9rrzl.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp348vw5tm.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp348vw5tm.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp348vw5tm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp348vw5tm.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp348vw5tm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp348vw5tm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp348vw5tm.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp348vw5tm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp348vw5tm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp348vw5tm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = [parse(Int,\
    \ x) for x in split(numbers)]\n    sort!(nums)\n    return join(nums, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9ehuqcig.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp9ehuqcig.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp9ehuqcig.jl:18 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp9ehuqcig.jl:16\\ntest\
    \ set: Error During Test at /tmp/tmp9ehuqcig.jl:19\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp9ehuqcig.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk9pr8wll.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpk9pr8wll.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpk9pr8wll.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpk9pr8wll.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpk9pr8wll.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpk9pr8wll.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpk9pr8wll.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7xi8qr6u.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp7xi8qr6u.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp7xi8qr6u.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp7xi8qr6u.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp7xi8qr6u.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp7xi8qr6u.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp7xi8qr6u.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp7xi8qr6u.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp7xi8qr6u.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return \" \"\
    .join(nums_sorted)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaivyaezv.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpaivyaezv.jl:12\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpaivyaezv.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpaivyaezv.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpaivyaezv.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#3\")(num::SubString{String})\\n     @ Main ./none:0\\n   [2]\
    \ iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpaivyaezv.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpaivyaezv.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpaivyaezv.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpaivyaezv.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(num::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpaivyaezv.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpziaj37ql.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziaj37ql.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziaj37ql.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpziaj37ql.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziaj37ql.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziaj37ql.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpziaj37ql.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziaj37ql.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziaj37ql.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpziaj37ql.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    num_list = join(num_list, \" \")\n    return num_list\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp234afq3h.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp234afq3h.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp234afq3h.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp234afq3h.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp234afq3h.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp234afq3h.jl:22\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp234afq3h.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp234afq3h.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp234afq3h.jl:22 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[num] for num in split(numbers)]\n    sort!(num_list)\n\
    \    num_list = [string(num) for num in num_list]\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkjswgmm1.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjswgmm1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjswgmm1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkjswgmm1.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjswgmm1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjswgmm1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkjswgmm1.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjswgmm1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjswgmm1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkjswgmm1.jl:23\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjswgmm1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjswgmm1"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkjswgmm1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1snqhfip.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp1snqhfip.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp1snqhfip.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp1snqhfip.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp1snqhfip.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp1snqhfip.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp1snqhfip.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp1snqhfip.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp1snqhfip.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3xjqtog.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3xjqtog.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3xjqtog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp3xjqtog.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3xjqtog.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3xjqtog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp3xjqtog.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3xjqtog.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3xjqtog.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3xjqtog.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv9u3ie8k.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9u3ie8k.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9u3ie8k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv9u3ie8k.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9u3ie8k.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9u3ie8k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv9u3ie8k.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9u3ie8k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9u3ie8k.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9u3ie8k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = [num_dict[x] for x in\
    \ num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt3wau9al.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpt3wau9al.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt3wau9al.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt3wau9al.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpt3wau9al.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpt3wau9al.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt3wau9al.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt3wau9al.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpt3wau9al.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpt3wau9al.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt3wau9al.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt3wau9al.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpt3wau9al.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps5l5qsry.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmps5l5qsry.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmps5l5qsry.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmps5l5qsry.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmps5l5qsry.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmps5l5qsry.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmps5l5qsry.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmps5l5qsry.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmps5l5qsry.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp2spsktk.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp2spsktk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp2spsktk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp2spsktk.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp2spsktk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp2spsktk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp2spsktk.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp2spsktk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp2spsktk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp2spsktk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    num_list = sort(num_list)\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpij8fmgkn.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpij8fmgkn.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpij8fmgkn.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpij8fmgkn.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpij8fmgkn.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpij8fmgkn.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpij8fmgkn.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpij8fmgkn.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpij8fmgkn.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into an array of strings\n    num_array = split(numbers, \" \")\n   \
    \ # Convert the array of strings to an array of integers\n    num_array = map(x\
    \ -> parse(Int, x), num_array)\n    # Sort the array of integers\n    num_array\
    \ = sort(num_array)\n    # Convert the array of integers to an array of strings\n\
    \    num_array = map(x -> string(x), num_array)\n    # Join the array of strings\
    \ into a single string\n    return join(num_array, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdmhavgt1.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpdmhavgt1.jl:11 [inlined]\\n    [5]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpdmhavgt1.jl:11\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpdmhavgt1.jl:24 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpdmhavgt1.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpdmhavgt1.jl:25\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpdmhavgt1.jl:11 [inlined]\\n    [5]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{Stri"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = numbers.split(\" \")\n    num_list = sort(num_list)\n   \
    \ num_list = map(num_dict, num_list)\n    num_list = map(string, num_list)\n \
    \   return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyaqysfru.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpyaqysfru.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyaqysfru.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyaqysfru.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpyaqysfru.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpyaqysfru.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyaqysfru.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyaqysfru.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpyaqysfru.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpyaqysfru.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyaqysfru.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyaqysfru.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpyaqysfru.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(num_dict, num_list)\n\
    \    sort!(num_list)\n    num_list = map(num_dict, num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwwrsjzep.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Dict{String, Int64} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:744\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:653 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2867 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpwwrsjzep.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpwwrsjzep.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpwwrsjzep.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[i] for i in split(numbers)]\n    sort!(num_list)\n\
    \    return join([string(i) for i in num_list], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi8esvrvn.jl:19\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8esvrvn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8esvrvn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpi8esvrvn.jl:20\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8esvrvn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8esvrvn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpi8esvrvn.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8esvrvn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8esvrvn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpi8esvrvn.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8esvrvn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8esvrvn"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8esvrvn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict{String, Int}()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"] = 1\n\
    \    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"four\"\
    ] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = split(numbers)\n    num_list = map(x -> num_dict[x], num_list)\n    num_list\
    \ = sort(num_list)\n    num_list = map(x -> collect(keys(num_dict))[collect(values(num_dict)).==x][1],\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0rqkrg3i.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp0rqkrg3i.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp0rqkrg3i.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp0rqkrg3i.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp0rqkrg3i.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp0rqkrg3i.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp0rqkrg3i.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp0rqkrg3i.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp0rqkrg3i.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    sort!(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmcwq9ixc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmcwq9ixc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmcwq9ixc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmcwq9ixc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmcwq9ixc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmcwq9ixc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmcwq9ixc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmcwq9ixc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmcwq9ixc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmcwq9ixc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = [parse(Int,\
    \ x) for x in split(numbers)]\n    return join(sort(nums), \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjlhnrtdv.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpjlhnrtdv.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpjlhnrtdv.jl:17 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpjlhnrtdv.jl:15\\ntest\
    \ set: Error During Test at /tmp/tmpjlhnrtdv.jl:18\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpjlhnrtdv.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbim3wppy.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbim3wppy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbim3wppy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbim3wppy.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbim3wppy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbim3wppy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbim3wppy.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbim3wppy.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbim3wppy.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbim3wppy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[i] for i in split(numbers)]\n    sort!(num_list)\n\
    \    return join([string(i) for i in num_list], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukubzgp9.jl:19\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukubzgp9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukubzgp9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpukubzgp9.jl:20\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukubzgp9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukubzgp9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpukubzgp9.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukubzgp9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukubzgp9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpukubzgp9.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukubzgp9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukubzgp9"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukubzgp9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5qtrmnrc.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmp5qtrmnrc.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp5qtrmnrc.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp5qtrmnrc.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp5qtrmnrc.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp5qtrmnrc.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmp5qtrmnrc.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp5qtrmnrc.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp5qtrmnrc.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list_int = [num_dict[x] for\
    \ x in num_list]\n    num_list_int_sorted = sort(num_list_int)\n    num_list_sorted\
    \ = [key for (key, value) in num_dict if value in num_list_int_sorted]\n    return\
    \ join(num_list_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc29krsxx.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpc29krsxx.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpc29krsxx.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpc29krsxx.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpc29krsxx.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers, \" \")\n    num_list = sort(num_list)\n    return join(num_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_y_1k1_d.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_y_1k1_d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_y_1k1_d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_y_1k1_d.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_y_1k1_d.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_y_1k1_d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_y_1k1_d.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_y_1k1_d.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_y_1k1_d.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_y_1k1_d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sorted_list =\
    \ sort(num_list)\n    sorted_numbers = [key for (key, value) in num_dict if value\
    \ in sorted_list]\n    return join(sorted_numbers, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfpzyrem7.jl:21\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpzyrem7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpzyrem7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfpzyrem7.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpzyrem7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpzyrem7.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfpzyrem7.jl:23\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpzyrem7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpzyrem7.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpzyrem7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpem085g7k.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem085g7k.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem085g7k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpem085g7k.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem085g7k.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem085g7k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpem085g7k.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpem085g7k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpem085g7k.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpem085g7k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[num] for\
    \ num in num_list]\n    sort!(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpephla1o6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpephla1o6.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpephla1o6.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpephla1o6.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpephla1o6.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpnbtd84le.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbtd84le.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbtd84le.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnbtd84le.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbtd84le.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbtd84le.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnbtd84le.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbtd84le.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbtd84le.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnbtd84le.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59kb2okl.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59kb2okl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59kb2okl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp59kb2okl.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59kb2okl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59kb2okl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp59kb2okl.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59kb2okl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59kb2okl.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59kb2okl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into a vector of words\n    words = split(numbers)\n    # Convert the\
    \ words to numbers\n    nums = [word2num(w) for w in words]\n    # Sort the numbers\n\
    \    sorted_nums = sort(nums)\n    # Convert the numbers back to words\n    sorted_words\
    \ = [num2word(n) for n in sorted_nums]\n    # Join the words back into a string\n\
    \    return join(sorted_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg91c6sfq.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ word2num not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(w::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpg91c6sfq.jl:11\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpg91c6sfq.jl:25 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpg91c6sfq.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpg91c6sfq.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: word2num\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(w::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpg91c6sfq.jl:11\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpg91c6sfq.jl:26 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpg91c6sfq.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpg91c6sfq.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: word2num not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#3\")(w::SubString{String})\\n     @ Main ./none:0\\n   [2] iterate\\n     @\
    \ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Gener"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdlc4ic8o.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlc4ic8o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlc4ic8o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdlc4ic8o.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlc4ic8o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlc4ic8o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdlc4ic8o.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlc4ic8o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlc4ic8o.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdlc4ic8o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv39y3y02.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpv39y3y02.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpv39y3y02.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpv39y3y02.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpv39y3y02.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpv39y3y02.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpv39y3y02.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpv39y3y02.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpv39y3y02.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ numbers.split()\n    num_list = sort(num_list)\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1yp87jjq.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp1yp87jjq.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1yp87jjq.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1yp87jjq.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1yp87jjq.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp1yp87jjq.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1yp87jjq.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1yp87jjq.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1yp87jjq.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp1yp87jjq.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1yp87jjq.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1yp87jjq.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1yp87jjq.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \"\"\"\n  \
    \  \"\"\"\n    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\"\
    \ => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\"\
    \ => 8, \"nine\" => 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n\
    \    sort!(num_list)\n    return join([string(x) for x in num_list], \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpoglu7gn4.jl:21\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoglu7gn4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoglu7gn4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoglu7gn4.jl:22\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoglu7gn4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoglu7gn4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoglu7gn4.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoglu7gn4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoglu7gn4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpoglu7gn4.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoglu7gn4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoglu7gn4"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoglu7gn4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ik_2619.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ik_2619.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ik_2619.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7ik_2619.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ik_2619.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ik_2619.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7ik_2619.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ik_2619.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ik_2619.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ik_2619.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    nums = split(numbers, \" \")\n    nums = map(x -> num_dict[x], nums)\n\
    \    sort!(nums)\n    nums = map(x -> num_dict[x], nums)\n    return join(nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq12mq9i5.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpq12mq9i5.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpq12mq9i5.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpq12mq9i5.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpq12mq9i5.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpq12mq9i5.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpq12mq9i5.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpq12mq9i5.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpq12mq9i5.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3b5mmv21.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b5mmv21.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b5mmv21.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3b5mmv21.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b5mmv21.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b5mmv21.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3b5mmv21.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b5mmv21.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b5mmv21.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3b5mmv21.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpss3m4126.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss3m4126.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss3m4126.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpss3m4126.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss3m4126.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss3m4126.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpss3m4126.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpss3m4126.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpss3m4126.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpss3m4126.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers, \" \")]\n    sorted_num_list\
    \ = sort(num_list)\n    sorted_num_string = \"\"\n    for x in sorted_num_list\n\
    \        sorted_num_string = sorted_num_string * \" \" * string(x)\n    end\n\
    \    return sorted_num_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo6js9cqu.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#2\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpo6js9cqu.jl:9\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpo6js9cqu.jl:22 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpo6js9cqu.jl:21\\ntest set:\
    \ Test Failed at /tmp/tmpo6js9cqu.jl:23\\n  Expression: candidate(\"three\") ==\
    \ \"three\"\\n   Evaluated: \" 3\" == \"three\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpo6js9cqu.jl:23 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpo6js9cqu.jl:21\\ntest set: Test\
    \ Failed at /tmp/tmpo6js9cqu.jl:24\\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\\n   Evaluated: \" 3 5 9\" == \"three five nine\"\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpo6js9cqu.jl:24 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpo6js9cqu.jl:21\\ntest set: Test\
    \ Failed at /tmp/tmpo6js9cqu.jl:25\\n  Expression: candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\"\\n   Evaluated: \"\
    \ 0 4 5 7 8 9\" == \"zero four five seven eight nine\"\\nStacktr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphqu3e4h9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqu3e4h9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqu3e4h9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphqu3e4h9.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqu3e4h9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqu3e4h9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphqu3e4h9.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqu3e4h9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqu3e4h9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqu3e4h9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_t75qqlz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_t75qqlz.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_t75qqlz.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_t75qqlz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_t75qqlz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_t75qqlz.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_t75qqlz.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_t75qqlz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_t75qqlz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp_t75qqlz.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_t75qqlz.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_t75qqlz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_t75qqlz.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_t75qqlz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3,\
    \ \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8,\
    \ \"nine\" => 9)\n    num_list = []\n    for num in nums\n        push!(num_list,\
    \ num_dict[num])\n    end\n    sorted_nums = sort(num_list)\n    sorted_nums_str\
    \ = []\n    for num in sorted_nums\n        push!(sorted_nums_str, num_dict[num])\n\
    \    end\n    return join(sorted_nums_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2qe2oaxw.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key\
    \ 3 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp2qe2oaxw.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp2qe2oaxw.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp2qe2oaxw.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2qe2oaxw.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  KeyError: key 3 not\
    \ found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String, Int64}, key::Int64)\\\
    n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp2qe2oaxw.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp2qe2oaxw.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp2qe2oaxw.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2qe2oaxw.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  KeyError: key 0 not found\\n  Stacktrace:\\n   [1] getindex(h::Dict{String,\
    \ Int64}, key::Int64)\\n     @ Base ./dict.jl:481\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp2qe2oaxw.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp2qe2oaxw.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array =\
    \ split(numbers, \" \")\n    num_array = sort(num_array)\n    return join(num_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4_6vp8rk.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_6vp8rk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_6vp8rk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4_6vp8rk.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_6vp8rk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_6vp8rk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4_6vp8rk.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4_6vp8rk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4_6vp8rk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_6vp8rk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[n] for n in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp53_98h4n.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53_98h4n.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53_98h4n.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp53_98h4n.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53_98h4n.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53_98h4n.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp53_98h4n.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53_98h4n.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53_98h4n.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp53_98h4n.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = [num_dict[i] for i\
    \ in num_list]\n    num_list = sort(num_list)\n    num_list = [key for (key, value)\
    \ in num_dict if value in num_list]\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpylh1336b.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:724\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpylh1336b.jl:10\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmpylh1336b.jl:20 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpylh1336b.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpylh1336b.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpylh1336b.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpylh1336b.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpylh1336b.jl:23\\n  Expression: candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\"\\n   Evaluated: \"\
    zero four eight nine five seven\" == \"zero four five seven eight nine\"\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpylh1336b.jl:23 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpylh1336b.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpylh1336b.jl:24\\n  Expression: candidate(\"six five four three\
    \ two one z"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[x] for x in split(numbers)]\n    sort!(num_list)\n\
    \    return join([key for (key, value) in num_dict if value in num_list], \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4mb0wswt.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mb0wswt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mb0wswt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp4mb0wswt.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mb0wswt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mb0wswt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp4mb0wswt.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mb0wswt.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mb0wswt.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4mb0wswt.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpriaycuu1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriaycuu1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriaycuu1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpriaycuu1.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriaycuu1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriaycuu1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpriaycuu1.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriaycuu1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriaycuu1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpriaycuu1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = [num_dict[i] for i in split(numbers)]\n    sort!(num_list)\n\
    \    num_list = [string(i) for i in num_list]\n    return join(num_list, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_rm0fz2_.jl:20\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"3\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rm0fz2_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rm0fz2_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_rm0fz2_.jl:21\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"3 5 9\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rm0fz2_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rm0fz2_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_rm0fz2_.jl:22\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"0 4 5\
    \ 7 8 9\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rm0fz2_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rm0fz2_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_rm0fz2_.jl:23\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"0 1\
    \ 2 3 4 5 6\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rm0fz2_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rm0fz2_"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_rm0fz2_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the\
    \ string into a vector of words\n    words = split(numbers)\n    # Convert the\
    \ words to numbers\n    numbers = [word2num(w) for w in words]\n    # Sort the\
    \ numbers\n    sort!(numbers)\n    # Convert the numbers back to words\n    words\
    \ = [num2word(n) for n in numbers]\n    # Join the words back into a string\n\
    \    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuc5q2kge.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: word2num not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(w::SubString{String})\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpuc5q2kge.jl:11\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuc5q2kge.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuc5q2kge.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpuc5q2kge.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: word2num\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(w::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n     @\
    \ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmpuc5q2kge.jl:11\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuc5q2kge.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuc5q2kge.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpuc5q2kge.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] (::var\"\
    #1#3\")(w::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47\
    \ [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#3\"})\n     @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuc5q2kge.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc1f7qhdc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc1f7qhdc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc1f7qhdc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc1f7qhdc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc1f7qhdc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc1f7qhdc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc1f7qhdc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc1f7qhdc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc1f7qhdc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1f7qhdc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list =\
    \ split(numbers)\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0382re4y.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0382re4y.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0382re4y.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0382re4y.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0382re4y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0382re4y.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0382re4y.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0382re4y.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0382re4y.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0382re4y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = [parse(Int,\
    \ x) for x in split(numbers)]\n    return join(sort(nums), \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphtr266bl.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmphtr266bl.jl:8\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmphtr266bl.jl:17 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmphtr266bl.jl:15\ntest set:\
    \ Error During Test at /tmp/tmphtr266bl.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:724\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmphtr266bl.jl:8\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmphtr266bl.jl:18"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphtr266bl.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45gmcq2q.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45gmcq2q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45gmcq2q.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp45gmcq2q.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45gmcq2q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45gmcq2q.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp45gmcq2q.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45gmcq2q.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45gmcq2q.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45gmcq2q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptcxrggt1.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmptcxrggt1.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptcxrggt1.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptcxrggt1.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmptcxrggt1.jl:19\ntest set:\
    \ Error During Test at /tmp/tmptcxrggt1.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmptcxrggt1.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptcxrggt1.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmptcxrggt1.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmptcxrggt1.jl:19\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptcxrggt1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi8r_h3ov.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpi8r_h3ov.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi8r_h3ov.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi8r_h3ov.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi8r_h3ov.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpi8r_h3ov.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi8r_h3ov.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi8r_h3ov.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi8r_h3ov.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpi8r_h3ov.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpi8r_h3ov.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpi8r_h3ov.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi8r_h3ov.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8r_h3ov.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [int(x) for x in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(x) for x in nums_int_sorted]\n    return \" \".join(nums_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpujxnqzuh.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(x::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpujxnqzuh.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpujxnqzuh.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpujxnqzuh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpujxnqzuh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(x::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpujxnqzuh.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpujxnqzuh.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpujxnqzuh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpujxnqzuh.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\n     @\
    \ Base ./array.jl:724\n   [4] sort_numbers(numbers::String)\n     @ Main /tmp/tmpujxn"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpujxnqzuh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo070abnl.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpo070abnl.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo070abnl.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo070abnl.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo070abnl.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpo070abnl.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpo070abnl.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpo070abnl.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpo070abnl.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpo070abnl.jl:19\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo070abnl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    num_list = split(numbers, \" \")\n    num_list = map(x -> num_dict[x],\
    \ num_list)\n    sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpenep7jrw.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:481 [inlined]\n    [2] #1\n      @ /tmp/tmpenep7jrw.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpenep7jrw.jl:10\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpenep7jrw.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpenep7jrw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpenep7jrw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:481\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmpenep7jrw.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [5] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpenep7jrw.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpenep7jrw.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpenep7jrw.jl:19\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpenep7jrw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkykkif9f.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkykkif9f.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkykkif9f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkykkif9f.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkykkif9f.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkykkif9f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkykkif9f.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkykkif9f.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkykkif9f.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkykkif9f.jl:14\n"
  exit_code: 1
  status: SyntaxError

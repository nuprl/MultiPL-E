name: HumanEval_25_factorize
language: jl
prompt: "\"\"\" Return vector of prime factors of given integer in the order from\
  \ smallest to largest.\n    Each of the factors should be vectored number of times\
  \ corresponding to how many times it appeares in factorization.\n    Input number\
  \ should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2,\
  \ 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n\
  \    \"\"\"\nfunction factorize(n::Int64)::Vector{Int64} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = factorize;\n\t@test(candidate(2)\
  \ == [2])\n\t@test(candidate(4) == [2, 2])\n\t@test(candidate(8) == [2, 2, 2])\n\
  \t@test(candidate(57) == [3, 19])\n\t@test(candidate(3249) == [3, 3, 19, 19])\n\t\
  @test(candidate(185193) == [3, 3, 3, 19, 19, 19])\n\t@test(candidate(20577) == [3,\
  \ 19, 19, 19])\n\t@test(candidate(18) == [2, 3, 3])\nend\n"
completions: ["    factors = []\n    i = 2\n    while n > 1\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n        else\n        \
    \    i += 1\n        end\n    end\n    return factors\nend", "    factors = Int64[]\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  factor = 3\n    while n > 1\n        while n % factor == 0\n            push!(factors,\
    \ factor)\n            n /= factor\n        end\n        factor += 2\n    end\n\
    \    return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n   \
    \     while n % i == 0\n            push!(factors, i)\n            n /= i\n  \
    \      end\n        i += 1\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    if n == 1\n        return\
    \ [1]\n    end\n    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = Int64[]\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = Int64[]\n \
    \   while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n   \
    \ factor = 3\n    while n > 1\n        while n % factor == 0\n            push!(factors,\
    \ factor)\n            n /= factor\n        end\n        factor += 2\n    end\n\
    \    return factors\nend", "    factors = Int64[]\n    while n % 2 == 0\n    \
    \    push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n\
    \    end\n    return factors\nend", "    factors = []\n    i = 2\n    while n\
    \ > 1\n        while n % i == 0\n            push!(factors, i)\n            n\
    \ /= i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n > 1\n        for i in 2:n\n            if n % i == 0\n   \
    \             push!(factors, i)\n                n = n / i\n                break\n\
    \            end\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    for i in 2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    i = 2\n    while n > 1\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 1\n    end\n    return factors\nend", "    # your code here\nend", " \
    \   factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n     \
    \       push!(factors, i)\n            n /= i\n        end\n        i += 1\n \
    \   end\n    return factors\nend", "    factors = []\n    for i in 2:n\n     \
    \   while n % i == 0\n            push!(factors, i)\n            n /= i\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n  \
    \  while n > 1\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 1\n    end\n    return factors\nend",
  "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        if n % i == 0\n            push!(factors, i)\n            n = n /\
    \ i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \     i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n \
    \   return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n    \
    \    while n % i == 0\n            push!(factors, i)\n            n /= i\n   \
    \     end\n        i += 1\n    end\n    return factors\nend", "    # your code\
    \ here\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = Int64[]\n \
    \   while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n   \
    \ for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = Int64[]\n    i = 2\n \
    \   while n > 1\n        while n % i == 0\n            push!(factors, i)\n   \
    \         n /= i\n        end\n        i += 1\n    end\n    return factors\nend",
  "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 == 0\n\
    \        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <=\
    \ sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n         \
    \   n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    while n % 3 == 0\n\
    \        push!(factors, 3)\n        n /= 3\n    end\n    i = 5\n    while i *\
    \ i <= n\n        while n % i == 0\n            push!(factors, i)\n          \
    \  n /= i\n        end\n        i += 2\n    end\n    if n > 1\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = Vector{Int64}()\n    while\
    \ n > 1\n        for i in 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n > 1\n      \
    \  for i in 2:n\n            if n % i == 0\n                push!(factors, i)\n\
    \                n = n / i\n                break\n            end\n        end\n\
    \    end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n\
    \    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n \
    \           push!(factors, i)\n            n /= i\n        end\n    end\n    if\
    \ n > 2\n        push!(factors, n)\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = Int64[]\n    for i = 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    while n > 1\n        for i in 2:n\n            if n % i ==\
    \ 0\n                push!(factors, i)\n                n = n / i\n          \
    \      break\n            end\n        end\n    end\n    return factors\nend",
  "    factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = Int64[]\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        if n % i == 0\n         \
    \   push!(factors, i)\n            n = n / i\n        else\n            i += 1\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    factor = 3\n    while n > 1\n        while n % factor\
    \ == 0\n            push!(factors, factor)\n            n /= factor\n        end\n\
    \        factor += 2\n    end\n    return factors\nend", "    factors = Int64[]\n\
    \    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n > 1\n        for i in 2:n\n            if\
    \ n % i == 0\n                push!(factors, i)\n                n = n / i\n \
    \               break\n            end\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    i = 3\n    while i <= n\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n        i\
    \ += 2\n    end\n    return factors\nend", "    factors = Int64[]\n    while n\
    \ % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n  \
    \  while i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n    \
    \    push!(factors, n)\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        else\n            i += 1\n        end\n \
    \   end\n    return factors\nend", "    factors = []\n    # TODO: implement this\
    \ function\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n\
    \        push!(factors, 2)\n        n /= 2\n    end\n    for i = 3:2:floor(sqrt(n))\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    # your code here\nend", "    factors = Int64[]\n    for\
    \ i in 2:n\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ Int64[]\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i = 3:2:floor(Int, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    # your code here\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n \
    \   end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n  \
    \          push!(factors, i)\n            n /= i\n        end\n    end\n    if\
    \ n > 2\n        push!(factors, n)\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    for i in 2:n\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n > 1\n        for i in 2:n\n            if\
    \ n % i == 0\n                push!(factors, i)\n                n = n / i\n \
    \               break\n            end\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    while n > 1\n        for i in 2:n\n            if\
    \ n % i == 0\n                push!(factors, i)\n                n = n / i\n \
    \               break\n            end\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = Int64[]\n    for i in 2:n\n\
    \        if n % i == 0\n            push!(factors, i)\n            n = n / i\n\
    \            i = i - 1\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    while n % 3 == 0\n        push!(factors, 3)\n\
    \        n /= 3\n    end\n    i = 5\n    while i*i <= n\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n        i\
    \ += 2\n    end\n    if n > 1\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = []\n    i =\
    \ 2\n    while n > 1\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i in 3:2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    for i = 2:n\n        while n % i == 0\n    \
    \        push!(factors, i)\n            n /= i\n        end\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n \
    \   return factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n \
    \   return factors\nend", "    factors = []\n    while n > 1\n        for i in\
    \ 2:n\n            if n % i == 0\n                push!(factors, i)\n        \
    \        n = n / i\n                break\n            end\n        end\n    end\n\
    \    return factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = Vector{Int64}()\n    i = 2\n    while n > 1\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = Int64[]\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n      \
    \  n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n        i\
    \ += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = Int64[]\n    for i in 2:n\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n    end\n\
    \    return factors\nend", "    factors = []\n    while n > 1\n        for i in\
    \ 2:n\n            if n % i == 0\n                push!(factors, i)\n        \
    \        n = n / i\n                break\n            end\n        end\n    end\n\
    \    return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n   \
    \     while n % i == 0\n            push!(factors, i)\n            n /= i\n  \
    \      end\n        i += 1\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        else\n            i += 1\n        end\n \
    \   end\n    return factors\nend", "    factors = Int64[]\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = Int64[]\n    i\
    \ = 2\n    while n > 1\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \     i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    i = 3\n    while i * i <= n\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n \
    \   return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n    \
    \    while n % i == 0\n            push!(factors, i)\n            n /= i\n   \
    \     end\n        i += 1\n    end\n    return factors\nend", "    factors = Int64[]\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = Int64[]\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    while\
    \ n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    while n\
    \ % 3 == 0\n        push!(factors, 3)\n        n /= 3\n    end\n    i = 5\n  \
    \  while i * i <= n\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 2\n    end\n    if n > 1\n    \
    \    push!(factors, n)\n    end\n    return factors\nend", "    factors = []\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  while n % 3 == 0\n        push!(factors, 3)\n        n /= 3\n    end\n    i\
    \ = 5\n    while i * i <= n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 1\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = Int64[]\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = Int64[]\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= n\n        while n % i == 0\n            push!(factors, i)\n          \
    \  n /= i\n        end\n        i += 2\n    end\n    return factors\nend", " \
    \   factors = Int64[]\n    for i in 2:n\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = Int64[]\n    i = 2\n  \
    \  while n > 1\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 1\n    end\n    return factors\nend",
  "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /=\
    \ 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n  \
    \          push!(factors, i)\n            n /= i\n        end\n        i += 2\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i = 3:2:floor(sqrt(n))\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n    end\n\
    \    if n > 2\n        push!(factors, n)\n    end\n    return factors\nend", " \
    \   factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n     \
    \   n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n        i\
    \ += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    # TODO: implement this function\n    return [2, 2, 2]\n\
    end", "    factors = Int64[]\n    i = 2\n    while n > 1\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = Int64[]\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = Int64[]\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /=\
    \ 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n    end\n   \
    \ if n > 2\n        push!(factors, n)\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 == 0\n\
    \        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    for i = 3:2:floor(sqrt(n))\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = Int64[]\n    i = 2\n    while n != 1\n       \
    \ while n % i == 0\n            push!(factors, i)\n            n /= i\n      \
    \  end\n        i += 1\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i * i <= n\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n        i\
    \ += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = Int64[]\n \
    \   i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n > 1\n      \
    \  for i in 2:n\n            if n % i == 0\n                push!(factors, i)\n\
    \                n = n / i\n                break\n            end\n        end\n\
    \    end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n\
    \        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <=\
    \ sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n         \
    \   n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = Int64[]\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <=\
    \ sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n         \
    \   n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    for i in 2:n\n        while n % i == 0\n   \
    \         push!(factors, i)\n            n /= i\n        end\n    end\n    return\
    \ factors\nend", "    factors = Int64[]\n    for i in 2:n\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n    end\n\
    \    return factors\nend", "    factors = Int64[]\n    while n % 2 == 0\n    \
    \    push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = Int64[]\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n > 1\n\
    \        for i in 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    while n %\
    \ 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = Int64[]\n    while n >\
    \ 1\n        for i in 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = Int64[]\n    for i\
    \ in 2:n\n        while n % i == 0\n            push!(factors, i)\n          \
    \  n /= i\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n > 1\n        for i in 2:n\n            if n % i == 0\n   \
    \             push!(factors, i)\n                n = n / i\n                break\n\
    \            end\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while i <= n\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        else\n            i += 1\n        end\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n\
    \    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 2\n  \
    \  end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    for i in 2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        if n % i == 0\n            push!(factors, i)\n            n = n /\
    \ i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        if n % i == 0\n \
    \           push!(factors, i)\n            n = n / i\n        else\n         \
    \   i += 1\n        end\n    end\n    return factors\nend", "    factors = Int64[]\n\
    \    for i in 2:n\n        while n % i == 0\n            push!(factors, i)\n \
    \           n /= i\n        end\n    end\n    return factors\nend", "    factors\
    \ = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n\
    \    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 2\n  \
    \  end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    for i = 2:n\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n    end\n   \
    \ return factors\nend", "    factors = []\n    for i in 2:n\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \ end\n    return factors\nend", "    # TODO: implement function\n    return [2,\
    \ 2, 2]\nend", "    factors = Int64[]\n    for i in 2:n\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n            i = i - 1\n\
    \        end\n    end\n    return factors\nend", "    factors = Int64[]\n    i\
    \ = 2\n    while n > 1\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    for i in 2:n\n        while n % i == 0\n   \
    \         push!(factors, i)\n            n /= i\n        end\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    # n is odd at this point\n    # so we can skip\
    \ one element (note i = i + 2)\n    for i = 3:2:sqrt(n)\n        while n % i ==\
    \ 0\n            push!(factors, i)\n            n /= i\n        end\n    end\n\
    \    # n must be a prime number greater than 2\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = Int64[]\n    while\
    \ n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n\
    \    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ Int64[]\n    if n == 1\n        return [1]\n    end\n    for i in 2:n\n    \
    \    if n % i == 0\n            push!(factors, i)\n            n = n / i\n   \
    \         i = i - 1\n        end\n    end\n    return factors\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

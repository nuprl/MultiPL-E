name: HumanEval_89_encrypt
language: jl
results:
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt64qnurk.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpt64qnurk.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt64qnurk.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt64qnurk.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpt64qnurk.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpt64qnurk.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt64qnurk.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt64qnurk.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpt64qnurk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpt64qnurk.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpt64qnurk.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpt64qnurk.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpt64qnurk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt64qnurk.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i in alphabet\n            encrypted_string = encrypted_string\
    \ * alphabet[(alphabet.find(i) + 2) % 26]\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp182nqh31.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp182nqh31.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp182nqh31.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp182nqh31.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp182nqh31.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp182nqh31.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp182nqh31.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp182nqh31.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp182nqh31.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp182nqh31.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp182nqh31.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp182nqh31.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp182nqh31.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Bas"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp182nqh31.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(x,2) for x in s]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi1l1sqk4.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpi1l1sqk4.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpi1l1sqk4.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpi1l1sqk4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpi1l1sqk4.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpi1l1sqk4.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpi1l1sqk4.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpi1l1sqk4.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpi1l1sqk4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpi1l1sqk4.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi1l1sqk4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #create an empty string to store the encrypted string\n    encrypted = \"\
    \"\n    #loop through the string\n    for i in s\n        #find the index of the\
    \ letter in the alphabet\n        index = findfirst(alphabet, i)\n        #add\
    \ two to the index\n        index += 2\n        #if the index is greater than\
    \ 26, subtract 26 from the index\n        if index > 26\n            index -=\
    \ 26\n        end\n        #add the letter at the new index to the encrypted string\n\
    \        push!(encrypted, alphabet[index])\n    end\n    #return the encrypted\
    \ string\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdb0mzbkz.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpdb0mzbkz.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdb0mzbkz.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdb0mzbkz.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpdb0mzbkz.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpdb0mzbkz.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdb0mzbkz.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdb0mzbkz.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpdb0mzbkz.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\\n  Meth"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a variable that will hold the encrypted string\n    encrypted_string\
    \ = \"\"\n    #loop through each character in the string\n    for c in s\n   \
    \     #get the ascii value of the character\n        ascii_value = Int(c)\n  \
    \      #check if the character is a lowercase letter\n        if ascii_value >=\
    \ 97 && ascii_value <= 122\n            #rotate the letter by two places\n   \
    \         ascii_value += 2\n            #check if the letter is now out of range\n\
    \            if ascii_value > 122\n                #if it is out of range, subtract\
    \ 26 to wrap it back around\n                ascii_value -= 26\n            end\n\
    \        #check if the character is an uppercase letter\n        elseif ascii_value\
    \ >= 65 && ascii_value <= 90\n            #rotate the letter by two places\n \
    \           ascii_value += 2\n            #check if the letter is now out of range\n\
    \            if ascii_value > 90\n                #if it is out of range, subtract\
    \ 26 to wrap it back around\n                ascii_value -= 26\n            end\n\
    \        end\n        #convert the ascii value back to a character and add it\
    \ to the encrypted string\n        encrypted_string *= string(Char(ascii_value))\n\
    \    end\n    #return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2bjxaaqb.jl:52\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bjxaaqb.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bjxaaqb.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp2bjxaaqb.jl:53\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bjxaaqb.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bjxaaqb.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp2bjxaaqb.jl:54\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bjxaaqb.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bjxaaqb.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp2bjxaaqb.jl:55\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bjxaaqb.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bjxaaqb.jl:51\ntest set: Test\
    \ Failed at /tmp/tmp2bjxaaqb.jl:56\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2bjxaaqb.jl:49\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,2*2))\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpahou8egs.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpahou8egs.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpahou8egs.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpahou8egs.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpahou8egs.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpahou8egs.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpahou8egs.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpahou8egs.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpahou8egs.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpahou8egs.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpahou8egs.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpahou8egs.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpahou8egs.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpahou8egs.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahou8egs.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a new string to store the encrypted string\n    new_s = \"\"\n\
    \    # loop through each character in the string\n    for c in s\n        # if\
    \ the character is a letter\n        if isalpha(c)\n            # if the character\
    \ is a lower case letter\n            if islower(c)\n                # if the\
    \ character is a lower case letter\n                if c == 'x'\n            \
    \        # add 'a' to the new string\n                    append!(new_s, 'a')\n\
    \                elseif c == 'y'\n                    # add 'b' to the new string\n\
    \                    append!(new_s, 'b')\n                else\n             \
    \       # add the next two letters in the alphabet to the new string\n       \
    \             append!(new_s, Char(Int(c) + 2))\n                end\n        \
    \    # if the character is an upper case letter\n            else\n          \
    \      # if the character is an upper case letter\n                if c == 'X'\n\
    \                    # add 'A' to the new string\n                    append!(new_s,\
    \ 'A')\n                elseif c == 'Y'\n                    # add 'B' to the\
    \ new string\n                    append!(new_s, 'B')\n                else\n\
    \                    # add the next two letters in the alphabet to the new string\n\
    \                    append!(new_s, Char(Int(c) + 2))\n                end\n \
    \           end\n        # if the character is not a letter\n        else\n  \
    \          # add the character to the new string\n            append!(new_s, c)\n\
    \        end\n    end\n    # return the new string\n    return new_s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9prshptx.jl:63\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp9prshptx.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9prshptx.jl:63 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9prshptx.jl:62\ntest set:\
    \ Error During Test at /tmp/tmp9prshptx.jl:64\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp9prshptx.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9prshptx.jl:64 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9prshptx.jl:62\ntest set:\
    \ Error During Test at /tmp/tmp9prshptx.jl:65\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp9prshptx.jl:21\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9prshptx.jl:65 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9prshptx.jl:62\ntest set:\
    \ Error During Test at /tmp/tmp9prshptx.jl:66\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp9prshptx.jl:21\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9prshptx.jl:60\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,\
    \ 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0fb_b4zn.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0fb_b4zn.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fb_b4zn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0fb_b4zn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp0fb_b4zn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0fb_b4zn.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fb_b4zn.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0fb_b4zn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp0fb_b4zn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0fb_b4zn.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0fb_b4zn.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0fb_b4zn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp0fb_b4zn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0fb_b4zn.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fb_b4zn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create an array of the alphabet\n    alphabet = [chr(i) for i in range(97,\
    \ 123)]\n    # Create an array of the encrypted alphabet\n    encrypted_alphabet\
    \ = [chr(i) for i in range(99, 125)]\n    # Create an array of the encrypted string\n\
    \    encrypted_string = []\n    # Iterate through the string\n    for i in s\n\
    \        # Find the index of the character in the alphabet\n        index = findfirst(alphabet,\
    \ i)\n        # Append the encrypted character to the encrypted string\n     \
    \   push!(encrypted_string, encrypted_alphabet[index])\n    end\n    # Return\
    \ the encrypted string\n    return join(encrypted_string)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmznt_3x4.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpmznt_3x4.jl:17\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmznt_3x4.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmznt_3x4.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpmznt_3x4.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpmznt_3x4.jl:17\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmznt_3x4.jl:38 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmznt_3x4.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpmznt_3x4.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#3\")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n    \
    \ @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpmznt_3x4.jl:17\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmznt_3x4.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1mh6xjd4.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1mh6xjd4.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1mh6xjd4.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1mh6xjd4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1mh6xjd4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1mh6xjd4.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1mh6xjd4.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1mh6xjd4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1mh6xjd4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1mh6xjd4.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1mh6xjd4.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1mh6xjd4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1mh6xjd4.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1mh6xjd4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(chr(ord(i)\
    \ + 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpay9texr0.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpay9texr0.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpay9texr0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpay9texr0.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpay9texr0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpay9texr0.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpay9texr0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpay9texr0.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpay9texr0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpay9texr0.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpay9texr0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpay9texr0.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpay9texr0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpay9texr0.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpay9texr0.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4aiz1l9j.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4aiz1l9j.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4aiz1l9j.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4aiz1l9j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4aiz1l9j.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4aiz1l9j.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4aiz1l9j.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4aiz1l9j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4aiz1l9j.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4aiz1l9j.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4aiz1l9j.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4aiz1l9j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4aiz1l9j.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4aiz1l9j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create an array of the alphabet\n    alphabet = [\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    # Create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # Loop through the string\n    for i in s\n        # Find the index\
    \ of the letter in the alphabet\n        index = findfirst(alphabet, i)\n    \
    \    # Add two to the index\n        index += 2\n        # If the index is greater\
    \ than 26, subtract 26\n        if index > 26\n            index -= 26\n     \
    \   end\n        # Add the letter to the encrypted string\n        push!(encrypted_string,\
    \ alphabet[index])\n    end\n    # Return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwgxgdbko.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching findfirst(::Vector{String}, ::Char)\\n  Closest candidates are:\\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpwgxgdbko.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwgxgdbko.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwgxgdbko.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpwgxgdbko.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\n  Stacktrace:\\\
    n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpwgxgdbko.jl:23\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwgxgdbko.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwgxgdbko.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpwgxgdbko.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\\n  MethodError: no method matching findfirst(::Vector{String}"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in s\n        if i == \"z\"\n            new_s\
    \ = new_s * \"b\"\n        elseif i == \"y\"\n            new_s = new_s * \"a\"\
    \n        else\n            new_s = new_s * chr(ord(i) + 2)\n        end\n   \
    \ end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj_i0ik5t.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj_i0ik5t.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj_i0ik5t.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj_i0ik5t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpj_i0ik5t.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj_i0ik5t.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj_i0ik5t.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj_i0ik5t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpj_i0ik5t.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj_i0ik5t.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj_i0ik5t.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj_i0ik5t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpj_i0ik5t.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj_i0ik5t.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_i0ik5t.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i in alphabet\n            encrypted_string = encrypted_string\
    \ * alphabet[(alphabet.find(i) + 2) % 26]\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjop9b66p.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpjop9b66p.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjop9b66p.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjop9b66p.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjop9b66p.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpjop9b66p.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjop9b66p.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjop9b66p.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjop9b66p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpjop9b66p.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjop9b66p.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjop9b66p.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjop9b66p.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Bas"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjop9b66p.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        encrypted_string = encrypted_string * alphabet[(alphabet.find(i)\
    \ + 2*2) % 26]\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd9zokg3p.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd9zokg3p.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd9zokg3p.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd9zokg3p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpd9zokg3p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd9zokg3p.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd9zokg3p.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd9zokg3p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpd9zokg3p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd9zokg3p.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd9zokg3p.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd9zokg3p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpd9zokg3p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Bas"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9zokg3p.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = collect(s)\n    for i in 1:length(s)\n        s[i] = chr(ord(s[i])\
    \ + 2*2)\n    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg2go8_2b.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg2go8_2b.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg2go8_2b.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg2go8_2b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg2go8_2b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg2go8_2b.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg2go8_2b.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg2go8_2b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg2go8_2b.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg2go8_2b.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg2go8_2b.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg2go8_2b.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg2go8_2b.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg2go8_2b.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg2go8_2b.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ new_alphabet = alphabet[3:end] * 2\n    encrypted_string = \"\"\n    for i in\
    \ s\n        if i in alphabet\n            encrypted_string = encrypted_string\
    \ * new_alphabet[alphabet.index(i)+1]\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprg4u_wys.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprg4u_wys.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprg4u_wys.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprg4u_wys.jl:33\ntest set:\
    \ Error During Test at /tmp/tmprg4u_wys.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprg4u_wys.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprg4u_wys.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprg4u_wys.jl:33\ntest set:\
    \ Error During Test at /tmp/tmprg4u_wys.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprg4u_wys.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprg4u_wys.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprg4u_wys.jl:33\ntest set:\
    \ Error During Test at /tmp/tmprg4u_wys.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprg4u_wys.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,\
    \ 2*2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp78o9em5t.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp78o9em5t.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp78o9em5t.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp78o9em5t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp78o9em5t.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp78o9em5t.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp78o9em5t.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp78o9em5t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp78o9em5t.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp78o9em5t.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp78o9em5t.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp78o9em5t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp78o9em5t.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp78o9em5t.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78o9em5t.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create an array of the alphabet\n    alphabet = [\"a\" \"b\" \"c\" \"\
    d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"\
    q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"]\n    # create an empty\
    \ string to store the encrypted string\n    encrypted = \"\"\n    # loop through\
    \ the string\n    for i in s\n        # find the index of the letter in the alphabet\n\
    \        index = findfirst(alphabet, i)\n        # add two to the index\n    \
    \    index += 2\n        # if the index is greater than the length of the alphabet,\
    \ subtract the length of the alphabet\n        if index > length(alphabet)\n \
    \           index -= length(alphabet)\n        end\n        # add the letter to\
    \ the encrypted string\n        push!(encrypted, alphabet[index])\n    end\n \
    \   # return the encrypted string\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoki74et0.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching findfirst(::Matrix{String}, ::Char)\\n  Closest candidates are:\\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpoki74et0.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoki74et0.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoki74et0.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpoki74et0.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\n  Stacktrace:\\\
    n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpoki74et0.jl:23\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoki74et0.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoki74et0.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpoki74et0.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\\n  MethodError: no method matching findfirst(::Matrix{String}"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = collect(s)\n    for i in 1:length(s)\n        s[i] = Char(Int(s[i])\
    \ + 2*2)\n    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwk8iz7nx.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwk8iz7nx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwk8iz7nx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwk8iz7nx.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwk8iz7nx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwk8iz7nx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwk8iz7nx.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwk8iz7nx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwk8iz7nx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwk8iz7nx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s\n        if i == \"a\"\n            i = \"c\"\n        elseif\
    \ i == \"b\"\n            i = \"d\"\n        elseif i == \"c\"\n            i\
    \ = \"e\"\n        elseif i == \"d\"\n            i = \"f\"\n        elseif i\
    \ == \"e\"\n            i = \"g\"\n        elseif i == \"f\"\n            i =\
    \ \"h\"\n        elseif i == \"g\"\n            i = \"i\"\n        elseif i ==\
    \ \"h\"\n            i = \"j\"\n        elseif i == \"i\"\n            i = \"\
    k\"\n        elseif i == \"j\"\n            i = \"l\"\n        elseif i == \"\
    k\"\n            i = \"m\"\n        elseif i == \"l\"\n            i = \"n\"\n\
    \        elseif i == \"m\"\n            i = \"o\"\n        elseif i == \"n\"\n\
    \            i = \"p\"\n        elseif i == \"o\"\n            i = \"q\"\n   \
    \     elseif i == \"p\"\n            i = \"r\"\n        elseif i == \"q\"\n  \
    \          i = \"s\"\n        elseif i == \"r\"\n            i = \"t\"\n     \
    \   elseif i == \"s\"\n            i = \"u\"\n        elseif i == \"t\"\n    \
    \        i = \"v\"\n        elseif i == \"u\"\n            i = \"w\"\n       \
    \ elseif i == \"v\"\n            i = \"x\"\n        elseif i == \"w\"\n      \
    \      i = \"y\"\n        elseif i == \"x\"\n            i = \"z\"\n        elseif\
    \ i == \"y\"\n            i = \"a\"\n        elseif i == \"z\"\n            i\
    \ = \"b\"\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6c9z7zd5.jl:78\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6c9z7zd5.jl:78 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6c9z7zd5.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp6c9z7zd5.jl:79\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6c9z7zd5.jl:79 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6c9z7zd5.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp6c9z7zd5.jl:80\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6c9z7zd5.jl:80 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6c9z7zd5.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp6c9z7zd5.jl:81\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6c9z7zd5.jl:81 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6c9z7zd5.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp6c9z7zd5.jl:82\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6c9z7zd5.jl:75\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * chr(ord(i)\
    \ + 2)\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpos_s1rtf.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpos_s1rtf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpos_s1rtf.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpos_s1rtf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpos_s1rtf.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpos_s1rtf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpos_s1rtf.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpos_s1rtf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpos_s1rtf.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpos_s1rtf.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpos_s1rtf.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpos_s1rtf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpos_s1rtf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpos_s1rtf.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpos_s1rtf.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    #create an empty string to store the encrypted string\n    encrypted = \"\
    \"\n    #iterate through the string\n    for i in s\n        #if the letter is\
    \ in the dictionary\n        if i in keys(alphabet)\n            #add the encrypted\
    \ letter to the encrypted string\n            encrypted = encrypted * string(get(alphabet,i,0))\n\
    \        else\n            #add the character to the encrypted string\n      \
    \      encrypted = encrypted * i\n        end\n    end\n    #return the encrypted\
    \ string\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahyw90as.jl:39\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahyw90as.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahyw90as.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpahyw90as.jl:40\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahyw90as.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahyw90as.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpahyw90as.jl:41\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahyw90as.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahyw90as.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpahyw90as.jl:42\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahyw90as.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahyw90as.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpahyw90as.jl:43\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahyw90as.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary to map the letters\n    # create a new string to\
    \ store the encrypted string\n    # iterate through the string\n        # if the\
    \ letter is in the dictionary\n            # add the encrypted letter to the new\
    \ string\n        # else\n            # add the letter to the new string\n   \
    \ # return the new string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2gd727gv.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp2gd727gv.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gd727gv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gd727gv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2gd727gv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp2gd727gv.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gd727gv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gd727gv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a dictionary with the alphabet\n    alphabet = Dict(\"a\"=>\"\
    c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"\
    g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"\
    n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"\
    r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"\
    y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    #create an empty string\n\
    \    encrypted_string = \"\"\n    #iterate through the string\n    for i in s\n\
    \        #if the letter is in the dictionary, add the value to the string\n  \
    \      if i in keys(alphabet)\n            encrypted_string = encrypted_string\
    \ * alphabet[i]\n        #if the letter is not in the dictionary, add the letter\
    \ to the string\n        else\n            encrypted_string = encrypted_string\
    \ * i\n        end\n    end\n    #return the string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqh405gl4.jl:38\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh405gl4.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh405gl4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpqh405gl4.jl:39\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh405gl4.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh405gl4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpqh405gl4.jl:40\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh405gl4.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh405gl4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpqh405gl4.jl:41\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh405gl4.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh405gl4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpqh405gl4.jl:42\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh405gl4.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    new_string = \"\"\n    for i in s\n        if i\
    \ == \"z\"\n            new_string = new_string * \"b\"\n        elseif i == \"\
    y\"\n            new_string = new_string * \"a\"\n        else\n            new_string\
    \ = new_string * chr(Int(i) + 2)\n        end\n    end\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwi81xxw3.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpwi81xxw3.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwi81xxw3.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwi81xxw3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwi81xxw3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpwi81xxw3.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwi81xxw3.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwi81xxw3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwi81xxw3.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpwi81xxw3.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwi81xxw3.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwi81xxw3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwi81xxw3.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwi81xxw3.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s\n        if i == \"a\"\n            i = \"c\"\n        elseif\
    \ i == \"b\"\n            i = \"d\"\n        elseif i == \"c\"\n            i\
    \ = \"e\"\n        elseif i == \"d\"\n            i = \"f\"\n        elseif i\
    \ == \"e\"\n            i = \"g\"\n        elseif i == \"f\"\n            i =\
    \ \"h\"\n        elseif i == \"g\"\n            i = \"i\"\n        elseif i ==\
    \ \"h\"\n            i = \"j\"\n        elseif i == \"i\"\n            i = \"\
    k\"\n        elseif i == \"j\"\n            i = \"l\"\n        elseif i == \"\
    k\"\n            i = \"m\"\n        elseif i == \"l\"\n            i = \"n\"\n\
    \        elseif i == \"m\"\n            i = \"o\"\n        elseif i == \"n\"\n\
    \            i = \"p\"\n        elseif i == \"o\"\n            i = \"q\"\n   \
    \     elseif i == \"p\"\n            i = \"r\"\n        elseif i == \"q\"\n  \
    \          i = \"s\"\n        elseif i == \"r\"\n            i = \"t\"\n     \
    \   elseif i == \"s\"\n            i = \"u\"\n        elseif i == \"t\"\n    \
    \        i = \"v\"\n        elseif i == \"u\"\n            i = \"w\"\n       \
    \ elseif i == \"v\"\n            i = \"x\"\n        elseif i == \"w\"\n      \
    \      i = \"y\"\n        elseif i == \"x\"\n            i = \"z\"\n        elseif\
    \ i == \"y\"\n            i = \"a\"\n        elseif i == \"z\"\n            i\
    \ = \"b\"\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91_s13e1.jl:78\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91_s13e1.jl:78 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91_s13e1.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp91_s13e1.jl:79\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91_s13e1.jl:79 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91_s13e1.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp91_s13e1.jl:80\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91_s13e1.jl:80 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91_s13e1.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp91_s13e1.jl:81\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91_s13e1.jl:81 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91_s13e1.jl:77\ntest set: Test\
    \ Failed at /tmp/tmp91_s13e1.jl:82\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91_s13e1.jl:75\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary with the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary with the alphabet rotated\n    alphabet_rotated = Dict(\"\
    a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"\
    j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"\
    r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"\
    z\"=>2)\n    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # add the\
    \ encrypted letter to the encrypted string\n        encrypted_string = string(encrypted_string,get(alphabet_rotated,get(alphabet,i),0))\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgsavxv57.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ get(::Dict{String, Int64}, ::Char)\n  Closest candidates are:\n    get(::Dict{K,\
    \ V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n\
    \    get(!Matched::Base.ImmutableDict, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n\
    \    get(!Matched::IOContext, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpgsavxv57.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsavxv57.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgsavxv57.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpgsavxv57.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ get(::Dict{String, Int64}, ::Char)\n  Closest candidates are:\n    get(::Dict{K,\
    \ V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n\
    \    get(!Matched::Base.ImmutableDict, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n\
    \    get(!Matched::IOContext, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpgsavxv57.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsavxv57.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgsavxv57.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpgsavxv57.jl:37\n  Test threw"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgsavxv57.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet shifted by two\n    shifted_alphabet\
    \ = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"\
    =>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"\
    p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"\
    x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create a string to store the encrypted string\n\
    \    encrypted_string = \"\"\n    # iterate through the string\n    for i in s\n\
    \        # if the letter is in the alphabet\n        if i in keys(alphabet)\n\
    \            # add the shifted letter to the encrypted string\n            encrypted_string\
    \ = encrypted_string * get(shifted_alphabet,i,0)\n        end\n    end\n    #\
    \ return the encrypted string\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwzoni5lo.jl:38\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwzoni5lo.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwzoni5lo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwzoni5lo.jl:39\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"\" == \"ewhjklnop\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwzoni5lo.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwzoni5lo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwzoni5lo.jl:40\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwzoni5lo.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwzoni5lo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwzoni5lo.jl:41\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwzoni5lo.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwzoni5lo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpwzoni5lo.jl:42\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwzoni5lo.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary with the alphabet as keys and the encrypted alphabet\
    \ as values\n    alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"\
    d\"=>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"\
    k\", \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"\
    o\"=>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"\
    v\", \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"\
    z\"=>\"b\")\n    # create an empty string\n    encrypted_string = \"\"\n    #\
    \ iterate through the string\n    for i in s\n        # add the encrypted letter\
    \ to the empty string\n        encrypted_string = encrypted_string * alphabet[i]\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwk63kjsa.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  KeyError: key 'h' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpwk63kjsa.jl:23\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwk63kjsa.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwk63kjsa.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwk63kjsa.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  KeyError: key 'a' not found\n \
    \ Stacktrace:\n   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base\
    \ ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpwk63kjsa.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwk63kjsa.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwk63kjsa.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwk63kjsa.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  KeyError: key 'g' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpwk63kjsa.jl:23\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwk63kjsa.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwk63kjsa.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwk63kjsa.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwk63kjsa.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s\n        if i == \"a\"\n            i = \"c\"\n        elseif\
    \ i == \"b\"\n            i = \"d\"\n        elseif i == \"c\"\n            i\
    \ = \"e\"\n        elseif i == \"d\"\n            i = \"f\"\n        elseif i\
    \ == \"e\"\n            i = \"g\"\n        elseif i == \"f\"\n            i =\
    \ \"h\"\n        elseif i == \"g\"\n            i = \"i\"\n        elseif i ==\
    \ \"h\"\n            i = \"j\"\n        elseif i == \"i\"\n            i = \"\
    k\"\n        elseif i == \"j\"\n            i = \"l\"\n        elseif i == \"\
    k\"\n            i = \"m\"\n        elseif i == \"l\"\n            i = \"n\"\n\
    \        elseif i == \"m\"\n            i = \"o\"\n        elseif i == \"n\"\n\
    \            i = \"p\"\n        elseif i == \"o\"\n            i = \"q\"\n   \
    \     elseif i == \"p\"\n            i = \"r\"\n        elseif i == \"q\"\n  \
    \          i = \"s\"\n        elseif i == \"r\"\n            i = \"t\"\n     \
    \   elseif i == \"s\"\n            i = \"u\"\n        elseif i == \"t\"\n    \
    \        i = \"v\"\n        elseif i == \"u\"\n            i = \"w\"\n       \
    \ elseif i == \"v\"\n            i = \"x\"\n        elseif i == \"w\"\n      \
    \      i = \"y\"\n        elseif i == \"x\"\n            i = \"z\"\n        elseif\
    \ i == \"y\"\n            i = \"a\"\n        elseif i == \"z\"\n            i\
    \ = \"b\"\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp0f1iypw.jl:78\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0f1iypw.jl:78 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0f1iypw.jl:77\ntest set: Test\
    \ Failed at /tmp/tmpp0f1iypw.jl:79\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0f1iypw.jl:79 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0f1iypw.jl:77\ntest set: Test\
    \ Failed at /tmp/tmpp0f1iypw.jl:80\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0f1iypw.jl:80 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0f1iypw.jl:77\ntest set: Test\
    \ Failed at /tmp/tmpp0f1iypw.jl:81\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0f1iypw.jl:81 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0f1iypw.jl:77\ntest set: Test\
    \ Failed at /tmp/tmpp0f1iypw.jl:82\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0f1iypw.jl:75\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_kkv6a90.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_kkv6a90.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kkv6a90.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kkv6a90.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_kkv6a90.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_kkv6a90.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kkv6a90.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kkv6a90.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_kkv6a90.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_kkv6a90.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_kkv6a90.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_kkv6a90.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_kkv6a90.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_kkv6a90.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = uppercase(s)\n    s = replace(s, \"A\" => \"C\")\n    s = replace(s,\
    \ \"B\" => \"D\")\n    s = replace(s, \"C\" => \"E\")\n    s = replace(s, \"D\"\
    \ => \"F\")\n    s = replace(s, \"E\" => \"G\")\n    s = replace(s, \"F\" => \"\
    H\")\n    s = replace(s, \"G\" => \"I\")\n    s = replace(s, \"H\" => \"J\")\n\
    \    s = replace(s, \"I\" => \"K\")\n    s = replace(s, \"J\" => \"L\")\n    s\
    \ = replace(s, \"K\" => \"M\")\n    s = replace(s, \"L\" => \"N\")\n    s = replace(s,\
    \ \"M\" => \"O\")\n    s = replace(s, \"N\" => \"P\")\n    s = replace(s, \"O\"\
    \ => \"Q\")\n    s = replace(s, \"P\" => \"R\")\n    s = replace(s, \"Q\" => \"\
    S\")\n    s = replace(s, \"R\" => \"T\")\n    s = replace(s, \"S\" => \"U\")\n\
    \    s = replace(s, \"T\" => \"V\")\n    s = replace(s, \"U\" => \"W\")\n    s\
    \ = replace(s, \"V\" => \"X\")\n    s = replace(s, \"W\" => \"Y\")\n    s = replace(s,\
    \ \"X\" => \"Z\")\n    s = replace(s, \"Y\" => \"A\")\n    s = replace(s, \"Z\"\
    \ => \"B\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp37j6_1nl.jl:50\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"BA\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37j6_1nl.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37j6_1nl.jl:49\ntest set: Test\
    \ Failed at /tmp/tmp37j6_1nl.jl:51\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"AABBABBAB\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37j6_1nl.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37j6_1nl.jl:49\ntest set: Test\
    \ Failed at /tmp/tmp37j6_1nl.jl:52\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"AB\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37j6_1nl.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37j6_1nl.jl:49\ntest set: Test\
    \ Failed at /tmp/tmp37j6_1nl.jl:53\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"AB\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp37j6_1nl.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp37j6_1nl.jl:49\ntest set: Test\
    \ Failed at /tmp/tmp37j6_1nl.jl:54\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"BAAABAAABAAAA\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37j6_1nl.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"a\"\n           \
    \ new_string = new_string * \"c\"\n        elseif i == \"b\"\n            new_string\
    \ = new_string * \"d\"\n        elseif i == \"c\"\n            new_string = new_string\
    \ * \"e\"\n        elseif i == \"d\"\n            new_string = new_string * \"\
    f\"\n        elseif i == \"e\"\n            new_string = new_string * \"g\"\n\
    \        elseif i == \"f\"\n            new_string = new_string * \"h\"\n    \
    \    elseif i == \"g\"\n            new_string = new_string * \"i\"\n        elseif\
    \ i == \"h\"\n            new_string = new_string * \"j\"\n        elseif i ==\
    \ \"i\"\n            new_string = new_string * \"k\"\n        elseif i == \"j\"\
    \n            new_string = new_string * \"l\"\n        elseif i == \"k\"\n   \
    \         new_string = new_string * \"m\"\n        elseif i == \"l\"\n       \
    \     new_string = new_string * \"n\"\n        elseif i == \"m\"\n           \
    \ new_string = new_string * \"o\"\n        elseif i == \"n\"\n            new_string\
    \ = new_string * \"p\"\n        elseif i == \"o\"\n            new_string = new_string\
    \ * \"q\"\n        elseif i == \"p\"\n            new_string = new_string * \"\
    r\"\n        elseif i == \"q\"\n            new_string = new_string * \"s\"\n\
    \        elseif i == \"r\"\n            new_string = new_string * \"t\"\n    \
    \    elseif i == \"s\"\n            new_string = new_string * \"u\"\n        elseif\
    \ i == \"t\"\n            new_string = new_string * \"v\"\n        elseif i ==\
    \ \"u\"\n            new_string = new_string * \"w\"\n        elseif i == \"v\"\
    \n            new_string = new_string * \"x\"\n        elseif i == \"w\"\n   \
    \         new_string = new\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbo8x4hkt.jl:1\nin expression starting at /tmp/tmpbo8x4hkt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7s2rylxi.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7s2rylxi.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7s2rylxi.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7s2rylxi.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp7s2rylxi.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7s2rylxi.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7s2rylxi.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7s2rylxi.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp7s2rylxi.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7s2rylxi.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7s2rylxi.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7s2rylxi.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp7s2rylxi.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7s2rylxi.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    b = \"cdefghijklmnopqrstuvwxyzab\"\
    \n    c = \"\"\n    for i in s\n        c = c * b[a .== i][1]\n    end\n    return\
    \ c\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw_galyek.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 26-codeunit\
    \ String at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpw_galyek.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw_galyek.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw_galyek.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpw_galyek.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 26-codeunit String at index [false]\n  Stacktrace:\n   [1] checkbounds\n   \
    \  @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::String, i::Bool)\n \
    \    @ Base ./strings/basic.jl:185\n   [3] encrypt(s::String)\n     @ Main /tmp/tmpw_galyek.jl:20\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw_galyek.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw_galyek.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpw_galyek.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 26-codeunit String\
    \ at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpw_galyek.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw_galyek.jl:31 [inlined]\n\
    \   [6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_galyek.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = Char(Int(s_array[i]) + 2*2)\n    end\n    return join(s_array)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpff_x_kkx.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpff_x_kkx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpff_x_kkx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpff_x_kkx.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpff_x_kkx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpff_x_kkx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpff_x_kkx.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpff_x_kkx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpff_x_kkx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpff_x_kkx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    s = lowercase(s)\n    encrypted\
    \ = \"\"\n    for i in s\n        if i == \" \"\n            encrypted = encrypted\
    \ * \" \"\n        else\n            encrypted = encrypted * alphabet[(findfirst(alphabet,\
    \ i) + 2) % 26 + 1]\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp06gj1egs.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp06gj1egs.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp06gj1egs.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp06gj1egs.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp06gj1egs.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp06gj1egs.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp06gj1egs.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp06gj1egs.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp06gj1egs.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06gj1egs.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,\
    \ 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu7w5flyz.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu7w5flyz.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu7w5flyz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu7w5flyz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpu7w5flyz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu7w5flyz.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu7w5flyz.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu7w5flyz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpu7w5flyz.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpu7w5flyz.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu7w5flyz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu7w5flyz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpu7w5flyz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpu7w5flyz.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu7w5flyz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet rotated by two\n    alphabet_rotated\
    \ = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"\
    =>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"\
    p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"\
    x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # iterate through the string\n    for\
    \ i in s\n        # if the letter is not in the dictionary, add it to the encrypted\
    \ string\n        if !haskey(alphabet,i)\n            encrypted_string = encrypted_string\
    \ * i\n        # if the letter is in the dictionary, add the rotated letter to\
    \ the encrypted string\n        else\n            encrypted_string = encrypted_string\
    \ * get(alphabet_rotated,i,0)\n        end\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaljre1pr.jl:40\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaljre1pr.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaljre1pr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaljre1pr.jl:41\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaljre1pr.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaljre1pr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaljre1pr.jl:42\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaljre1pr.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaljre1pr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaljre1pr.jl:43\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaljre1pr.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaljre1pr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaljre1pr.jl:44\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaljre1pr.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create an array of the alphabet\n    alphabet = [\"a\" \"b\" \"c\" \"\
    d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"\
    q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"]\n    # create an empty\
    \ string to store the encrypted string\n    encrypted_string = \"\"\n    # for\
    \ each character in the string\n    for c in s\n        # find the index of the\
    \ character in the alphabet\n        index = findfirst(alphabet, c)\n        #\
    \ add two to the index\n        index += 2\n        # if the index is greater\
    \ than the length of the alphabet\n        if index > length(alphabet)\n     \
    \       # subtract the length of the alphabet from the index\n            index\
    \ -= length(alphabet)\n        end\n        # add the character at the new index\
    \ to the encrypted string\n        push!(encrypted_string, alphabet[index])\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz5nqj96r.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpz5nqj96r.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz5nqj96r.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz5nqj96r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz5nqj96r.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpz5nqj96r.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz5nqj96r.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz5nqj96r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz5nqj96r.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Matrix{String},\
    \ ::Char)\n  Closest candidates are:\n    fin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz5nqj96r.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        encrypted_string = encrypted_string * alphabet[(findfirst(alphabet,\
    \ i) + 2) % 26]\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpswhw79ba.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpswhw79ba.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpswhw79ba.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpswhw79ba.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpswhw79ba.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpswhw79ba.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpswhw79ba.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpswhw79ba.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpswhw79ba.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswhw79ba.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        encrypted_string = encrypted_string\
    \ * string(shift(i, 2))\n    end\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1lzow_tq.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1lzow_tq.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1lzow_tq.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1lzow_tq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1lzow_tq.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1lzow_tq.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1lzow_tq.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1lzow_tq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1lzow_tq.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1lzow_tq.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1lzow_tq.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1lzow_tq.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1lzow_tq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1lzow_tq.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1lzow_tq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        elseif s_array[i] == \" \"\n       \
    \     s_array[i] = \" \"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0kf5qcqa.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kf5qcqa.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kf5qcqa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0kf5qcqa.jl:36\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kf5qcqa.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kf5qcqa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0kf5qcqa.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kf5qcqa.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kf5qcqa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0kf5qcqa.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kf5qcqa.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kf5qcqa.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0kf5qcqa.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kf5qcqa.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i == \"a\"\n     \
    \       encrypted_string = encrypted_string * \"c\"\n        elseif i == \"b\"\
    \n            encrypted_string = encrypted_string * \"d\"\n        elseif i ==\
    \ \"c\"\n            encrypted_string = encrypted_string * \"e\"\n        elseif\
    \ i == \"d\"\n            encrypted_string = encrypted_string * \"f\"\n      \
    \  elseif i == \"e\"\n            encrypted_string = encrypted_string * \"g\"\n\
    \        elseif i == \"f\"\n            encrypted_string = encrypted_string *\
    \ \"h\"\n        elseif i == \"g\"\n            encrypted_string = encrypted_string\
    \ * \"i\"\n        elseif i == \"h\"\n            encrypted_string = encrypted_string\
    \ * \"j\"\n        elseif i == \"i\"\n            encrypted_string = encrypted_string\
    \ * \"k\"\n        elseif i == \"j\"\n            encrypted_string = encrypted_string\
    \ * \"l\"\n        elseif i == \"k\"\n            encrypted_string = encrypted_string\
    \ * \"m\"\n        elseif i == \"l\"\n            encrypted_string = encrypted_string\
    \ * \"n\"\n        elseif i == \"m\"\n            encrypted_string = encrypted_string\
    \ * \"o\"\n        elseif i == \"n\"\n            encrypted_string = encrypted_string\
    \ * \"p\"\n        elseif i == \"o\"\n            encrypted_string = encrypted_string\
    \ * \"q\"\n        elseif i == \"p\"\n            encrypted_string = encrypted_string\
    \ * \"r\"\n        elseif i == \"q\"\n            encrypted_string = encrypted_string\
    \ * \"s\"\n        elseif i == \"r\"\n            encrypted_string = encrypted_string\
    \ * \"t\"\n        elseif i == \"s\"\n            encrypted_string = encrypted_string\
    \ * \"u\"\n        elseif i == \"t\"\n            encrypted_string = encrypted_string\
    \ * \"v\"\n        elseif i == \"u\"\n            encrypted_string = encrypted_string\
    \ * \"w\"\n        elseif i == \"v\"\n            encrypted_string = encrypted_string\
    \ * \"x\"\n        elseif i == \"w\"\n            encrypted_string = encrypted\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9k8yjjx5.jl:1\nin expression starting at /tmp/tmp9k8yjjx5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = collect(s)\n    for i in 1:length(s)\n        if s[i] == \"a\"\n \
    \           s[i] = \"c\"\n        elseif s[i] == \"b\"\n            s[i] = \"\
    d\"\n        elseif s[i] == \"c\"\n            s[i] = \"e\"\n        elseif s[i]\
    \ == \"d\"\n            s[i] = \"f\"\n        elseif s[i] == \"e\"\n         \
    \   s[i] = \"g\"\n        elseif s[i] == \"f\"\n            s[i] = \"h\"\n   \
    \     elseif s[i] == \"g\"\n            s[i] = \"i\"\n        elseif s[i] == \"\
    h\"\n            s[i] = \"j\"\n        elseif s[i] == \"i\"\n            s[i]\
    \ = \"k\"\n        elseif s[i] == \"j\"\n            s[i] = \"l\"\n        elseif\
    \ s[i] == \"k\"\n            s[i] = \"m\"\n        elseif s[i] == \"l\"\n    \
    \        s[i] = \"n\"\n        elseif s[i] == \"m\"\n            s[i] = \"o\"\n\
    \        elseif s[i] == \"n\"\n            s[i] = \"p\"\n        elseif s[i] ==\
    \ \"o\"\n            s[i] = \"q\"\n        elseif s[i] == \"p\"\n            s[i]\
    \ = \"r\"\n        elseif s[i] == \"q\"\n            s[i] = \"s\"\n        elseif\
    \ s[i] == \"r\"\n            s[i] = \"t\"\n        elseif s[i] == \"s\"\n    \
    \        s[i] = \"u\"\n        elseif s[i] == \"t\"\n            s[i] = \"v\"\n\
    \        elseif s[i] == \"u\"\n            s[i] = \"w\"\n        elseif s[i] ==\
    \ \"v\"\n            s[i] = \"x\"\n        elseif s[i] == \"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy77b8zyi.jl:68\nin expression starting at\
    \ /tmp/tmpy77b8zyi.jl:68\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create an array of the alphabet\n    alphabet = [\"a\" \"b\" \"c\" \"\
    d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"\
    q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"]\n    # Create an empty\
    \ string to store the encrypted string\n    encrypted_string = \"\"\n    # Loop\
    \ through each character in the string\n    for c in s\n        # Find the index\
    \ of the character in the alphabet\n        index = findfirst(alphabet, c)\n \
    \       # Add two to the index\n        index += 2\n        # If the index is\
    \ greater than 26, subtract 26\n        if index > 26\n            index -= 26\n\
    \        end\n        # Add the encrypted character to the encrypted string\n\
    \        push!(encrypted_string, alphabet[index])\n    end\n    # Return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpig02kaz0.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpig02kaz0.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig02kaz0.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig02kaz0.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpig02kaz0.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Matrix{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpig02kaz0.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpig02kaz0.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpig02kaz0.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpig02kaz0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Matrix{String},\
    \ ::Char)\n  Closest candidates are:\n    fin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpig02kaz0.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfs8q14mh.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfs8q14mh.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfs8q14mh.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfs8q14mh.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpfs8q14mh.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfs8q14mh.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfs8q14mh.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfs8q14mh.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpfs8q14mh.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfs8q14mh.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfs8q14mh.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfs8q14mh.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpfs8q14mh.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfs8q14mh.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(rotate(i,2))\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjw7iw7u8.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjw7iw7u8.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjw7iw7u8.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjw7iw7u8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjw7iw7u8.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjw7iw7u8.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjw7iw7u8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjw7iw7u8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjw7iw7u8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjw7iw7u8.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjw7iw7u8.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjw7iw7u8.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjw7iw7u8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjw7iw7u8.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjw7iw7u8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = s.replace(\"a\", \"c\")\n    s = s.replace(\"\
    b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n    s = s.replace(\"d\", \"f\")\n\
    \    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"f\", \"h\")\n    s = s.replace(\"\
    g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n    s = s.replace(\"i\", \"k\")\n\
    \    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"k\", \"m\")\n    s = s.replace(\"\
    l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n    s = s.replace(\"n\", \"p\")\n\
    \    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"p\", \"r\")\n    s = s.replace(\"\
    q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n    s = s.replace(\"s\", \"u\")\n\
    \    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"u\", \"w\")\n    s = s.replace(\"\
    v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n    s = s.replace(\"x\", \"z\")\n\
    \    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"z\", \"b\")\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqv855zjq.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqv855zjq.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv855zjq.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv855zjq.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpqv855zjq.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqv855zjq.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv855zjq.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv855zjq.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpqv855zjq.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqv855zjq.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv855zjq.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv855zjq.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpqv855zjq.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqv855zjq.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i == \"z\"\n     \
    \       encrypted_string = encrypted_string * \"b\"\n        elseif i == \"y\"\
    \n            encrypted_string = encrypted_string * \"a\"\n        else\n    \
    \        encrypted_string = encrypted_string * string(char(int(i) + 2))\n    \
    \    end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp_wdlfvx.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_wdlfvx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_wdlfvx.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_wdlfvx.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpp_wdlfvx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_wdlfvx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_wdlfvx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_wdlfvx.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpp_wdlfvx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_wdlfvx.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_wdlfvx.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_wdlfvx.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpp_wdlfvx.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_wdlfvx.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_wdlfvx.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuk5gmfke.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpuk5gmfke.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpuk5gmfke.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpuk5gmfke.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpuk5gmfke.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpuk5gmfke.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpuk5gmfke.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpuk5gmfke.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpuk5gmfke.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpuk5gmfke.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpuk5gmfke.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpuk5gmfke.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpuk5gmfke.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuk5gmfke.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = Char(Int(s_array[i]) + 2*2)\n    end\n    return join(s_array)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4crtsuhj.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4crtsuhj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4crtsuhj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4crtsuhj.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4crtsuhj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4crtsuhj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4crtsuhj.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4crtsuhj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4crtsuhj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4crtsuhj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_list = []\n    for i in s\n        push!(s_list, i)\n    end\n    for\
    \ i in 1:length(s_list)\n        if s_list[i] == \"a\"\n            s_list[i]\
    \ = \"c\"\n        elseif s_list[i] == \"b\"\n            s_list[i] = \"d\"\n\
    \        elseif s_list[i] == \"c\"\n            s_list[i] = \"e\"\n        elseif\
    \ s_list[i] == \"d\"\n            s_list[i] = \"f\"\n        elseif s_list[i]\
    \ == \"e\"\n            s_list[i] = \"g\"\n        elseif s_list[i] == \"f\"\n\
    \            s_list[i] = \"h\"\n        elseif s_list[i] == \"g\"\n          \
    \  s_list[i] = \"i\"\n        elseif s_list[i] == \"h\"\n            s_list[i]\
    \ = \"j\"\n        elseif s_list[i] == \"i\"\n            s_list[i] = \"k\"\n\
    \        elseif s_list[i] == \"j\"\n            s_list[i] = \"l\"\n        elseif\
    \ s_list[i] == \"k\"\n            s_list[i] = \"m\"\n        elseif s_list[i]\
    \ == \"l\"\n            s_list[i] = \"n\"\n        elseif s_list[i] == \"m\"\n\
    \            s_list[i] = \"o\"\n        elseif s_list[i] == \"n\"\n          \
    \  s_list[i] = \"p\"\n        elseif s_list[i] == \"o\"\n            s_list[i]\
    \ = \"q\"\n        elseif s_list[i] == \"p\"\n            s_list[i] = \"r\"\n\
    \        elseif s_list[i] == \"q\"\n            s_list[i] = \"s\"\n        elseif\
    \ s_list[i] == \"r\"\n            s_list[i] = \"t\"\n        elseif s\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxov_vdpg.jl:1\nin expression starting at /tmp/tmpxov_vdpg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(Char(Int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphpdecy0y.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpdecy0y.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpdecy0y.jl:32\ntest set: Test\
    \ Failed at /tmp/tmphpdecy0y.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpdecy0y.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpdecy0y.jl:32\ntest set: Test\
    \ Failed at /tmp/tmphpdecy0y.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpdecy0y.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpdecy0y.jl:32\ntest set: Test\
    \ Failed at /tmp/tmphpdecy0y.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpdecy0y.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpdecy0y.jl:32\ntest set: Test\
    \ Failed at /tmp/tmphpdecy0y.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpdecy0y.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp17x51xdp.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp17x51xdp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp17x51xdp.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp17x51xdp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp17x51xdp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp17x51xdp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp17x51xdp.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp17x51xdp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp17x51xdp.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp17x51xdp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp17x51xdp.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp17x51xdp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp17x51xdp.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17x51xdp.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    s = lowercase(s)\n    s\
    \ = replace(s, r\" \", \"\")\n    new_s = \"\"\n    for i in s\n        new_s\
    \ = new_s * new_alphabet[findfirst(alphabet, i)]\n    end\n    return new_s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8de87mhd.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8de87mhd.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8de87mhd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8de87mhd.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8de87mhd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8de87mhd.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8de87mhd.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8de87mhd.jl:30\ntest set:\
    \ Error During Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8de87mhd.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a new string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string\n    for i in s\n        # if the character\
    \ is a letter\n        if i in string.letters\n            # if the letter is\
    \ in the first half of the alphabet\n            if i in string.lowercase[1:13]\n\
    \                # add two to the index of the letter and append it to the encrypted\
    \ string\n                encrypted_string = encrypted_string * string.lowercase[string.lowercase.index(i)\
    \ + 2]\n            # if the letter is in the second half of the alphabet\n  \
    \          else\n                # add two to the index of the letter and append\
    \ it to the encrypted string\n                encrypted_string = encrypted_string\
    \ * string.lowercase[string.lowercase.index(i) + 2 - 26]\n            end\n  \
    \      # if the character is not a letter\n        else\n            # append\
    \ the character to the encrypted string\n            encrypted_string = encrypted_string\
    \ * i\n        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpauz_3oye.jl:45\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type #string has no field letters\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpauz_3oye.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpauz_3oye.jl:45 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpauz_3oye.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpauz_3oye.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type #string has no field letters\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpauz_3oye.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpauz_3oye.jl:46 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpauz_3oye.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpauz_3oye.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type #string has no field letters\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpauz_3oye.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpauz_3oye.jl:47 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpauz_3oye.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpauz_3oye.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type #string has no field letters\n  Stacktrace:\n\
    \   [1] getprope"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpauz_3oye.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,\
    \ 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps1cog6mw.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmps1cog6mw.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps1cog6mw.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1cog6mw.jl:26\ntest set:\
    \ Error During Test at /tmp/tmps1cog6mw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmps1cog6mw.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps1cog6mw.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1cog6mw.jl:26\ntest set:\
    \ Error During Test at /tmp/tmps1cog6mw.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmps1cog6mw.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps1cog6mw.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1cog6mw.jl:26\ntest set:\
    \ Error During Test at /tmp/tmps1cog6mw.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmps1cog6mw.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1cog6mw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(Char(Int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4x84inuu.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x84inuu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x84inuu.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4x84inuu.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x84inuu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x84inuu.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4x84inuu.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x84inuu.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x84inuu.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4x84inuu.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x84inuu.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x84inuu.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4x84inuu.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4x84inuu.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = \"\"\n    for i in s\n        if i == \"z\"\n            s_new\
    \ = s_new * \"b\"\n        elseif i == \"y\"\n            s_new = s_new * \"a\"\
    \n        else\n            s_new = s_new * chr(ord(i) + 2)\n        end\n   \
    \ end\n    return s_new\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp874kk6fz.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp874kk6fz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp874kk6fz.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp874kk6fz.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp874kk6fz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp874kk6fz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp874kk6fz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp874kk6fz.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp874kk6fz.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp874kk6fz.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp874kk6fz.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp874kk6fz.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp874kk6fz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp874kk6fz.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp874kk6fz.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    new_s = \"\"\n    for i\
    \ in s\n        new_s = new_s * new_alphabet[findfirst(alphabet, i)]\n    end\n\
    \    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6_pwi9re.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_pwi9re.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6_pwi9re.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_pwi9re.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6_pwi9re.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6_pwi9re.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6_pwi9re.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6_pwi9re.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6_pwi9re.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6_pwi9re.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = chr(ord(s_array[i])+2*2)\n    end\n    return join(s_array)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg1gfjv3i.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg1gfjv3i.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg1gfjv3i.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg1gfjv3i.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg1gfjv3i.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg1gfjv3i.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg1gfjv3i.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg1gfjv3i.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg1gfjv3i.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg1gfjv3i.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg1gfjv3i.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg1gfjv3i.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg1gfjv3i.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg1gfjv3i.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1gfjv3i.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    s_array_new = []\n    for i in s_array\n   \
    \     if i == \"z\"\n            push!(s_array_new, \"b\")\n        elseif i ==\
    \ \"y\"\n            push!(s_array_new, \"a\")\n        else\n            push!(s_array_new,\
    \ chr(Int(i)+2))\n        end\n    end\n    return join(s_array_new)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4sgym33d.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4sgym33d.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4sgym33d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4sgym33d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4sgym33d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4sgym33d.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4sgym33d.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4sgym33d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4sgym33d.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4sgym33d.jl:24\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4sgym33d.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4sgym33d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4sgym33d.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4sgym33d.jl:24\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sgym33d.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(Char(Int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppr034yfj.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr034yfj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr034yfj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppr034yfj.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr034yfj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr034yfj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppr034yfj.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr034yfj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr034yfj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppr034yfj.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr034yfj.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr034yfj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmppr034yfj.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppr034yfj.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a variable to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #iterate through the string\n    for c in s\n        #if the character\
    \ is a space, add a space to the encrypted string\n        if c == \" \"\n   \
    \         push!(encrypted_string, \" \")\n        #if the character is a letter,\
    \ add the encrypted letter to the encrypted string\n        else\n           \
    \ push!(encrypted_string, encrypt_letter(c))\n        end\n    end\n    #return\
    \ the encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxq2dk9h3.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: encrypt_letter not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxq2dk9h3.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxq2dk9h3.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxq2dk9h3.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxq2dk9h3.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: encrypt_letter not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxq2dk9h3.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxq2dk9h3.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxq2dk9h3.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxq2dk9h3.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: encrypt_letter not defined\n \
    \ Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxq2dk9h3.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxq2dk9h3.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxq2dk9h3.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpxq2dk9h3.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: encrypt_letter not defined\n \
    \ Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxq2dk9h3.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq2dk9h3.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = chr(ord(s_array[i]) + 2*2)\n    end\n    return join(s_array)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpic59ywzt.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpic59ywzt.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpic59ywzt.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpic59ywzt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpic59ywzt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpic59ywzt.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpic59ywzt.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpic59ywzt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpic59ywzt.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpic59ywzt.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpic59ywzt.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpic59ywzt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpic59ywzt.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpic59ywzt.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpic59ywzt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s1 = \"\"\n    for i in s\n        if i == \"z\"\n            s1 = s1\
    \ * \"b\"\n        elseif i == \"y\"\n            s1 = s1 * \"a\"\n        else\n\
    \            s1 = s1 * chr(ord(i) + 2)\n        end\n    end\n    return s1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8y7ividf.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8y7ividf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8y7ividf.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8y7ividf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8y7ividf.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8y7ividf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8y7ividf.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8y7ividf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8y7ividf.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp8y7ividf.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8y7ividf.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8y7ividf.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8y7ividf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp8y7ividf.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8y7ividf.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #s = \"hi\"\n    #s = \"asdfghjkl\"\n    #s = \"gf\"\n    #s = \"et\"\n\
    \    #s = \"z\"\n    #s = \"ab\"\n    #s = \"yz\"\n    #s = \"abc\"\n    #s =\
    \ \"xyz\"\n    #s = \"abcd\"\n    #s = \"wxyz\"\n    #s = \"abcde\"\n    #s =\
    \ \"vwxyz\"\n    #s = \"abcdef\"\n    #s = \"uvwxyz\"\n    #s = \"abcdefg\"\n\
    \    #s = \"tuvwxyz\"\n    #s = \"abcdefgh\"\n    #s = \"stuvwxyz\"\n    #s =\
    \ \"abcdefghi\"\n    #s = \"rstuvwxyz\"\n    #s = \"abcdefghij\"\n    #s = \"\
    qrstuvwxyz\"\n    #s = \"abcdefghijk\"\n    #s = \"pqrstuvwxyz\"\n    #s = \"\
    abcdefghijkl\"\n    #s = \"opqrstuvwxyz\"\n    #s = \"abcdefghijklm\"\n    #s\
    \ = \"nopqrstuvwxyz\"\n    #s = \"abcdefghijklmn\"\n    #s = \"mnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmno\"\n    #s = \"lmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnop\"\
    \n    #s = \"klmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopq\"\n    #s = \"jklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqr\"\n    #s = \"ijklmnopqrstuvwxyz\"\n    #s = \"\
    abcdefghijklmnopqrs\"\n    #s = \"hijklmnopqrstuvwxyz\"\n    #s = \"abc\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo3clerkf.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo3clerkf.jl:1\n\
    in expression starting at /tmp/tmpo3clerkf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"a\"\n           \
    \ new_string = new_string * \"c\"\n        elseif i == \"b\"\n            new_string\
    \ = new_string * \"d\"\n        elseif i == \"c\"\n            new_string = new_string\
    \ * \"e\"\n        elseif i == \"d\"\n            new_string = new_string * \"\
    f\"\n        elseif i == \"e\"\n            new_string = new_string * \"g\"\n\
    \        elseif i == \"f\"\n            new_string = new_string * \"h\"\n    \
    \    elseif i == \"g\"\n            new_string = new_string * \"i\"\n        elseif\
    \ i == \"h\"\n            new_string = new_string * \"j\"\n        elseif i ==\
    \ \"i\"\n            new_string = new_string * \"k\"\n        elseif i == \"j\"\
    \n            new_string = new_string * \"l\"\n        elseif i == \"k\"\n   \
    \         new_string = new_string * \"m\"\n        elseif i == \"l\"\n       \
    \     new_string = new_string * \"n\"\n        elseif i == \"m\"\n           \
    \ new_string = new_string * \"o\"\n        elseif i == \"n\"\n            new_string\
    \ = new_string * \"p\"\n        elseif i == \"o\"\n            new_string = new_string\
    \ * \"q\"\n        elseif i == \"p\"\n            new_string = new_string * \"\
    r\"\n        elseif i == \"q\"\n            new_string = new_string * \"s\"\n\
    \        elseif i == \"r\"\n            new_string = new_string * \"t\"\n    \
    \    elseif i == \"s\"\n            new_string = new_string * \"u\"\n        elseif\
    \ i == \"t\"\n            new_string = new_string * \"v\"\n        elseif i ==\
    \ \"u\"\n            new_string = new_string * \"w\"\n        elseif i == \"v\"\
    \n            new_string = new_string * \"x\"\n        elseif i == \"w\"\n   \
    \         new_string = new\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjkg0qt46.jl:1\nin expression starting at /tmp/tmpjkg0qt46.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = \"\"\n    for i in s\n        if i == \"z\"\n            s2 = s2\
    \ * \"b\"\n        elseif i == \"y\"\n            s2 = s2 * \"a\"\n        else\n\
    \            s2 = s2 * string(Char(Int(i) + 2))\n        end\n    end\n    return\
    \ s2\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5tfy1pn7.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tfy1pn7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tfy1pn7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5tfy1pn7.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tfy1pn7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tfy1pn7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5tfy1pn7.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tfy1pn7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tfy1pn7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5tfy1pn7.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tfy1pn7.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tfy1pn7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5tfy1pn7.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tfy1pn7.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            push!(encrypted, \" \")\n       \
    \ else\n            push!(encrypted, alphabet[find(alphabet, i)[1] + 2])\n   \
    \     end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg6f40tju.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg6f40tju.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6f40tju.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6f40tju.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpg6f40tju.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg6f40tju.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6f40tju.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6f40tju.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpg6f40tju.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: find not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg6f40tju.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6f40tju.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6f40tju.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpg6f40tju.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: find not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg6f40tju.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6f40tju.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet rotated by two\n    alphabet_rotated\
    \ = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"\
    =>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"\
    p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"\
    x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # iterate through the string\n    for\
    \ i in s\n        # if the letter is in the dictionary, add the rotated letter\
    \ to the encrypted string\n        if i in keys(alphabet)\n            encrypted_string\
    \ = string(encrypted_string, get(alphabet_rotated, i, 0))\n        # if the letter\
    \ is not in the dictionary, add the letter to the encrypted string\n        else\n\
    \            encrypted_string = string(encrypted_string, i)\n        end\n   \
    \ end\n    # return the encrypted string\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyeb56hoh.jl:40\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyeb56hoh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyeb56hoh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyeb56hoh.jl:41\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyeb56hoh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyeb56hoh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyeb56hoh.jl:42\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyeb56hoh.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyeb56hoh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyeb56hoh.jl:43\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyeb56hoh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyeb56hoh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyeb56hoh.jl:44\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyeb56hoh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            index = findfirst(alphabet, i)\n\
    \            encrypted = encrypted * alphabet[index+2]\n        else\n       \
    \     encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpouzij76_.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpouzij76_.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpouzij76_.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpouzij76_.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpouzij76_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpouzij76_.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpouzij76_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpouzij76_.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpouzij76_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpouzij76_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = [string(i) for i in s]\n    for i in 1:length(s)\n        if s[i]\
    \ == \"z\"\n            s[i] = \"b\"\n        elseif s[i] == \"y\"\n         \
    \   s[i] = \"a\"\n        else\n            s[i] = string(Char(Int(s[i])+2))\n\
    \        end\n    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8p5kep86.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8p5kep86.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8p5kep86.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8p5kep86.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8p5kep86.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8p5kep86.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8p5kep86.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8p5kep86.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>\"c\"\
    , \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"g\"\
    =>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"n\"\
    , \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"r\"\
    =>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"y\"\
    , \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    # create an empty string to store\
    \ the encrypted string\n    encrypted_string = \"\"\n    # iterate through the\
    \ string and encrypt each letter\n    for letter in s\n        encrypted_string\
    \ = string(encrypted_string, alphabet[letter])\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe_pye2yp.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  KeyError: key 'h' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpe_pye2yp.jl:22\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe_pye2yp.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe_pye2yp.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpe_pye2yp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  KeyError: key 'a' not found\n \
    \ Stacktrace:\n   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base\
    \ ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpe_pye2yp.jl:22\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe_pye2yp.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe_pye2yp.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpe_pye2yp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  KeyError: key 'g' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpe_pye2yp.jl:22\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpe_pye2yp.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpe_pye2yp.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpe_pye2yp.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_pye2yp.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i in alphabet\n            encrypted_string = encrypted_string\
    \ * alphabet[alphabet.index(i)+2]\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkn_lq427.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpkn_lq427.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkn_lq427.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkn_lq427.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkn_lq427.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpkn_lq427.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkn_lq427.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkn_lq427.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkn_lq427.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpkn_lq427.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkn_lq427.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkn_lq427.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkn_lq427.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkn_lq427.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfinycux5.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfinycux5.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfinycux5.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfinycux5.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfinycux5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfinycux5.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfinycux5.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfinycux5.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfinycux5.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpfinycux5.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfinycux5.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfinycux5.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpfinycux5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfinycux5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in s\n        new_s = new_s * string(shift(i,\
    \ 2))\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg5s2cyat.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg5s2cyat.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5s2cyat.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5s2cyat.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg5s2cyat.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpg5s2cyat.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5s2cyat.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5s2cyat.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg5s2cyat.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg5s2cyat.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5s2cyat.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5s2cyat.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpg5s2cyat.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpg5s2cyat.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5s2cyat.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create a string of the alphabet shifted by two\n    shifted_alphabet =\
    \ \"cdefghijklmnopqrstuvwxyzab\"\n    # create a dictionary of the alphabet and\
    \ the shifted alphabet\n    alphabet_dict = Dict(alphabet[i] => shifted_alphabet[i]\
    \ for i in 1:26)\n    # create a string of the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string and encrypt each character\n    for i\
    \ in 1:length(s)\n        encrypted_string = string(encrypted_string, alphabet_dict[s[i]])\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0xhg6ia9.jl:36\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xhg6ia9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xhg6ia9.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp0xhg6ia9.jl:37\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xhg6ia9.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xhg6ia9.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp0xhg6ia9.jl:38\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xhg6ia9.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xhg6ia9.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp0xhg6ia9.jl:39\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xhg6ia9.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xhg6ia9.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp0xhg6ia9.jl:40\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xhg6ia9.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    new_s = \"\"\n    for i in s\n        if i == \"\
    z\"\n            new_s = new_s * \"b\"\n        elseif i == \"y\"\n          \
    \  new_s = new_s * \"a\"\n        else\n            new_s = new_s * chr(int(i)\
    \ + 2)\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj61sog3g.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj61sog3g.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj61sog3g.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj61sog3g.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpj61sog3g.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj61sog3g.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj61sog3g.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj61sog3g.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpj61sog3g.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpj61sog3g.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj61sog3g.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj61sog3g.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpj61sog3g.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj61sog3g.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    for i in 1:length(s)\n        if s[i] == 'z'\n\
    \            s[i] = 'b'\n        elseif s[i] == 'y'\n            s[i] = 'a'\n\
    \        else\n            s[i] = s[i] + 2\n        end\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5gbajw2.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk5gbajw2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk5gbajw2.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk5gbajw2.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk5gbajw2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk5gbajw2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk5gbajw2.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk5gbajw2.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk5gbajw2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk5gbajw2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk5gbajw2.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk5gbajw2.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk5gbajw2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5gbajw2.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(Char(Int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4uorbtm.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4uorbtm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4uorbtm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr4uorbtm.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4uorbtm.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4uorbtm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr4uorbtm.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4uorbtm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4uorbtm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr4uorbtm.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4uorbtm.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4uorbtm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr4uorbtm.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4uorbtm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    s = s.replace(\"a\", \"c\")\n    s = s.replace(\"\
    b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n    s = s.replace(\"d\", \"f\")\n\
    \    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"f\", \"h\")\n    s = s.replace(\"\
    g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n    s = s.replace(\"i\", \"k\")\n\
    \    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"k\", \"m\")\n    s = s.replace(\"\
    l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n    s = s.replace(\"n\", \"p\")\n\
    \    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"p\", \"r\")\n    s = s.replace(\"\
    q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n    s = s.replace(\"s\", \"u\")\n\
    \    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"u\", \"w\")\n    s = s.replace(\"\
    v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n    s = s.replace(\"x\", \"z\")\n\
    \    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"z\", \"b\")\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1xjpzzp2.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1xjpzzp2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1xjpzzp2.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1xjpzzp2.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp1xjpzzp2.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1xjpzzp2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1xjpzzp2.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1xjpzzp2.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp1xjpzzp2.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1xjpzzp2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1xjpzzp2.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1xjpzzp2.jl:49\ntest set:\
    \ Error During Test at /tmp/tmp1xjpzzp2.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1xjpzzp2.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    new_string = \"\"\n   \
    \ for i in s\n        new_string = new_string * new_alphabet[alphabet .== i]\n\
    \    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9__6cga6.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 30-codeunit\
    \ String at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmp9__6cga6.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9__6cga6.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9__6cga6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9__6cga6.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 30-codeunit String at index [false]\n  Stacktrace:\n   [1] checkbounds\n   \
    \  @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::String, i::Bool)\n \
    \    @ Base ./strings/basic.jl:185\n   [3] encrypt(s::String)\n     @ Main /tmp/tmp9__6cga6.jl:20\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9__6cga6.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9__6cga6.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9__6cga6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 30-codeunit String\
    \ at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmp9__6cga6.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9__6cga6.jl:31 [inlined]\n\
    \   [6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9__6cga6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(c, 2*2) for c in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1vkxbrvc.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp1vkxbrvc.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1vkxbrvc.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1vkxbrvc.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1vkxbrvc.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp1vkxbrvc.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1vkxbrvc.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1vkxbrvc.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1vkxbrvc.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp1vkxbrvc.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1vkxbrvc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet shifted by two\n    alphabet_shift\
    \ = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"\
    =>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"\
    p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"\
    x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create a dictionary of the alphabet shifted\
    \ by four\n    alphabet_shift2 = Dict(\"a\"=>5,\"b\"=>6,\"c\"=>7,\"d\"=>8,\"e\"\
    =>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"=>14,\"k\"=>15,\"l\"=>16,\"m\"\
    =>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"r\"=>22,\"s\"=>23,\"t\"=>24,\"\
    u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"z\"=>4)\n    # create a dictionary\
    \ of the alphabet shifted by six\n    alphabet_shift3 = Dict(\"a\"=>7,\"b\"=>8,\"\
    c\"=>9,\"d\"=>10,\"e\"=>11,\"f\"=>12,\"g\"=>13,\"h\"=>14,\"i\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcws8cq2v.jl:29\nin expression starting at\
    \ /tmp/tmpcws8cq2v.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i == \" \"\n            encrypted_string = encrypted_string\
    \ * \" \"\n        else\n            index = findfirst(alphabet, i)\n        \
    \    encrypted_string = encrypted_string * alphabet[index + 2]\n        end\n\
    \    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_mfm64l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4_mfm64l.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_mfm64l.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_mfm64l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4_mfm64l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4_mfm64l.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_mfm64l.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_mfm64l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4_mfm64l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_mfm64l.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(Char(Int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45zanwpm.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45zanwpm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45zanwpm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp45zanwpm.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45zanwpm.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45zanwpm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp45zanwpm.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45zanwpm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45zanwpm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp45zanwpm.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45zanwpm.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45zanwpm.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp45zanwpm.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45zanwpm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict('a' => 1, 'b'\
    \ => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6, 'g' => 7, 'h' => 8, 'i' => 9,\
    \ 'j' => 10, 'k' => 11, 'l' => 12, 'm' => 13, 'n' => 14, 'o' => 15, 'p' => 16,\
    \ 'q' => 17, 'r' => 18, 's' => 19, 't' => 20, 'u' => 21, 'v' => 22, 'w' => 23,\
    \ 'x' => 24, 'y' => 25, 'z' => 26)\n    # create a dictionary of the alphabet\
    \ rotated by two places\n    alphabet_rotated = Dict('a' => 3, 'b' => 4, 'c' =>\
    \ 5, 'd' => 6, 'e' => 7, 'f' => 8, 'g' => 9, 'h' => 10, 'i' => 11, 'j' => 12,\
    \ 'k' => 13, 'l' => 14, 'm' => 15, 'n' => 16, 'o' => 17, 'p' => 18, 'q' => 19,\
    \ 'r' => 20, 's' => 21, 't' => 22, 'u' => 23, 'v' => 24, 'w' => 25, 'x' => 26,\
    \ 'y' => 1, 'z' => 2)\n    # create an empty string to store the encrypted string\n\
    \    encrypted_string = \"\"\n    # iterate through the string\n    for i in s\n\
    \        # if the character is a space, add a space to the encrypted string\n\
    \        if i == \" \"\n            push!(encrypted_string, \" \")\n        #\
    \ if the character is not a space, add the corresponding character from the rotated\
    \ alphabet to the encrypted string\n        else\n            push!(encrypted_string,\
    \ get(alphabet_rotated, i, 0))\n        end\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkf6kovf8.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkf6kovf8.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkf6kovf8.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkf6kovf8.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpkf6kovf8.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkf6kovf8.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkf6kovf8.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkf6kovf8.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpkf6ko"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkf6kovf8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(char(int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpih898avs.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpih898avs.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih898avs.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih898avs.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpih898avs.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpih898avs.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih898avs.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih898avs.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpih898avs.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpih898avs.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih898avs.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih898avs.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpih898avs.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpih898avs.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpih898avs.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    s_array = collect(s)\n\
    \    for i in 1:length(s_array)\n        s_array[i] = new_alphabet[findfirst(alphabet,\
    \ s_array[i])]\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp_t3xr74.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_t3xr74.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_t3xr74.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_t3xr74.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpp_t3xr74.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp_t3xr74.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_t3xr74.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_t3xr74.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpp_t3xr74.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_t3xr74.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1, \"\
    b\"=>2, \"c\"=>3, \"d\"=>4, \"e\"=>5, \"f\"=>6, \"g\"=>7, \"h\"=>8, \"i\"=>9,\
    \ \"j\"=>10, \"k\"=>11, \"l\"=>12, \"m\"=>13, \"n\"=>14, \"o\"=>15, \"p\"=>16,\
    \ \"q\"=>17, \"r\"=>18, \"s\"=>19, \"t\"=>20, \"u\"=>21, \"v\"=>22, \"w\"=>23,\
    \ \"x\"=>24, \"y\"=>25, \"z\"=>26)\n    # Create a dictionary of the alphabet\
    \ rotated by two\n    alphabet_rotated = Dict(\"a\"=>3, \"b\"=>4, \"c\"=>5, \"\
    d\"=>6, \"e\"=>7, \"f\"=>8, \"g\"=>9, \"h\"=>10, \"i\"=>11, \"j\"=>12, \"k\"=>13,\
    \ \"l\"=>14, \"m\"=>15, \"n\"=>16, \"o\"=>17, \"p\"=>18, \"q\"=>19, \"r\"=>20,\
    \ \"s\"=>21, \"t\"=>22, \"u\"=>23, \"v\"=>24, \"w\"=>25, \"x\"=>26, \"y\"=>1,\
    \ \"z\"=>2)\n    # Create a dictionary of the alphabet rotated by two\n    alphabet_rotated_2\
    \ = Dict(\"a\"=>5, \"b\"=>6, \"c\"=>7, \"d\"=>8, \"e\"=>9, \"f\"=>10, \"g\"=>11,\
    \ \"h\"=>12, \"i\"=>13, \"j\"=>14, \"k\"=>15, \"l\"=>16, \"m\"=>17, \"n\"=>18,\
    \ \"o\"=>19, \"p\"=>20, \"q\"=>21, \"r\"=>22, \"s\"=>23, \"t\"=>24, \"u\"=>25,\
    \ \"v\"=>26, \"w\"=>1, \"x\"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv9fob_5r.jl:22\nin expression starting at\
    \ /tmp/tmpv9fob_5r.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * 2\n    encrypted_string = \"\"\n    for i in s\n        encrypted_string =\
    \ encrypted_string * new_alphabet[findfirst(alphabet, i)]\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0f2uq_ck.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmp0f2uq_ck.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0f2uq_ck.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0f2uq_ck.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2*2) % 26 + 1]\n        else\n            encrypted = encrypted * i\n    \
    \    end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh2va0st.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpvh2va0st.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvh2va0st.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvh2va0st.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpvh2va0st.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpvh2va0st.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvh2va0st.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvh2va0st.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpvh2va0st.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpvh2va0st.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvh2va0st.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvh2va0st.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpvh2va0st.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh2va0st.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_v137l_.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_v137l_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_v137l_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmph_v137l_.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_v137l_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_v137l_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmph_v137l_.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_v137l_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_v137l_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmph_v137l_.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_v137l_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_v137l_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmph_v137l_.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_v137l_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = Char(Int(s_array[i]) + 2*2)\n    end\n    return join(s_array)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpitypvv7v.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpitypvv7v.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpitypvv7v.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpitypvv7v.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpitypvv7v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpitypvv7v.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpitypvv7v.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpitypvv7v.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpitypvv7v.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpitypvv7v.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmwd_8bl8.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmwd_8bl8.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmwd_8bl8.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmwd_8bl8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmwd_8bl8.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmwd_8bl8.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmwd_8bl8.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmwd_8bl8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmwd_8bl8.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmwd_8bl8.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmwd_8bl8.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmwd_8bl8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmwd_8bl8.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwd_8bl8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        encrypted = encrypted * alphabet[(alphabet.index(i) + 2) % 26]\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpirmiqsrv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpirmiqsrv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpirmiqsrv.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpirmiqsrv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpirmiqsrv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpirmiqsrv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpirmiqsrv.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpirmiqsrv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpirmiqsrv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpirmiqsrv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpirmiqsrv.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpirmiqsrv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpirmiqsrv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpirmiqsrv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9b_c2nll.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp9b_c2nll.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9b_c2nll.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9b_c2nll.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp9b_c2nll.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp9b_c2nll.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9b_c2nll.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9b_c2nll.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp9b_c2nll.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp9b_c2nll.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9b_c2nll.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9b_c2nll.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp9b_c2nll.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9b_c2nll.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt_string = \"\"\n    for i in s\n        if i == \"z\"\n       \
    \     encrypt_string = encrypt_string * \"b\"\n        elseif i == \"y\"\n   \
    \         encrypt_string = encrypt_string * \"a\"\n        else\n            encrypt_string\
    \ = encrypt_string * chr(ord(i) + 2)\n        end\n    end\n    return encrypt_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwodtdh6w.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwodtdh6w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwodtdh6w.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwodtdh6w.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwodtdh6w.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwodtdh6w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwodtdh6w.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwodtdh6w.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwodtdh6w.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpwodtdh6w.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwodtdh6w.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwodtdh6w.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwodtdh6w.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpwodtdh6w.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwodtdh6w.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = chr(ord(s_array[i])+2*2)\n    end\n    return join(s_array)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb1i5ldf2.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpb1i5ldf2.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1i5ldf2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1i5ldf2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpb1i5ldf2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpb1i5ldf2.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1i5ldf2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1i5ldf2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpb1i5ldf2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpb1i5ldf2.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1i5ldf2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1i5ldf2.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpb1i5ldf2.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpb1i5ldf2.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1i5ldf2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s\n        if i == \"z\"\n            i = \"b\"\n        elseif\
    \ i == \"y\"\n            i = \"a\"\n        else\n            i = string(chr(ord(i)\
    \ + 2))\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3blgtfik.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3blgtfik.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3blgtfik.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3blgtfik.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3blgtfik.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3blgtfik.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3blgtfik.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3blgtfik.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3blgtfik.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3blgtfik.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3blgtfik.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3blgtfik.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3blgtfik.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3blgtfik.jl:22\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3blgtfik.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]*2\n\
    \    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = new_alphabet[findfirst(alphabet, s_array[i])]\n    end\n    return join(s_array)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd9nhpm42.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpd9nhpm42.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd9nhpm42.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd9nhpm42.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # initialize an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string\n    for i in s\n        # find the index\
    \ of the letter in the alphabet\n        index = findfirst(alphabet, i)\n    \
    \    # add two to the index\n        index += 2\n        # if the index is greater\
    \ than 26, subtract 26\n        if index > 26\n            index -= 26\n     \
    \   end\n        # add the letter at the index to the encrypted string\n     \
    \   push!(encrypted_string, alphabet[index])\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyuiot9ww.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyuiot9ww.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyuiot9ww.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyuiot9ww.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpyuiot9ww.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyuiot9ww.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyuiot9ww.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyuiot9ww.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpyuiot9ww.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyuiot9ww.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2vb3b3hm.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2vb3b3hm.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2vb3b3hm.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2vb3b3hm.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2vb3b3hm.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2vb3b3hm.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2vb3b3hm.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2vb3b3hm.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2vb3b3hm.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2vb3b3hm.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2vb3b3hm.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2vb3b3hm.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2vb3b3hm.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2vb3b3hm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary that maps each letter to its encrypted letter\n\
    \    # The encrypted letter is two places down from the original letter\n    #\
    \ If the letter is in the last two places, then the encrypted letter\n    # is\
    \ the first two letters of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    dict = Dict()\n    for i in 1:length(alphabet)\n        if i <= 24\n   \
    \         dict[alphabet[i]] = alphabet[i+2]\n        elseif i == 25\n        \
    \    dict[alphabet[i]] = alphabet[1]\n        else\n            dict[alphabet[i]]\
    \ = alphabet[2]\n        end\n    end\n    \n    # Create an empty string to store\
    \ the encrypted string\n    encrypted = \"\"\n    \n    # For each letter in the\
    \ input string, add the encrypted letter to the\n    # encrypted string\n    for\
    \ letter in s\n        encrypted = string(encrypted, dict[letter])\n    end\n\
    \    \n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphzgfr3to.jl:48\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphzgfr3to.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphzgfr3to.jl:47\ntest set: Test\
    \ Failed at /tmp/tmphzgfr3to.jl:49\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphzgfr3to.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphzgfr3to.jl:47\ntest set: Test\
    \ Failed at /tmp/tmphzgfr3to.jl:50\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphzgfr3to.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphzgfr3to.jl:47\ntest set: Test\
    \ Failed at /tmp/tmphzgfr3to.jl:51\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphzgfr3to.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphzgfr3to.jl:47\ntest set: Test\
    \ Failed at /tmp/tmphzgfr3to.jl:52\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphzgfr3to.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * i\n     \
    \   else\n            encrypted = encrypted * alphabet[(alphabet.index(i) + 2)\
    \ % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk8gqqcl_.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk8gqqcl_.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk8gqqcl_.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk8gqqcl_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpk8gqqcl_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk8gqqcl_.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk8gqqcl_.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk8gqqcl_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpk8gqqcl_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpk8gqqcl_.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk8gqqcl_.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk8gqqcl_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpk8gqqcl_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk8gqqcl_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = \"\"\n    for i in s\n        if i == \"a\"\n            s2 = s2\
    \ * \"c\"\n        elseif i == \"b\"\n            s2 = s2 * \"d\"\n        elseif\
    \ i == \"c\"\n            s2 = s2 * \"e\"\n        elseif i == \"d\"\n       \
    \     s2 = s2 * \"f\"\n        elseif i == \"e\"\n            s2 = s2 * \"g\"\n\
    \        elseif i == \"f\"\n            s2 = s2 * \"h\"\n        elseif i == \"\
    g\"\n            s2 = s2 * \"i\"\n        elseif i == \"h\"\n            s2 =\
    \ s2 * \"j\"\n        elseif i == \"i\"\n            s2 = s2 * \"k\"\n       \
    \ elseif i == \"j\"\n            s2 = s2 * \"l\"\n        elseif i == \"k\"\n\
    \            s2 = s2 * \"m\"\n        elseif i == \"l\"\n            s2 = s2 *\
    \ \"n\"\n        elseif i == \"m\"\n            s2 = s2 * \"o\"\n        elseif\
    \ i == \"n\"\n            s2 = s2 * \"p\"\n        elseif i == \"o\"\n       \
    \     s2 = s2 * \"q\"\n        elseif i == \"p\"\n            s2 = s2 * \"r\"\n\
    \        elseif i == \"q\"\n            s2 = s2 * \"s\"\n        elseif i == \"\
    r\"\n            s2 = s2 * \"t\"\n        elseif i == \"s\"\n            s2 =\
    \ s2 * \"u\"\n        elseif i == \"t\"\n            s2 = s2 * \"v\"\n       \
    \ elseif i == \"u\"\n            s2 = s2 * \"w\"\n        elseif i == \"v\"\n\
    \            s2 = s2 * \"x\"\n        elseif i == \"w\"\n            s2 = s2 *\
    \ \"y\"\n        elseif i == \"x\"\n            s2 = s2 * \"z\"\n        elseif\
    \ i == \"y\"\n            s2 = s2 * \"a\"\n\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4p06pey3.jl:1\nin expression starting at /tmp/tmp4p06pey3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcj1uw_nb.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcj1uw_nb.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcj1uw_nb.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcj1uw_nb.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpcj1uw_nb.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcj1uw_nb.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcj1uw_nb.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcj1uw_nb.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpcj1uw_nb.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcj1uw_nb.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcj1uw_nb.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcj1uw_nb.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpcj1uw_nb.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj1uw_nb.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(c, 2*2) for c in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxiymf_13.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpxiymf_13.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxiymf_13.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxiymf_13.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpxiymf_13.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpxiymf_13.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpxiymf_13.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpxiymf_13.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpxiymf_13.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpxiymf_13.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxiymf_13.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i in alphabet\n            encrypted_string = encrypted_string\
    \ * alphabet[(alphabet.find(i)+2*2)%26]\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpebzuu7mc.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpebzuu7mc.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpebzuu7mc.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpebzuu7mc.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpebzuu7mc.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpebzuu7mc.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpebzuu7mc.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpebzuu7mc.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpebzuu7mc.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpebzuu7mc.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpebzuu7mc.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpebzuu7mc.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpebzuu7mc.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Bas"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpebzuu7mc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # Create a string of the alphabet rotated by two multiplied by two places\n\
    \    rotated_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    # Create an empty\
    \ string to store the encrypted string\n    encrypted_string = \"\"\n    # Loop\
    \ through the string\n    for i in s\n        # Find the index of the character\
    \ in the alphabet\n        index = findfirst(alphabet, i)\n        # Add the character\
    \ in the rotated alphabet at the same index to the encrypted string\n        push!(encrypted_string,\
    \ rotated_alphabet[index])\n    end\n    # Return the encrypted string\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcvfcb2rn.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcvfcb2rn.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcvfcb2rn.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcvfcb2rn.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpcvfcb2rn.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcvfcb2rn.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcvfcb2rn.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcvfcb2rn.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpcvfcb2rn.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvfcb2rn.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprrh2hm_s.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprrh2hm_s.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprrh2hm_s.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprrh2hm_s.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprrh2hm_s.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprrh2hm_s.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprrh2hm_s.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprrh2hm_s.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprrh2hm_s.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprrh2hm_s.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprrh2hm_s.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprrh2hm_s.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprrh2hm_s.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrh2hm_s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * chr(ord(i)\
    \ + 2)\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps020jfy7.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmps020jfy7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps020jfy7.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps020jfy7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmps020jfy7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmps020jfy7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps020jfy7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps020jfy7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmps020jfy7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmps020jfy7.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps020jfy7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps020jfy7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmps020jfy7.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmps020jfy7.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps020jfy7.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    new_string = \"\"\n   \
    \ for c in s\n        if c in alphabet\n            new_string *= new_alphabet[alphabet\
    \ .== c]\n        else\n            new_string *= c\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpex9mkvp7.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 30-codeunit\
    \ String at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpex9mkvp7.jl:21\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpex9mkvp7.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpex9mkvp7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpex9mkvp7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 30-codeunit String at index [false]\n  Stacktrace:\n   [1] checkbounds\n   \
    \  @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::String, i::Bool)\n \
    \    @ Base ./strings/basic.jl:185\n   [3] encrypt(s::String)\n     @ Main /tmp/tmpex9mkvp7.jl:21\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpex9mkvp7.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpex9mkvp7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpex9mkvp7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 30-codeunit String\
    \ at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpex9mkvp7.jl:21\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpex9mkvp7.jl:35 [inlined]\n\
    \   [6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpex9mkvp7.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    new_s = \"\"\n    for i in s\n        if i == \"\
    z\"\n            new_s = new_s * \"b\"\n        elseif i == \"y\"\n          \
    \  new_s = new_s * \"a\"\n        else\n            new_s = new_s * chr(Int(i)\
    \ + 2)\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqfrps0tj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqfrps0tj.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfrps0tj.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfrps0tj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpqfrps0tj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqfrps0tj.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfrps0tj.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfrps0tj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpqfrps0tj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqfrps0tj.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqfrps0tj.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqfrps0tj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpqfrps0tj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqfrps0tj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4isb6g_i.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4isb6g_i.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4isb6g_i.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4isb6g_i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4isb6g_i.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4isb6g_i.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4isb6g_i.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4isb6g_i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4isb6g_i.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp4isb6g_i.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4isb6g_i.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4isb6g_i.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4isb6g_i.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4isb6g_i.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create a string of the alphabet rotated by two places\n    alphabet_rotated\
    \ = alphabet[3:end] * alphabet[1:2]\n    # create a dictionary of the alphabet\
    \ and the alphabet rotated\n    alphabet_dict = Dict(alphabet[i] => alphabet_rotated[i]\
    \ for i in 1:length(alphabet))\n    # create an empty string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # add the\
    \ encrypted letter to the empty string\n        encrypted_string *= alphabet_dict[i]\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3g9h8xj.jl:37\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3g9h8xj.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3g9h8xj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpi3g9h8xj.jl:38\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3g9h8xj.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3g9h8xj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpi3g9h8xj.jl:39\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3g9h8xj.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3g9h8xj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpi3g9h8xj.jl:40\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3g9h8xj.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3g9h8xj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpi3g9h8xj.jl:41\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3g9h8xj.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(char(int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp23_ih8d5.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp23_ih8d5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp23_ih8d5.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp23_ih8d5.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp23_ih8d5.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp23_ih8d5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp23_ih8d5.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp23_ih8d5.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp23_ih8d5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp23_ih8d5.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp23_ih8d5.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp23_ih8d5.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp23_ih8d5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp23_ih8d5.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23_ih8d5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # convert string to array of characters\n    s_array = collect(s)\n  \
    \  # create array of characters to be replaced\n    replace_array = [\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    # create array of characters to replace with\n    replace_with_array\
    \ = [\"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\", \"a\", \"b\"]\n    # create dictionary of characters to be\
    \ replaced and characters to replace with\n    replace_dict = Dict(replace_array[i]\
    \ => replace_with_array[i] for i in 1:length(replace_array))\n    # create array\
    \ of characters to be replaced\n    replace_array_upper = [\"A\", \"B\", \"C\"\
    , \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\"\
    , \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"\
    , \"Z\"]\n    # create array of characters to replace with\n    replace_with_array_upper\
    \ = [\"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"\
    M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"\
    X\", \"Y\", \"Z\", \"A\", \"B\"]\n    # create dictionary of characters to be\
    \ replaced and characters to replace with\n    replace_dict_upper = Dict(replace_array_upper[i]\
    \ => replace_with_array_upper[i] for i in 1:length(replace_array_upper))\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0sc4vfxa.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0sc4vfxa.jl:1\n\
    in expression starting at /tmp/tmp0sc4vfxa.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict('a' => 1, 'b'\
    \ => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6, 'g' => 7, 'h' => 8, 'i' => 9,\
    \ 'j' => 10, 'k' => 11, 'l' => 12, 'm' => 13, 'n' => 14, 'o' => 15, 'p' => 16,\
    \ 'q' => 17, 'r' => 18, 's' => 19, 't' => 20, 'u' => 21, 'v' => 22, 'w' => 23,\
    \ 'x' => 24, 'y' => 25, 'z' => 26)\n    # create an empty string to store the\
    \ encrypted string\n    encrypted_string = \"\"\n    # loop through the string\n\
    \    for i in s\n        # if the letter is not in the dictionary, add it to the\
    \ encrypted string\n        if !haskey(alphabet, i)\n            push!(encrypted_string,\
    \ i)\n        # if the letter is in the dictionary, add the letter two places\
    \ down to the encrypted string\n        else\n            push!(encrypted_string,\
    \ get(alphabet, i, 0) + 2)\n        end\n    end\n    # return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_h14ueyy.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_h14ueyy.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_h14ueyy.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_h14ueyy.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp_h14ueyy.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_h14ueyy.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_h14ueyy.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_h14ueyy.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp_h14u"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_h14ueyy.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i == \"a\"\n     \
    \       encrypted_string = encrypted_string * \"c\"\n        elseif i == \"b\"\
    \n            encrypted_string = encrypted_string * \"d\"\n        elseif i ==\
    \ \"c\"\n            encrypted_string = encrypted_string * \"e\"\n        elseif\
    \ i == \"d\"\n            encrypted_string = encrypted_string * \"f\"\n      \
    \  elseif i == \"e\"\n            encrypted_string = encrypted_string * \"g\"\n\
    \        elseif i == \"f\"\n            encrypted_string = encrypted_string *\
    \ \"h\"\n        elseif i == \"g\"\n            encrypted_string = encrypted_string\
    \ * \"i\"\n        elseif i == \"h\"\n            encrypted_string = encrypted_string\
    \ * \"j\"\n        elseif i == \"i\"\n            encrypted_string = encrypted_string\
    \ * \"k\"\n        elseif i == \"j\"\n            encrypted_string = encrypted_string\
    \ * \"l\"\n        elseif i == \"k\"\n            encrypted_string = encrypted_string\
    \ * \"m\"\n        elseif i == \"l\"\n            encrypted_string = encrypted_string\
    \ * \"n\"\n        elseif i == \"m\"\n            encrypted_string = encrypted_string\
    \ * \"o\"\n        elseif i == \"n\"\n            encrypted_string = encrypted_string\
    \ * \"p\"\n        elseif i == \"o\"\n            encrypted_string = encrypted_string\
    \ * \"q\"\n        elseif i == \"p\"\n            encrypted_string = encrypted_string\
    \ * \"r\"\n        elseif i == \"q\"\n            encrypted_string = encrypted_string\
    \ * \"s\"\n        elseif i == \"r\"\n            encrypted_string = encrypted_string\
    \ * \"t\"\n        elseif i == \"s\"\n            encrypted_string = encrypted_string\
    \ * \"u\"\n        elseif i == \"t\"\n            encrypted_string = encrypted_string\
    \ * \"v\"\n        elseif i == \"u\"\n            encrypted_string = encrypted_string\
    \ * \"w\"\n        elseif i == \"v\"\n            encrypted_string = encrypted_string\
    \ * \"x\"\n        elseif i == \"w\"\n            encrypted_string = encrypted\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz6db8blk.jl:1\nin expression starting at /tmp/tmpz6db8blk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = lowercase(s)\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqoj3jx4h.jl:50\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqoj3jx4h.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqoj3jx4h.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpqoj3jx4h.jl:51\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqoj3jx4h.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqoj3jx4h.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpqoj3jx4h.jl:52\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqoj3jx4h.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqoj3jx4h.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpqoj3jx4h.jl:53\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqoj3jx4h.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqoj3jx4h.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpqoj3jx4h.jl:54\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqoj3jx4h.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = \"\"\n    for i in s\n        s_new = s_new * string(char(mod(int(i)\
    \ + 2*2, 26) + 97))\n    end\n    return s_new\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp99882hng.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp99882hng.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp99882hng.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp99882hng.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp99882hng.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp99882hng.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp99882hng.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp99882hng.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp99882hng.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp99882hng.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp99882hng.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp99882hng.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp99882hng.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp99882hng.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99882hng.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = chr(ord(s_array[i]) + 2*2)\n    end\n    return join(s_array)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj57es74c.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj57es74c.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj57es74c.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj57es74c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpj57es74c.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj57es74c.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj57es74c.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj57es74c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpj57es74c.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj57es74c.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj57es74c.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj57es74c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpj57es74c.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj57es74c.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj57es74c.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    s = lowercase(s)\n    encrypted\
    \ = \"\"\n    for i in s\n        if i in alphabet\n            encrypted = encrypted\
    \ * alphabet[(alphabet.index(i) + 2) % 26]\n        else\n            encrypted\
    \ = encrypted * i\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcjrhswfk.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcjrhswfk.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcjrhswfk.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcjrhswfk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpcjrhswfk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcjrhswfk.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcjrhswfk.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcjrhswfk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpcjrhswfk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpcjrhswfk.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcjrhswfk.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcjrhswfk.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpcjrhswfk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcjrhswfk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create a string of the alphabet rotated by two\n    rotated_alphabet =\
    \ \"cdefghijklmnopqrstuvwxyzab\"\n    # create an empty string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # find the\
    \ index of the letter in the alphabet\n        index = findfirst(alphabet, i)\n\
    \        # find the letter at the index of the rotated alphabet\n        letter\
    \ = rotated_alphabet[index]\n        # add the letter to the empty string\n  \
    \      push!(encrypted_string, letter)\n    end\n    # return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbqvux8l1.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpbqvux8l1.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbqvux8l1.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbqvux8l1.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpbqvux8l1.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpbqvux8l1.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbqvux8l1.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbqvux8l1.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpbqvux8l1.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbqvux8l1.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #convert string to array of characters\n    s_array = collect(s)\n   \
    \ #create array of characters to be used as the alphabet\n    alphabet = collect(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    #create empty array to store encrypted characters\n\
    \    encrypted_array = []\n    #iterate through each character in the string\n\
    \    for i in s_array\n        #find the index of the character in the alphabet\n\
    \        index = findfirst(alphabet, i)\n        #if the index is greater than\
    \ 23, subtract 24 from the index\n        if index > 23\n            index = index\
    \ - 24\n        end\n        #push the character at the index to the encrypted\
    \ array\n        push!(encrypted_array, alphabet[index + 2])\n    end\n    #convert\
    \ the encrypted array to a string\n    encrypted_string = join(encrypted_array)\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6hlji6hm.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6hlji6hm.jl:25\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6hlji6hm.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6hlji6hm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6hlji6hm.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6hlji6hm.jl:25\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6hlji6hm.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6hlji6hm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6hlji6hm.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Vector{Char},\
    \ ::Char)\n  Closest candidates are:\n    findfirst"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hlji6hm.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet shifted by two\n    alphabet_shift\
    \ = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"\
    =>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"\
    p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"\
    x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create a dictionary of the alphabet shifted\
    \ by two multiplied by two\n    alphabet_shift_two = Dict(\"a\"=>5,\"b\"=>6,\"\
    c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"=>14,\"\
    k\"=>15,\"l\"=>16,\"m\"=>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"r\"=>22,\"\
    s\"=>23,\"t\"=>24,\"u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"z\"=>4)\n \
    \   # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # if the character\
    \ is a space, append a space to the encrypted string\n        if i == \" \"\n\
    \           \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfn5jj5wu.jl:1\nin expression starting at /tmp/tmpfn5jj5wu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        encrypted = encrypted * alphabet[(alphabet.index(i) + 2*2) %\
    \ 26 + 1]\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdpup94g8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpdpup94g8.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdpup94g8.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdpup94g8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdpup94g8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpdpup94g8.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdpup94g8.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdpup94g8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdpup94g8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpdpup94g8.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdpup94g8.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdpup94g8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpdpup94g8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdpup94g8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a dictionary with the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    #create a new string to store the encrypted string\n    new_string = \"\"\
    \n    #iterate through the string\n    for i in s\n        #if the letter is in\
    \ the dictionary\n        if i in keys(alphabet)\n            #add the encrypted\
    \ letter to the new string\n            new_string = new_string * string(alphabet[i]\
    \ + 2)\n        end\n    end\n    #return the new string\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5h_nem34.jl:36\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h_nem34.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h_nem34.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp5h_nem34.jl:37\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"\" == \"ewhjklnop\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h_nem34.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h_nem34.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp5h_nem34.jl:38\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h_nem34.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h_nem34.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp5h_nem34.jl:39\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h_nem34.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h_nem34.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp5h_nem34.jl:40\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5h_nem34.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    >>> encrypt(\"hi\")\n    \"lm\"\n    >>> encrypt(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\")\n    \"kj\"\n    >>> encrypt(\"\
    et\")\n    \"ix\"\n    \"\"\"\n    #convert string to array of characters\n  \
    \  s_array = collect(s)\n    #create an array of characters that will be the encrypted\
    \ string\n    encrypted_array = Array{Char}(length(s_array))\n    #create an array\
    \ of characters that will be the alphabet\n    alphabet = Array{Char}(26)\n  \
    \  #fill the alphabet array with the alphabet\n    for i in 1:26\n        alphabet[i]\
    \ = Char(i+96)\n    end\n    #loop through the string array\n    for i in 1:length(s_array)\n\
    \        #loop through the alphabet array\n        for j in 1:26\n           \
    \ #if the character in the string array is equal to the character in the alphabet\
    \ array\n            if s_array[i] == alphabet[j]\n                #if the character\
    \ is the last character in the alphabet array\n                if j == 26\n  \
    \                  #the encrypted character is the first character in the alphabet\
    \ array\n                    encrypted_array[i] = alphabet[1]\n              \
    \  #if the character is the second to last character in the alphabet array\n \
    \               elseif j == 25\n                    #the encrypted character is\
    \ the last character in the alphabet array\n                    encrypted_array[i]\
    \ = alphabet[26]\n                #if the character is any other character in\
    \ the alphabet array\n                else\n                    #the encrypted\
    \ character is the character two places down in the alphabet array\n         \
    \           encrypted_array[i] = alphabet[j+2]\n                end\n        \
    \    end\n        end\n    end\n    #convert the encrypted array to a string\n\
    \    encrypted_string = join(encrypted_array)\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu9hs3qi0.jl:67\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ (Array{Char})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu9hs3qi0.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu9hs3qi0.jl:67 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu9hs3qi0.jl:66\ntest set:\
    \ Error During Test at /tmp/tmpu9hs3qi0.jl:68\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ (Array{Char})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu9hs3qi0.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9hs3qi0.jl:64\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(char(int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo_f9p294.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpo_f9p294.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo_f9p294.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo_f9p294.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo_f9p294.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpo_f9p294.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo_f9p294.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo_f9p294.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo_f9p294.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpo_f9p294.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo_f9p294.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo_f9p294.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo_f9p294.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpo_f9p294.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo_f9p294.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * chr(ord(i)\
    \ + 2)\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpypsfy18h.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpypsfy18h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpypsfy18h.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpypsfy18h.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpypsfy18h.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpypsfy18h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpypsfy18h.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpypsfy18h.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpypsfy18h.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpypsfy18h.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpypsfy18h.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpypsfy18h.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpypsfy18h.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpypsfy18h.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpypsfy18h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[alphabet.index(i)+2]\n\
    \        else\n            encrypted = encrypted * i\n        end\n    end\n \
    \   return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd5wsr5si.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd5wsr5si.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd5wsr5si.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd5wsr5si.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd5wsr5si.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd5wsr5si.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd5wsr5si.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd5wsr5si.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd5wsr5si.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd5wsr5si.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd5wsr5si.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd5wsr5si.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd5wsr5si.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd5wsr5si.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i in alphabet\n            index = findfirst(alphabet,\
    \ i)\n            encrypted_string = encrypted_string * alphabet[index + 2]\n\
    \        else\n            encrypted_string = encrypted_string * i\n        end\n\
    \    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd3944naw.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd3944naw.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd3944naw.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd3944naw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpd3944naw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd3944naw.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd3944naw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd3944naw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpd3944naw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd3944naw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        new_string = new_string * string(shift(i,\
    \ 2))\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1yuqncdt.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1yuqncdt.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1yuqncdt.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1yuqncdt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1yuqncdt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1yuqncdt.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1yuqncdt.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1yuqncdt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1yuqncdt.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1yuqncdt.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1yuqncdt.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1yuqncdt.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1yuqncdt.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1yuqncdt.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1yuqncdt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary that maps each letter to its encrypted letter\n\
    \    # create a string that is the encrypted version of the input string\n   \
    \ # return the encrypted string\n    return \"lm\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6l7spe3b.jl:27\n  Expression: candidate(\"\
    asdfghjkl\") == \"ewhjklnop\"\n   Evaluated: \"lm\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l7spe3b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l7spe3b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6l7spe3b.jl:28\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"lm\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l7spe3b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l7spe3b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6l7spe3b.jl:29\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"lm\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l7spe3b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l7spe3b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6l7spe3b.jl:30\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"lm\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l7spe3b.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l7spe3b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6l7spe3b.jl:31\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lm\" == \"lippsqcjvmirh\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /s"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6l7spe3b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    new_s = \"\"\n    for i\
    \ in s\n        new_s = new_s * new_alphabet[alphabet .== i]\n    end\n    return\
    \ new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa91vqcv2.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 30-codeunit\
    \ String at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpa91vqcv2.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa91vqcv2.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa91vqcv2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa91vqcv2.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 30-codeunit String at index [false]\n  Stacktrace:\n   [1] checkbounds\n   \
    \  @ ./strings/basic.jl:216 [inlined]\n   [2] getindex(s::String, i::Bool)\n \
    \    @ Base ./strings/basic.jl:185\n   [3] encrypt(s::String)\n     @ Main /tmp/tmpa91vqcv2.jl:20\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa91vqcv2.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa91vqcv2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa91vqcv2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 30-codeunit String\
    \ at index [false]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex(s::String, i::Bool)\n     @ Base ./strings/basic.jl:185\n\
    \   [3] encrypt(s::String)\n     @ Main /tmp/tmpa91vqcv2.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa91vqcv2.jl:31 [inlined]\n\
    \   [6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa91vqcv2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzpm6cgc3.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpm6cgc3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpm6cgc3.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzpm6cgc3.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpm6cgc3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpm6cgc3.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzpm6cgc3.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpm6cgc3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpm6cgc3.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzpm6cgc3.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpm6cgc3.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpm6cgc3.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzpm6cgc3.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzpm6cgc3.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase\n    s = collect(s)\n    for i in 1:length(s)\n      \
    \  if s[i] == \"z\"\n            s[i] = \"b\"\n        elseif s[i] == \"y\"\n\
    \            s[i] = \"a\"\n        else\n            s[i] = chr(Int(s[i]) + 2)\n\
    \        end\n    end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph1t0yxq_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmph1t0yxq_.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1t0yxq_.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1t0yxq_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph1t0yxq_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmph1t0yxq_.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1t0yxq_.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1t0yxq_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph1t0yxq_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmph1t0yxq_.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1t0yxq_.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1t0yxq_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph1t0yxq_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1t0yxq_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    #create a dictionary of the alphabet shifted by two\n    alphabet_shift =\
    \ Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"\
    i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"\
    q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"\
    y\"=>1,\"z\"=>2)\n    #create a dictionary of the alphabet shifted by four\n \
    \   alphabet_shift2 = Dict(\"a\"=>5,\"b\"=>6,\"c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"\
    =>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"=>14,\"k\"=>15,\"l\"=>16,\"m\"=>17,\"\
    n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"r\"=>22,\"s\"=>23,\"t\"=>24,\"u\"=>25,\"\
    v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"z\"=>4)\n    #create an empty string to store\
    \ the encrypted string\n    encrypted_string = \"\"\n    #iterate through the\
    \ string\n    for i in s\n        #if the letter is in the dictionary of the alphabet\n\
    \        if i in keys(alphabet)\n            #add the letter to\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu5qjefrn.jl:1\nin expression starting at /tmp/tmpu5qjefrn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in s\n        if i == \"z\"\n            new_s\
    \ = new_s * \"b\"\n        elseif i == \"y\"\n            new_s = new_s * \"a\"\
    \n        else\n            new_s = new_s * string(char(int(string(i)) + 2))\n\
    \        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa7er91ss.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpa7er91ss.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa7er91ss.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa7er91ss.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpa7er91ss.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpa7er91ss.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa7er91ss.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa7er91ss.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpa7er91ss.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa7er91ss.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa7er91ss.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa7er91ss.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpa7er91ss.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa7er91ss.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa7er91ss.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ encrypted_string = \"\"\n    for i in s\n        if i in alphabet\n        \
    \    encrypted_string = encrypted_string * alphabet[(alphabet.index(i) + 2) %\
    \ 26]\n        else\n            encrypted_string = encrypted_string * i\n   \
    \     end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ryj2ahv.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp0ryj2ahv.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ryj2ahv.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0ryj2ahv.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp0ryj2ahv.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp0ryj2ahv.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ryj2ahv.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0ryj2ahv.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp0ryj2ahv.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp0ryj2ahv.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0ryj2ahv.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0ryj2ahv.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp0ryj2ahv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ryj2ahv.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string\n    for i in s\n        # check if the\
    \ character is a letter\n        if i in keys(alphabet)\n            # if the\
    \ character is a letter, add the encrypted character to the encrypted string\n\
    \            encrypted_string = string(encrypted_string, get(alphabet, i, 0))\n\
    \        else\n            # if the character is not a letter, add the character\
    \ to the encrypted string\n            encrypted_string = string(encrypted_string,\
    \ i)\n        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmploviul0l.jl:39\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmploviul0l.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmploviul0l.jl:38\ntest set: Test\
    \ Failed at /tmp/tmploviul0l.jl:40\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmploviul0l.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmploviul0l.jl:38\ntest set: Test\
    \ Failed at /tmp/tmploviul0l.jl:41\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmploviul0l.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmploviul0l.jl:38\ntest set: Test\
    \ Failed at /tmp/tmploviul0l.jl:42\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmploviul0l.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmploviul0l.jl:38\ntest set: Test\
    \ Failed at /tmp/tmploviul0l.jl:43\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmploviul0l.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxb3y4mp8.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxb3y4mp8.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxb3y4mp8.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb3y4mp8.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpxb3y4mp8.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxb3y4mp8.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxb3y4mp8.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb3y4mp8.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpxb3y4mp8.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxb3y4mp8.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxb3y4mp8.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb3y4mp8.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpxb3y4mp8.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxb3y4mp8.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in s\n        if i == \"z\"\n     \
    \       encrypted_string = encrypted_string * \"b\"\n        elseif i == \"y\"\
    \n            encrypted_string = encrypted_string * \"a\"\n        else\n    \
    \        encrypted_string = encrypted_string * string(char(int(i) + 2))\n    \
    \    end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkubgkm7p.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkubgkm7p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkubgkm7p.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkubgkm7p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpkubgkm7p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkubgkm7p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkubgkm7p.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkubgkm7p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpkubgkm7p.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpkubgkm7p.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkubgkm7p.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkubgkm7p.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpkubgkm7p.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpkubgkm7p.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkubgkm7p.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        encrypted_string = encrypted_string * alphabet[alphabet.index(i)\
    \ + 2]\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3371ejvv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp3371ejvv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3371ejvv.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3371ejvv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3371ejvv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp3371ejvv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3371ejvv.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3371ejvv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3371ejvv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp3371ejvv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3371ejvv.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3371ejvv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3371ejvv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3371ejvv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #create a string of the alphabet shifted by 2\n    shifted_alphabet = \"\
    cdefghijklmnopqrstuvwxyzab\"\n    #create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #loop through the string\n    for i\
    \ in s\n        #find the index of the character in the alphabet\n        index\
    \ = findfirst(alphabet, i)\n        #add the shifted character to the encrypted\
    \ string\n        push!(encrypted_string, shifted_alphabet[index])\n    end\n\
    \    #return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaex4hev1.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpaex4hev1.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaex4hev1.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaex4hev1.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpaex4hev1.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpaex4hev1.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaex4hev1.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaex4hev1.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpaex4hev1.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaex4hev1.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary that maps each letter to its corresponding letter\n\
    \    # in the alphabet that is shifted by two places\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    shift = 2\n    dict = Dict()\n    for i in 1:length(alphabet)\n        dict[alphabet[i]]\
    \ = alphabet[(i+shift)%length(alphabet)+1]\n    end\n    # Create a string that\
    \ will be the encrypted version of the input string\n    encrypted = \"\"\n  \
    \  # For each letter in the input string, add the corresponding letter in the\n\
    \    # encrypted alphabet to the encrypted string\n    for letter in s\n     \
    \   encrypted = encrypted * dict[letter]\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1mdio4mo.jl:38\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"kl\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mdio4mo.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mdio4mo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp1mdio4mo.jl:39\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"dvgijkmno\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mdio4mo.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mdio4mo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp1mdio4mo.jl:40\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ji\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mdio4mo.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mdio4mo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp1mdio4mo.jl:41\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"hw\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1mdio4mo.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1mdio4mo.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp1mdio4mo.jl:42\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"idhzidzhidhzj\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1mdio4mo.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in 1:length(s)\n        s[i] = chr(ord(s[i])+2*2)\n    end\n   \
    \ return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7rf6emqi.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7rf6emqi.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7rf6emqi.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rf6emqi.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7rf6emqi.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7rf6emqi.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7rf6emqi.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rf6emqi.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7rf6emqi.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp7rf6emqi.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7rf6emqi.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rf6emqi.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7rf6emqi.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp7rf6emqi.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rf6emqi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #create an empty string\n    encrypted = \"\"\n    #loop through the string\n\
    \    for i in s\n        #find the index of the letter in the alphabet\n     \
    \   index = findfirst(alphabet, i)\n        #add 2 to the index\n        index\
    \ += 2\n        #if the index is greater than the length of the alphabet\n   \
    \     if index > length(alphabet)\n            #subtract the length of the alphabet\
    \ from the index\n            index -= length(alphabet)\n        end\n       \
    \ #add the letter at the index to the encrypted string\n        push!(encrypted,\
    \ alphabet[index])\n    end\n    #return the encrypted string\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpylwih7np.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpylwih7np.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpylwih7np.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpylwih7np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpylwih7np.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpylwih7np.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpylwih7np.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpylwih7np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpylwih7np.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylwih7np.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(x, 2*2) for x in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplwypsgsi.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmplwypsgsi.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplwypsgsi.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplwypsgsi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplwypsgsi.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmplwypsgsi.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplwypsgsi.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplwypsgsi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplwypsgsi.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmplwypsgsi.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwypsgsi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ new_alphabet = alphabet[3:end] * \" \" * alphabet[1:3]\n    new_alphabet = split(new_alphabet)\n\
    \    new_s = \"\"\n    for i in s\n        if i in alphabet\n            new_s\
    \ = new_s * new_alphabet[findfirst(alphabet, i)]\n        else\n            new_s\
    \ = new_s * i\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprlt04ild.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprlt04ild.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlt04ild.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlt04ild.jl:34\ntest set:\
    \ Error During Test at /tmp/tmprlt04ild.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprlt04ild.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlt04ild.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlt04ild.jl:34\ntest set:\
    \ Error During Test at /tmp/tmprlt04ild.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmprlt04ild.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlt04ild.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlt04ild.jl:34\ntest set:\
    \ Error During Test at /tmp/tmprlt04ild.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprlt04ild.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # if the character\
    \ is a space, add a space to the encrypted string\n        if i == \" \"\n   \
    \         push!(encrypted_string, \" \")\n        # if the character is a letter,\
    \ add the encrypted letter to the encrypted string\n        else\n           \
    \ push!(encrypted_string, encrypt_letter(i))\n        end\n    end\n    # return\
    \ the encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpycq6n99y.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: encrypt_letter not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpycq6n99y.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycq6n99y.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycq6n99y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpycq6n99y.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: encrypt_letter not\
    \ defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpycq6n99y.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycq6n99y.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycq6n99y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpycq6n99y.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: encrypt_letter not defined\n \
    \ Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpycq6n99y.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycq6n99y.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycq6n99y.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpycq6n99y.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: encrypt_letter not defined\n \
    \ Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpycq6n99y.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycq6n99y.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(c, 2*2) for c in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0rkgrv2q.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp0rkgrv2q.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0rkgrv2q.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0rkgrv2q.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0rkgrv2q.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp0rkgrv2q.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0rkgrv2q.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0rkgrv2q.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp0rkgrv2q.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp0rkgrv2q.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rkgrv2q.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create a string of the alphabet rotated by two\n    alphabet_rotated =\
    \ \"cdefghijklmnopqrstuvwxyzab\"\n    # create an empty string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # find the\
    \ index of the letter in the alphabet\n        index = findfirst(alphabet, i)\n\
    \        # add the letter at the index in the alphabet_rotated to the empty string\n\
    \        push!(encrypted_string, alphabet_rotated[index])\n    end\n    # return\
    \ the encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdi_j4q_z.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdi_j4q_z.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdi_j4q_z.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdi_j4q_z.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpdi_j4q_z.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdi_j4q_z.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdi_j4q_z.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdi_j4q_z.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpdi_j4q_z.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdi_j4q_z.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i == \" \"\n            encrypted_string = encrypted_string\
    \ * \" \"\n        else\n            encrypted_string = encrypted_string * alphabet[alphabet.index(i)\
    \ + 2]\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq4md1udi.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpq4md1udi.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq4md1udi.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq4md1udi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpq4md1udi.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpq4md1udi.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq4md1udi.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq4md1udi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpq4md1udi.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpq4md1udi.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpq4md1udi.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpq4md1udi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpq4md1udi.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq4md1udi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_list = collect(s)\n    for i in 1:length(s_list)\n        if s_list[i]\
    \ == \"z\"\n            s_list[i] = \"b\"\n        elseif s_list[i] == \"y\"\n\
    \            s_list[i] = \"a\"\n        else\n            s_list[i] = chr(Int(s_list[i])\
    \ + 2)\n        end\n    end\n    return join(s_list)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoms_xn6d.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoms_xn6d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoms_xn6d.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoms_xn6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoms_xn6d.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoms_xn6d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoms_xn6d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoms_xn6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoms_xn6d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoms_xn6d.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoms_xn6d.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoms_xn6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoms_xn6d.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoms_xn6d.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoms_xn6d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ encrypted = \"\"\n    for i in s\n        if i in alphabet\n            encrypted\
    \ = encrypted * i\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2az4e7rr.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2az4e7rr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2az4e7rr.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2az4e7rr.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2az4e7rr.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2az4e7rr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2az4e7rr.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2az4e7rr.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2az4e7rr.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp2az4e7rr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2az4e7rr.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2az4e7rr.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2az4e7rr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2az4e7rr.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * 2\n    new_s = \"\"\n    for i in s\n        new_s = new_s * new_alphabet[alphabet\
    \ .== i]\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyq4pdzng.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpyq4pdzng.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyq4pdzng.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyq4pdzng.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    new_alphabet = alphabet[3:end]\
    \ * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n    new_string = \"\"\n   \
    \ for i in s\n        for j in 1:length(alphabet)\n            if i == alphabet[j]\n\
    \                new_string = new_string * new_alphabet[j]\n            end\n\
    \        end\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfiflt9s4.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiflt9s4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiflt9s4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpfiflt9s4.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiflt9s4.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiflt9s4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpfiflt9s4.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiflt9s4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiflt9s4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpfiflt9s4.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiflt9s4.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiflt9s4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpfiflt9s4.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfiflt9s4.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i == \" \"\n            push!(encrypted_string, \"\
    \ \")\n        else\n            index = findfirst(alphabet, i)\n            push!(encrypted_string,\
    \ alphabet[index + 2])\n        end\n    end\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5h4xv7rm.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5h4xv7rm.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5h4xv7rm.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5h4xv7rm.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5h4xv7rm.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5h4xv7rm.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5h4xv7rm.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5h4xv7rm.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp5h4xv7rm.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5h4xv7rm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a new string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #iterate through the string\n    for i in s\n        #if the character\
    \ is a space, add a space to the encrypted string\n        if i == \" \"\n   \
    \         push!(encrypted_string, \" \")\n        #if the character is a lowercase\
    \ letter, add the encrypted letter to the encrypted string\n        elseif i in\
    \ 'a':'z'\n            push!(encrypted_string, chr(ord(i)+2))\n        #if the\
    \ character is a uppercase letter, add the encrypted letter to the encrypted string\n\
    \        elseif i in 'A':'Z'\n            push!(encrypted_string, chr(ord(i)+2))\n\
    \        #if the character is not a letter, add the character to the encrypted\
    \ string\n        else\n            push!(encrypted_string, i)\n        end\n\
    \    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjd4o27rs.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjd4o27rs.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd4o27rs.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd4o27rs.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjd4o27rs.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjd4o27rs.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd4o27rs.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd4o27rs.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjd4o27rs.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjd4o27rs.jl:25\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd4o27rs.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd4o27rs.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjd4o27rs.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjd4o27rs.jl:25\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjd4o27rs.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpugl6vn0y.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpugl6vn0y.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpugl6vn0y.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpugl6vn0y.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpugl6vn0y.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpugl6vn0y.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpugl6vn0y.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpugl6vn0y.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpugl6vn0y.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpugl6vn0y.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpugl6vn0y.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpugl6vn0y.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpugl6vn0y.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugl6vn0y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # initialize the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # initialize the encrypted string\n    encrypted_string = \"\"\n    # iterate\
    \ through the string\n    for i in s\n        # find the index of the character\
    \ in the alphabet\n        index = findfirst(alphabet, i)\n        # add two to\
    \ the index\n        index += 2\n        # if the index is greater than the length\
    \ of the alphabet\n        if index > length(alphabet)\n            # subtract\
    \ the length of the alphabet from the index\n            index -= length(alphabet)\n\
    \        end\n        # add the character at the index to the encrypted string\n\
    \        push!(encrypted_string, alphabet[index])\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu62nsvbj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu62nsvbj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu62nsvbj.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu62nsvbj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu62nsvbj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu62nsvbj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu62nsvbj.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu62nsvbj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu62nsvbj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu62nsvbj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        encrypted = encrypted * alphabet[findfirst(alphabet, i) + 2]\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppg2safiu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppg2safiu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppg2safiu.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppg2safiu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppg2safiu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppg2safiu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppg2safiu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppg2safiu.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppg2safiu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppg2safiu.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        index = findfirst(alphabet, i)\n        encrypted = encrypted\
    \ * alphabet[index + 2]\n    end\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6mid4u8b.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6mid4u8b.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6mid4u8b.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6mid4u8b.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6mid4u8b.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6mid4u8b.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6mid4u8b.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6mid4u8b.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6mid4u8b.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6mid4u8b.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for i in s\n        if i == \"z\"\n           \
    \ new_string = new_string * \"b\"\n        elseif i == \"y\"\n            new_string\
    \ = new_string * \"a\"\n        else\n            new_string = new_string * string(char(int(i)\
    \ + 2))\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp693_ocbc.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp693_ocbc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp693_ocbc.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp693_ocbc.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp693_ocbc.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp693_ocbc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp693_ocbc.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp693_ocbc.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp693_ocbc.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp693_ocbc.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp693_ocbc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp693_ocbc.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp693_ocbc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp693_ocbc.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp693_ocbc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        elseif s_array[i] == \" \"\n       \
    \     s_array[i] = \" \"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppzxk_ifn.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppzxk_ifn.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppzxk_ifn.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppzxk_ifn.jl:36\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppzxk_ifn.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppzxk_ifn.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppzxk_ifn.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppzxk_ifn.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppzxk_ifn.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppzxk_ifn.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppzxk_ifn.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppzxk_ifn.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppzxk_ifn.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzxk_ifn.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict()\n    for\
    \ i in 1:26\n        alphabet[string(Char(i+96))] = i\n    end\n    # create a\
    \ dictionary of the encrypted alphabet\n    encrypted_alphabet = Dict()\n    for\
    \ i in 1:26\n        if i <= 2\n            encrypted_alphabet[string(Char(i+96))]\
    \ = string(Char(i+96+24))\n        else\n            encrypted_alphabet[string(Char(i+96))]\
    \ = string(Char(i+96-2))\n        end\n    end\n    # create an empty string to\
    \ store the encrypted string\n    encrypted_string = \"\"\n    # iterate through\
    \ the string and replace the letters with the encrypted letters\n    for i in\
    \ s\n        encrypted_string = encrypted_string * encrypted_alphabet[i]\n   \
    \ end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_yuk2ddn.jl:43\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  KeyError: key 'h' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_yuk2ddn.jl:34\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_yuk2ddn.jl:43 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_yuk2ddn.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp_yuk2ddn.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  KeyError: key 'a' not found\n \
    \ Stacktrace:\n   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_yuk2ddn.jl:34\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_yuk2ddn.jl:44 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_yuk2ddn.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp_yuk2ddn.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  KeyError: key 'g' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_yuk2ddn.jl:34\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_yuk2ddn.jl:45 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_yuk2ddn.jl:42\ntest set:\
    \ Error During Test at /tmp/tmp_yuk2ddn.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  KeyError: key 'e' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_yuk2ddn.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a dictionary with the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    #create a dictionary with the alphabet rotated\n    alphabet_rotated = Dict(\"\
    a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"\
    j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"\
    r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"\
    z\"=>2)\n    #create an empty string\n    encrypted_string = \"\"\n    #iterate\
    \ through the string\n    for i in s\n        #add the corresponding letter in\
    \ the alphabet_rotated dictionary to the empty string\n        encrypted_string\
    \ = string(encrypted_string,get(alphabet_rotated,i,0))\n    end\n    #return the\
    \ encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzvdn85jg.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"00\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvdn85jg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvdn85jg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzvdn85jg.jl:36\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"000000000\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvdn85jg.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvdn85jg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzvdn85jg.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"00\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvdn85jg.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvdn85jg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzvdn85jg.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"00\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvdn85jg.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvdn85jg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzvdn85jg.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"0000000000000\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzvdn85jg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    new_s = \"\"\n    for i in s\n        if i == \"\
    z\"\n            new_s = new_s * \"b\"\n        elseif i == \"y\"\n          \
    \  new_s = new_s * \"a\"\n        else\n            new_s = new_s * chr(int(i)\
    \ + 2)\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr7uz366e.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpr7uz366e.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr7uz366e.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr7uz366e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpr7uz366e.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpr7uz366e.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr7uz366e.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr7uz366e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpr7uz366e.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpr7uz366e.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr7uz366e.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr7uz366e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpr7uz366e.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7uz366e.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #s = \"hi\"\n    #s = \"asdfghjkl\"\n    #s = \"gf\"\n    #s = \"et\"\n\
    \    #s = \"z\"\n    #s = \"a\"\n    #s = \"b\"\n    #s = \"c\"\n    #s = \"d\"\
    \n    #s = \"e\"\n    #s = \"f\"\n    #s = \"g\"\n    #s = \"h\"\n    #s = \"\
    i\"\n    #s = \"j\"\n    #s = \"k\"\n    #s = \"l\"\n    #s = \"m\"\n    #s =\
    \ \"n\"\n    #s = \"o\"\n    #s = \"p\"\n    #s = \"q\"\n    #s = \"r\"\n    #s\
    \ = \"s\"\n    #s = \"t\"\n    #s = \"u\"\n    #s = \"v\"\n    #s = \"w\"\n  \
    \  #s = \"x\"\n    #s = \"y\"\n    #s = \"z\"\n    #s = \"ab\"\n    #s = \"bc\"\
    \n    #s = \"cd\"\n    #s = \"de\"\n    #s = \"ef\"\n    #s = \"fg\"\n    #s =\
    \ \"gh\"\n    #s = \"hi\"\n    #s = \"ij\"\n    #s = \"jk\"\n    #s = \"kl\"\n\
    \    #s = \"lm\"\n    #s = \"mn\"\n    #s = \"no\"\n    #s = \"op\"\n    #s =\
    \ \"pq\"\n    #s = \"qr\"\n    #s = \"rs\"\n    #s = \"st\"\n    #s = \"tu\"\n\
    \    #s = \"uv\"\n    #s = \"vw\"\n    #s = \"wx\"\n    #s = \"xy\"\n    #s =\
    \ \"yz\"\n    #s = \"za\"\n    #s = \"abcd\"\n    #s = \"bcde\"\n    #s = \"cdef\"\
    \n    #s = \"defg\"\n    #s = \"efgh\"\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxaim8ear.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxaim8ear.jl:1\n\
    in expression starting at /tmp/tmpxaim8ear.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1djvrjl9.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1djvrjl9.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1djvrjl9.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1djvrjl9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1djvrjl9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1djvrjl9.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1djvrjl9.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1djvrjl9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1djvrjl9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1djvrjl9.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1djvrjl9.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1djvrjl9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1djvrjl9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1djvrjl9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary with the alphabet\n    alphabet = Dict(\"a\"=>\"\
    c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"\
    g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"\
    n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"\
    r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"\
    y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    # create an empty string to\
    \ store the encrypted string\n    encrypted_string = \"\"\n    # loop through\
    \ the string and encrypt each character\n    for i in s\n        encrypted_string\
    \ = encrypted_string * alphabet[i]\n    end\n    # return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn5pzgm1j.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  KeyError: key 'h' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpn5pzgm1j.jl:22\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5pzgm1j.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5pzgm1j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpn5pzgm1j.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  KeyError: key 'a' not found\n \
    \ Stacktrace:\n   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base\
    \ ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpn5pzgm1j.jl:22\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5pzgm1j.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5pzgm1j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpn5pzgm1j.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  KeyError: key 'g' not found\n  Stacktrace:\n\
    \   [1] getindex(h::Dict{String, String}, key::Char)\n     @ Base ./dict.jl:481\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpn5pzgm1j.jl:22\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5pzgm1j.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5pzgm1j.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpn5pzgm1j.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5pzgm1j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in s\n        if i == \"a\"\n            new_s\
    \ = new_s * \"c\"\n        elseif i == \"b\"\n            new_s = new_s * \"d\"\
    \n        elseif i == \"c\"\n            new_s = new_s * \"e\"\n        elseif\
    \ i == \"d\"\n            new_s = new_s * \"f\"\n        elseif i == \"e\"\n \
    \           new_s = new_s * \"g\"\n        elseif i == \"f\"\n            new_s\
    \ = new_s * \"h\"\n        elseif i == \"g\"\n            new_s = new_s * \"i\"\
    \n        elseif i == \"h\"\n            new_s = new_s * \"j\"\n        elseif\
    \ i == \"i\"\n            new_s = new_s * \"k\"\n        elseif i == \"j\"\n \
    \           new_s = new_s * \"l\"\n        elseif i == \"k\"\n            new_s\
    \ = new_s * \"m\"\n        elseif i == \"l\"\n            new_s = new_s * \"n\"\
    \n        elseif i == \"m\"\n            new_s = new_s * \"o\"\n        elseif\
    \ i == \"n\"\n            new_s = new_s * \"p\"\n        elseif i == \"o\"\n \
    \           new_s = new_s * \"q\"\n        elseif i == \"p\"\n            new_s\
    \ = new_s * \"r\"\n        elseif i == \"q\"\n            new_s = new_s * \"s\"\
    \n        elseif i == \"r\"\n            new_s = new_s * \"t\"\n        elseif\
    \ i == \"s\"\n            new_s = new_s * \"u\"\n        elseif i == \"t\"\n \
    \           new_s = new_s * \"v\"\n        elseif i == \"u\"\n            new_s\
    \ = new_s * \"w\"\n        elseif i == \"v\"\n            new_s = new_s * \"x\"\
    \n        elseif i == \"w\"\n            new_s = new\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9_e4t1tu.jl:1\nin expression starting at /tmp/tmp9_e4t1tu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_string = \"\"\
    \n    for i in s\n        if i == \" \"\n            encrypted_string = encrypted_string\
    \ * \" \"\n        else\n            encrypted_string = encrypted_string * alphabet[(alphabet.find(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgs3y9b7f.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpgs3y9b7f.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgs3y9b7f.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgs3y9b7f.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpgs3y9b7f.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field find\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpgs3y9b7f.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgs3y9b7f.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgs3y9b7f.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpgs3y9b7f.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpgs3y9b7f.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgs3y9b7f.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgs3y9b7f.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpgs3y9b7f.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field find\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Bas"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgs3y9b7f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ge04b_b.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1ge04b_b.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ge04b_b.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ge04b_b.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1ge04b_b.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1ge04b_b.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ge04b_b.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ge04b_b.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1ge04b_b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1ge04b_b.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ge04b_b.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ge04b_b.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1ge04b_b.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ge04b_b.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuysdwwwk.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuysdwwwk.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuysdwwwk.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuysdwwwk.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuysdwwwk.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuysdwwwk.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuysdwwwk.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuysdwwwk.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuysdwwwk.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuysdwwwk.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuysdwwwk.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuysdwwwk.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuysdwwwk.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuysdwwwk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #loop through the string\n    for i in s\n        #find the index\
    \ of the character in the alphabet\n        index = findfirst(alphabet, i)\n \
    \       #add two to the index\n        index += 2\n        #if the index is greater\
    \ than 26, subtract 26\n        if index > 26\n            index -= 26\n     \
    \   end\n        #add the character at the new index to the encrypted string\n\
    \        push!(encrypted_string, alphabet[index])\n    end\n    #return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdn1yfs34.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdn1yfs34.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdn1yfs34.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdn1yfs34.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpdn1yfs34.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdn1yfs34.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdn1yfs34.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdn1yfs34.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpdn1yfs34.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdn1yfs34.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)+2)%26]\n\
    \        else\n            encrypted = encrypted * i\n        end\n    end\n \
    \   return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5lwwiprq.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5lwwiprq.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5lwwiprq.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5lwwiprq.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp5lwwiprq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5lwwiprq.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5lwwiprq.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5lwwiprq.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp5lwwiprq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5lwwiprq.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5lwwiprq.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5lwwiprq.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp5lwwiprq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5lwwiprq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[alphabet.index(i)+2]\n\
    \        else\n            encrypted = encrypted * i\n        end\n    end\n \
    \   return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsm173ie4.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpsm173ie4.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsm173ie4.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsm173ie4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpsm173ie4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpsm173ie4.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsm173ie4.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsm173ie4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpsm173ie4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpsm173ie4.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsm173ie4.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsm173ie4.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpsm173ie4.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsm173ie4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create an empty string to store the encrypted string\n    encrypted =\
    \ \"\"\n    # loop through the string\n    for letter in s\n        # find the\
    \ index of the letter in the alphabet\n        index = findfirst(alphabet, letter)\n\
    \        # add two to the index\n        index += 2\n        # if the index is\
    \ greater than the length of the alphabet\n        if index > length(alphabet)\n\
    \            # subtract the length of the alphabet from the index\n          \
    \  index -= length(alphabet)\n        end\n        # add the letter at the new\
    \ index to the encrypted string\n        push!(encrypted, alphabet[index])\n \
    \   end\n    # return the encrypted string\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_wzh_27.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4_wzh_27.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_wzh_27.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_wzh_27.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_wzh_27.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4_wzh_27.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_wzh_27.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_wzh_27.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_wzh_27.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_wzh_27.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s.lowercase()\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s,\
    \ \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\"\
    \ => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"\
    h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n\
    \    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s\
    \ = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s,\
    \ \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\"\
    \ => \"q\")\n    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"\
    s\")\n    s = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n\
    \    s = replace(s, \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s\
    \ = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s,\
    \ \"x\" => \"z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\"\
    \ => \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppkwcmevr.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmppkwcmevr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppkwcmevr.jl:50 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkwcmevr.jl:49\ntest set:\
    \ Error During Test at /tmp/tmppkwcmevr.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmppkwcmevr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppkwcmevr.jl:51 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkwcmevr.jl:49\ntest set:\
    \ Error During Test at /tmp/tmppkwcmevr.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmppkwcmevr.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppkwcmevr.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkwcmevr.jl:49\ntest set:\
    \ Error During Test at /tmp/tmppkwcmevr.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppkwcmevr.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict('a' => 1, 'b'\
    \ => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6, 'g' => 7, 'h' => 8, 'i' => 9,\
    \ 'j' => 10, 'k' => 11, 'l' => 12, 'm' => 13, 'n' => 14, 'o' => 15, 'p' => 16,\
    \ 'q' => 17, 'r' => 18, 's' => 19, 't' => 20, 'u' => 21, 'v' => 22, 'w' => 23,\
    \ 'x' => 24, 'y' => 25, 'z' => 26)\n    # create a new dictionary to store the\
    \ encrypted alphabet\n    encrypted_alphabet = Dict()\n    # create a new string\
    \ to store the encrypted string\n    encrypted_string = \"\"\n    # iterate through\
    \ the alphabet dictionary\n    for (key, value) in alphabet\n        # if the\
    \ value is greater than 24\n        if value > 24\n            # set the value\
    \ to the value minus 24\n            value = value - 24\n            # set the\
    \ key to the value in the encrypted_alphabet dictionary\n            encrypted_alphabet[key]\
    \ = value\n        # else\n        else\n            # set the key to the value\
    \ in the encrypted_alphabet dictionary\n            encrypted_alphabet[key] =\
    \ value + 2\n        end\n    end\n    # iterate through the string\n    for i\
    \ in s\n        # iterate through the encrypted_alphabet dictionary\n        for\
    \ (key, value) in encrypted_alphabet\n            # if the value is equal to the\
    \ value of the letter in the string\n            if value == alphabet[i]\n   \
    \             # add the key to the encrypted_string\n                encrypted_string\
    \ = encrypted_string * key\n            end\n        end\n    end\n    # return\
    \ the encrypted_string\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4qm7g0kw.jl:55\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"fg\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qm7g0kw.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qm7g0kw.jl:54\ntest set: Test\
    \ Failed at /tmp/tmp4qm7g0kw.jl:56\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"yqbdefhij\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qm7g0kw.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qm7g0kw.jl:54\ntest set: Test\
    \ Failed at /tmp/tmp4qm7g0kw.jl:57\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ed\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qm7g0kw.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qm7g0kw.jl:54\ntest set: Test\
    \ Failed at /tmp/tmp4qm7g0kw.jl:58\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"cr\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qm7g0kw.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qm7g0kw.jl:54\ntest set: Test\
    \ Failed at /tmp/tmp4qm7g0kw.jl:59\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"dycudyucdycue\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4qm7g0kw.jl:52\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd_27e9lx.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd_27e9lx.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd_27e9lx.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd_27e9lx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd_27e9lx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd_27e9lx.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd_27e9lx.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd_27e9lx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd_27e9lx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd_27e9lx.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd_27e9lx.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd_27e9lx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd_27e9lx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_27e9lx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i in alphabet\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        else\n            encrypted = encrypted * i\n        end\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7v1aprhp.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7v1aprhp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7v1aprhp.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7v1aprhp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7v1aprhp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7v1aprhp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7v1aprhp.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7v1aprhp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7v1aprhp.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp7v1aprhp.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7v1aprhp.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7v1aprhp.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7v1aprhp.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7v1aprhp.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            push!(encrypted, \" \")\n       \
    \ else\n            push!(encrypted, alphabet[findfirst(alphabet, i) + 2])\n \
    \       end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgsadp72y.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpgsadp72y.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsadp72y.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgsadp72y.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpgsadp72y.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpgsadp72y.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgsadp72y.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgsadp72y.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpgsadp72y.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgsadp72y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = \"\"\n    for i in s\n        if i == \"z\"\n            s_new\
    \ = s_new * \"b\"\n        elseif i == \"y\"\n            s_new = s_new * \"a\"\
    \n        else\n            s_new = s_new * string(Char(Int(i) + 2))\n       \
    \ end\n    end\n    return s_new\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd6mt033_.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6mt033_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6mt033_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpd6mt033_.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6mt033_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6mt033_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpd6mt033_.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6mt033_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6mt033_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpd6mt033_.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6mt033_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6mt033_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpd6mt033_.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6mt033_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for i in s\n        encrypted = encrypted * shift(i,2)\n\
    \    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf9t0brub.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpf9t0brub.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf9t0brub.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf9t0brub.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpf9t0brub.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpf9t0brub.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf9t0brub.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf9t0brub.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpf9t0brub.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpf9t0brub.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf9t0brub.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf9t0brub.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpf9t0brub.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpf9t0brub.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf9t0brub.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a string of the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # create a string of the alphabet shifted down by two multiplied to two\
    \ places\n    shifted_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    # create\
    \ an empty string\n    encrypted_string = \"\"\n    # loop through each character\
    \ in the string\n    for character in s\n        # find the index of the character\
    \ in the alphabet\n        index = findfirst(alphabet, character)\n        # append\
    \ the character at the index in the shifted alphabet to the empty string\n   \
    \     push!(encrypted_string, shifted_alphabet[index])\n    end\n    # return\
    \ the encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpesmp6a6t.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpesmp6a6t.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpesmp6a6t.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpesmp6a6t.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpesmp6a6t.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpesmp6a6t.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpesmp6a6t.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpesmp6a6t.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpesmp6a6t.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesmp6a6t.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(x,2*2) for x in s]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp41o7lt5r.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp41o7lt5r.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp41o7lt5r.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp41o7lt5r.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp41o7lt5r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp41o7lt5r.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp41o7lt5r.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp41o7lt5r.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp41o7lt5r.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp41o7lt5r.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp41o7lt5r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = collect(s)\n    for i in 1:length(s)\n        if s[i] == \"z\"\n \
    \           s[i] = \"b\"\n        elseif s[i] == \"y\"\n            s[i] = \"\
    a\"\n        else\n            s[i] = chr(Int(s[i]) + 2)\n        end\n    end\n\
    \    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuk845txo.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuk845txo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk845txo.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk845txo.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuk845txo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuk845txo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk845txo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk845txo.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuk845txo.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuk845txo.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk845txo.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk845txo.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuk845txo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuk845txo.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuk845txo.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create a dictionary of the alphabet\n    alphabet = Dict(\"a\"=>1,\"\
    b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"\
    k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"\
    s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict(\"\
    a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"\
    j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"\
    r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"\
    z\"=>2)\n    # create an empty string\n    encrypted_string = \"\"\n    # iterate\
    \ through the string\n    for i in s\n        # if the letter is in the dictionary,\
    \ add the rotated letter to the encrypted string\n        if i in keys(alphabet)\n\
    \            encrypted_string = encrypted_string * string(alphabet_rotated[i])\n\
    \        # if the letter is not in the dictionary, add the letter to the encrypted\
    \ string\n        else\n            encrypted_string = encrypted_string * i\n\
    \        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplvxm66j5.jl:40\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvxm66j5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvxm66j5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplvxm66j5.jl:41\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvxm66j5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvxm66j5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplvxm66j5.jl:42\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvxm66j5.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvxm66j5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplvxm66j5.jl:43\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplvxm66j5.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplvxm66j5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplvxm66j5.jl:44\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplvxm66j5.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = collect(s)\n    for i in 1:length(s_array)\n        if s_array[i]\
    \ == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i] == \"y\"\
    \n            s_array[i] = \"a\"\n        else\n            s_array[i] = Char(Int(s_array[i])\
    \ + 2)\n        end\n    end\n    return join(s_array)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwr7uaipc.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwr7uaipc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwr7uaipc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpwr7uaipc.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwr7uaipc.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwr7uaipc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpwr7uaipc.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwr7uaipc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwr7uaipc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpwr7uaipc.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwr7uaipc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwr7uaipc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpwr7uaipc.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwr7uaipc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in s\n        if i == \" \"\n            encrypted = encrypted * \" \"\n \
    \       else\n            encrypted = encrypted * alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp51m_rdbx.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp51m_rdbx.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp51m_rdbx.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp51m_rdbx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp51m_rdbx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp51m_rdbx.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp51m_rdbx.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp51m_rdbx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp51m_rdbx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp51m_rdbx.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp51m_rdbx.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp51m_rdbx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp51m_rdbx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51m_rdbx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    >>> encrypt(\"hi\")\n    \"\
    lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> encrypt(\"gf\"\
    )\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = [i for i in s]\n    for i in 1:length(s)\n        if s[i] == \"z\"\
    \n            s[i] = \"b\"\n        elseif s[i] == \"y\"\n            s[i] = \"\
    a\"\n        else\n            s[i] = chr(Int(s[i]) + 2)\n        end\n    end\n\
    \    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi0y5lf6d.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi0y5lf6d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0y5lf6d.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0y5lf6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi0y5lf6d.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi0y5lf6d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0y5lf6d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0y5lf6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi0y5lf6d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi0y5lf6d.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi0y5lf6d.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi0y5lf6d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpi0y5lf6d.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi0y5lf6d.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi0y5lf6d.jl:30\n"
  exit_code: 1
  status: SyntaxError

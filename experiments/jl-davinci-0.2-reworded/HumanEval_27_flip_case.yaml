name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \"\"\"\nfunction\
  \ flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    new_string = \"\"\n    for i in string\n        if i in string(\"\
    a\"::String, \"b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"\
    ::String, \"g\"::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String,\
    \ \"l\"::String, \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"\
    q\"::String, \"r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"\
    ::String, \"w\"::String, \"x\"::String, \"y\"::String, \"z\"::String)\n      \
    \      new_string = new_string * string(i)::String\n        elseif i in string(\"\
    A\"::String, \"B\"::String, \"C\"::String, \"D\"::String, \"E\"::String, \"F\"\
    ::String, \"G\"::String, \"H\"::String, \"I\"::String, \"J\"::String, \"K\"::String,\
    \ \"L\"::String, \"M\"::String, \"N\"::String, \"O\"::String, \"P\"::String, \"\
    Q\"::String, \"R\"::String, \"S\"::String, \"T\"::String, \"U\"::String, \"V\"\
    ::String, \"W\"::String, \"X\"::String, \"Y\"::String, \"Z\"::String)\n      \
    \      new_string = new_string * string(i)::String\n        end\n    end\n   \
    \ return new_string\nend", "    string_flipped = \"\"\n    for char in string\n\
    \        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            string_flipped\
    \ *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n   \
    \         string_flipped *= string(char)\n        else\n            string_flipped\
    \ *= char\n        end\n    end\n    return string_flipped\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * i\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * i\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    return\
    \ [uppercase(c) for c in string]\nend", "    new_string = \"\"\n    for c in string\n\
    \        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          \
    \  new_string = new_string * string(c)\n        else\n            new_string =\
    \ new_string * c\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(char)\n        elseif char in \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * string(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for character in\
    \ string\n        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        else\n            flipped_string *= lowercase(character)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n        \
    \    push!(flipped_string, uppercase(char))\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(flipped_string, lowercase(char))\n        else\n         \
    \   push!(flipped_string, char)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    new_string = \"\"\n    for\
    \ i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string\
    \ = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(char)\n        elseif char in \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * string(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if c in string(\"a-z\")\n            flipped_string = flipped_string\
    \ * string(c)\n        elseif c in string(\"A-Z\")\n            flipped_string\
    \ = flipped_string * string(c)\n        else\n            flipped_string = flipped_string\
    \ * c\n        end\n    end\n    return flipped_string\nend", "    return string\
    \ |> String.lowercase |> String.uppercase\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if islower(char)\n            push!(flipped_string,\
    \ uppercase(char))\n        elseif isupper(char)\n            push!(flipped_string,\
    \ lowercase(char))\n        else\n            push!(flipped_string, char)\n  \
    \      end\n    end\n    return flipped_string\nend", "    new_string = \"\"\n\
    \    for i in string\n        if i in string(\"a\"::String, \"b\"::String, \"\
    c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"h\"\
    ::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"::String,\
    \ \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String, \"\
    s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"x\"\
    ::String, \"y\"::String, \"z\"::String)\n            new_string = new_string *\
    \ string(i)::String\n        else\n            new_string = new_string * string(i)::String\n\
    \    end\n    return new_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i in string.lowercase\n            new_string = new_string * i.upper()\n\
    \        else\n            new_string = new_string * i.lower()\n    end\n    return\
    \ new_string\nend", "    flipped_string = \"\"\n    for char in string\n     \
    \   if char in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string *= string(char)\n\
    \        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string\
    \ *= string(char)\n        else\n            flipped_string *= char\n        end\n\
    \    end\n    return flipped_string\nend", "    new_string = \"\"\n    for i in\
    \ string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string\
    \ = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in string(\"a\"::String, \"\
    b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"\
    ::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String,\
    \ \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"\
    r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"\
    ::String, \"x\"::String, \"y\"::String, \"z\"::String)\n            new_string\
    \ = new_string * string(char)::String\n        else\n            new_string =\
    \ new_string * string(char)::String\n    end\n    return new_string\nend", " \
    \   new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            push!(new_string, uppercase(i))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(new_string, lowercase(i))\n        else\n            push!(new_string,\
    \ i)\n        end\n    end\n    return new_string\nend", "    new_string = \"\"\
    \n    for i in string\n        if i in string.lowercase\n            new_string\
    \ = new_string * i.upper()\n        elseif i in string.uppercase\n           \
    \ new_string = new_string * i.lower()\n        else\n            new_string =\
    \ new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(char)\n        elseif char in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * lowercase(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    flipped = \"\"\n    for char in string\n  \
    \      if islower(char)\n            push!(flipped, uppercase(char))\n       \
    \ elseif isupper(char)\n            push!(flipped, lowercase(char))\n        else\n\
    \            push!(flipped, char)\n        end\n    end\n    return flipped\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(char)\n        elseif char in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * lowercase(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for i in string\n  \
    \      if i == uppercase(i)\n            new_string = new_string * lowercase(i)\n\
    \        else\n            new_string = new_string * uppercase(i)\n        end\n\
    \    end\n    return new_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped *= string(c)\n\
    \        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped *= string(c)\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    new_string = \"\"\n    for character in string\n        if character\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string * string(character)\n\
    \        elseif character in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string\
    \ = new_string * string(character)\n        else\n            new_string = new_string\
    \ * character\n        end\n    end\n    return new_string\nend", "    string_flipped\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       string_flipped = string_flipped * string[i]\n        else\n          \
    \  string_flipped = string_flipped * uppercase(string[i])\n        end\n    end\n\
    \    return string_flipped\nend", "    return [uppercase(x) if islower(x) else\
    \ lowercase(x) for x in string]\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i == i.lowercase()\n            new_string = new_string * i.uppercase()\n\
    \        else\n            new_string = new_string * i.lowercase()\n        end\n\
    \    end\n    return new_string\nend", "    flipped_string = \"\"\n    for char\
    \ in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ = flipped_string * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string = flipped_string * string(char)\n        else\n \
    \           flipped_string = flipped_string * string(char)\n        end\n    end\n\
    \    return flipped_string\nend", "    new_string = \"\"\n    for char in string\n\
    \        if islower(char)\n            new_string = new_string * uppercase(char)\n\
    \        else\n            new_string = new_string * lowercase(char)\n       \
    \ end\n    end\n    return new_string\nend", "    flipped = \"\"\n    for c in\
    \ string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped\
    \ *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n         \
    \   flipped *= string(c)\n        else\n            flipped *= string(c)\n   \
    \     end\n    end\n    return flipped\nend", "    new_string = \"\"\n    for\
    \ i in string\n        if i == i[1:end]\n            new_string = new_string *\
    \ i[1:end]\n        else\n            new_string = new_string * i[1:end]\n   \
    \ end\n    return new_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if character in \"abcdefghijklmnopqrstuvwxyz\"\n        \
    \    flipped_string *= string(character)\n        elseif character in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(character)\n        else\n            flipped_string\
    \ *= character\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in string.lowercase\n            new_string\
    \ = new_string * i.upper()\n        elseif i in string.uppercase\n           \
    \ new_string = new_string * i.lower()\n        else\n            new_string =\
    \ new_string * i\n        end\n    end\n    return new_string\nend", "    flipped\
    \ = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    flipped = \"\"\n    for c\
    \ in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped\
    \ *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n         \
    \   flipped *= string(c)\n        else\n            flipped *= c\n        end\n\
    \    end\n    return flipped\nend", "    new_string = \"\"\n    for i in string\n\
    \        if islower(i)\n            append!(new_string, uppercase(i))\n      \
    \  else\n            append!(new_string, lowercase(i))\n        end\n    end\n\
    \    return new_string\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    new_string = \"\"\n    for i in string\n      \
    \  if i in string(string.islower())\n            new_string = new_string * string(string.upper())\n\
    \        else\n            new_string = new_string * string(string.lower())\n\
    \    end\n    return new_string\nend", "    new_string = \"\"\n    for letter\
    \ in string\n        if letter in string(\"a\"::String, \"b\"::String, \"c\"::String,\
    \ \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"h\"::String, \"\
    i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"::String, \"n\"\
    ::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String, \"s\"::String,\
    \ \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"x\"::String, \"\
    y\"::String, \"z\"::String)\n            new_string = new_string * uppercase(letter)\n\
    \        else\n            new_string = new_string * lowercase(letter)\n     \
    \   end\n    end\n    return new_string\nend", "    flipped_string = \"\"\n  \
    \  for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \         flipped_string = flipped_string * string(char)\n        elseif char\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * string(char)\n        else\n            flipped_string = flipped_string *\
    \ char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in string(\"a\"):\n            new_string\
    \ = new_string + string(\"A\")\n        elseif i in string(\"A\"):\n         \
    \   new_string = new_string + string(\"a\")\n        else\n            new_string\
    \ = new_string + i\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       flipped_string = flipped_string * uppercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        end\n\
    \    end\n    return flipped_string\nend", "    new_string = \"\"\n    for char\
    \ in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string\
    \ = new_string * uppercase(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(char)\n        else\n      \
    \      new_string = new_string * char\n        end\n    end\n    return new_string\n\
    end", "    return string |> String.lowercase |> String.uppercase\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i == i.lowercase()\n            new_string\
    \ = new_string * i.uppercase()\n        else\n            new_string = new_string\
    \ * i.lowercase()\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= uppercase(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n   \
    \         flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i == i.lowercase()\n            new_string\
    \ = new_string * i.uppercase()\n        else\n            new_string = new_string\
    \ * i.lowercase()\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            push!(new_string, uppercase(i))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(new_string, lowercase(i))\n        else\n            push!(new_string,\
    \ i)\n        end\n    end\n    return new_string\nend", "    return [uppercase(c)\
    \ ? lowercase(c) ? c for c in string]\nend", "    new_string = \"\"\n    for i\
    \ in string\n        if i in string.lowercase\n            new_string = new_string\
    \ * i.upper()\n        else\n            new_string = new_string * i.lower()\n\
    \    end\n    return new_string\nend", "    string_flipped = \"\"\n    for i in\
    \ string\n        if i == i.lowercase\n            string_flipped *= i.uppercase\n\
    \        else\n            string_flipped *= i.lowercase\n        end\n    end\n\
    \    return string_flipped\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in string(\"a-z\")\n            flipped_string = flipped_string\
    \ * char.upper()\n        elseif char in string(\"A-Z\")\n            flipped_string\
    \ = flipped_string * char.lower()\n        else\n            flipped_string =\
    \ flipped_string * char\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     new_string = new_string * uppercase(character)\n        else\n         \
    \   new_string = new_string * lowercase(character)\n        end\n    end\n   \
    \ return new_string\nend", "    return string |> String.lowercase |> String.uppercase\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    a-z\")\n            flipped_string = flipped_string * char.upper()\n        elseif\
    \ char in string(\"A-Z\")\n            flipped_string = flipped_string * char.lower()\n\
    \        else\n            flipped_string = flipped_string * char\n    end\n \
    \   return flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    flipped =\
    \ \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= char.upper()\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= char.lower()\n        else\n            flipped *= char\n\
    \        end\n    end\n    return flipped\nend", "    flipped = \"\"\n    for\
    \ c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped\
    \ *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n         \
    \   flipped *= string(c)\n        else\n            flipped *= c\n        end\n\
    \    end\n    return flipped\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if islower(c)\n            flipped_string *= uppercase(c)\n        elseif\
    \ isupper(c)\n            flipped_string *= lowercase(c)\n        else\n     \
    \       flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(char)\n        elseif char in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * lowercase(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in string(\"abcdefghijklmnopqrstuvwxyz\")\n            flipped_string\
    \ = flipped_string * string(char)\n        elseif char in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            flipped_string = flipped_string * string(char)\n        end\n \
    \   end\n    return flipped_string\nend", "    new_string = \"\"\n    for i in\
    \ string\n        if i == i.lowercase()\n            new_string = new_string *\
    \ i.uppercase()\n        else\n            new_string = new_string * i.lowercase()\n\
    \        end\n    end\n    return new_string\nend", "    string = string.lower()\n\
    \    string = string.upper()\n    return string\nend", "    new_string = \"\"\n\
    \    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n       \
    \     new_string = new_string * uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(i)\n        else\n         \
    \   new_string = new_string * i\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if islower(i)\n   \
    \         new_string = new_string * uppercase(i)\n        else\n            new_string\
    \ = new_string * lowercase(i)\n        end\n    end\n    return new_string\nend",
  "    flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    new_string = \"\"\n    for\
    \ i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string\
    \ = new_string * uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(i)\n        else\n         \
    \   new_string = new_string * i\n        end\n    end\n    return new_string\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= string(char)\n        else\n            new_string\
    \ *= char\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    new_string = \"\"\n    for char in string\n        if\
    \ char in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \
    \        new_string = new_string * string(char)\n        else\n            new_string\
    \ = new_string * char\n        end\n    end\n    return new_string\nend", "  \
    \  new_string = \"\"\n    for char in string\n        if char in string(\"a-z\"\
    )\n            new_string = new_string * char.upper()\n        elseif char in\
    \ string(\"A-Z\")\n            new_string = new_string * char.lower()\n      \
    \  else\n            new_string = new_string * char\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i == i.lowercase()\n\
    \            new_string = new_string * i.uppercase()\n        else\n         \
    \   new_string = new_string * i.lowercase()\n        end\n    end\n    return\
    \ new_string\nend", "    new_string = \"\"\n    for i in string\n        if i\
    \ == uppercase(i)\n            new_string = new_string * lowercase(i)\n      \
    \  else\n            new_string = new_string * uppercase(i)\n        end\n   \
    \ end\n    return new_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        elseif isupper(character)\n            flipped_string *= lowercase(character)\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    return [uppercase(x) for x in string]\n\
    end", "    string_flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            string_flipped = string_flipped * string(c)\n        elseif c in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            string_flipped = string_flipped\
    \ * string(c)\n        else\n            string_flipped = string_flipped * c\n\
    \        end\n    end\n    return string_flipped\nend", "    new_string = \"\"\
    \n    for i in string\n        if i == uppercase(i)\n            new_string =\
    \ new_string * lowercase(i)\n        else\n            new_string = new_string\
    \ * uppercase(i)\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for c in string\n        if islower(c)\n   \
    \         new_string = new_string * uppercase(c)\n        else\n            new_string\
    \ = new_string * lowercase(c)\n        end\n    end\n    return new_string\nend",
  "    string = string.lowercase\n    return string\nend", "    flipped_string = \"\
    \"\n    for char in string\n        if char in string(\"a\"::String, \"b\"::String,\
    \ \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"\
    h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"\
    ::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String,\
    \ \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"\
    x\"::String, \"y\"::String, \"z\"::String)\n            flipped_string = flipped_string\
    \ * string(char)::String\n        else\n            flipped_string = flipped_string\
    \ * string(char)::String\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i == i.lowercase()\n            new_string\
    \ = new_string * i.uppercase()\n        else\n            new_string = new_string\
    \ * i.lowercase()\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string = flipped_string * uppercase(char)\n        elseif\
    \ char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * lowercase(char)\n        else\n            flipped_string = flipped_string\
    \ * char\n        end\n    end\n    return flipped_string\nend", "    return [uppercase(c)\
    \ for c in string]\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    flipped_string = \"\"\n    for i in string\n  \
    \      if i in string(\"a\"::String)\n            flipped_string = flipped_string\
    \ * string(\"A\"::String)\n        elseif i in string(\"A\"::String)\n       \
    \     flipped_string = flipped_string * string(\"a\"::String)\n        else\n\
    \            flipped_string = flipped_string * i\n        end\n    end\n    return\
    \ flipped_string\nend", "    new_string = \"\"\n    for i in string\n        if\
    \ i == i.lowercase()\n            new_string = new_string * i.uppercase()\n  \
    \      else\n            new_string = new_string * i.lowercase()\n        end\n\
    \    end\n    return new_string\nend", "    flipped_string = \"\"\n    for char\
    \ in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n   \
    \         flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= uppercase(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    return\
    \ [uppercase(c) for c in string]\nend", "    new_string = \"\"\n    for char in\
    \ string\n        if char in string(\"a\"::String, \"b\"::String, \"c\"::String,\
    \ \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"h\"::String, \"\
    i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"::String, \"n\"\
    ::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String, \"s\"::String,\
    \ \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"x\"::String, \"\
    y\"::String, \"z\"::String)\n            new_string = new_string * string(char::String)::String\n\
    \        else\n            new_string = new_string * string(char::String)::String\n\
    \    end\n    return new_string\nend", "    return [uppercase(x) for x in string]\n\
    end", "    new_string = \"\"\n    for i in string\n        if i == i.lowercase()\n\
    \            new_string = new_string * i.uppercase()\n        else\n         \
    \   new_string = new_string * i.lowercase()\n        end\n    end\n    return\
    \ new_string\nend", "    flipped_string = \"\"\n    for char in string\n     \
    \   if islower(char)\n            append!(flipped_string, uppercase(char))\n \
    \       elseif isupper(char)\n            append!(flipped_string, lowercase(char))\n\
    \        else\n            append!(flipped_string, char)\n        end\n    end\n\
    \    return flipped_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i == uppercase(i)\n            new_string = new_string * lowercase(i)\n\
    \        else\n            new_string = new_string * uppercase(i)\n        end\n\
    \    end\n    return new_string\nend", "    new_string = \"\"\n    for c in string\n\
    \        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          \
    \  new_string = new_string * string(c)\n        else\n            new_string =\
    \ new_string * c\n        end\n    end\n    return new_string\nend", "    flipped\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(char)\n    end\n    return flipped\nend", "  \
    \  return string |> String.lowercase |> String.uppercase\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(char)\n        elseif char in \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string = new_string * string(char)\n\
    \        else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ = flipped_string * uppercase(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string = flipped_string * lowercase(char)\n        else\n\
    \            flipped_string = flipped_string * char\n        end\n    end\n  \
    \  return flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in lowercase(string)\n            push!(flipped_string, uppercase(char))\n\
    \        elseif char in uppercase(string)\n            push!(flipped_string, lowercase(char))\n\
    \        else\n            push!(flipped_string, char)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped = String[]\n    for c in string\n\
    \        if c in lowercase(string)\n            push!(flipped, uppercase(c))\n\
    \        elseif c in uppercase(string)\n            push!(flipped, lowercase(c))\n\
    \        else\n            push!(flipped, c)\n        end\n    end\n    return\
    \ join(flipped)\nend", "    string_flipped = \"\"\n    for char in string\n  \
    \      if char in string(\"a\"::String, \"b\"::String, \"c\"::String, \"d\"::String,\
    \ \"e\"::String, \"f\"::String, \"g\"::String, \"h\"::String, \"i\"::String, \"\
    j\"::String, \"k\"::String, \"l\"::String, \"m\"::String, \"n\"::String, \"o\"\
    ::String, \"p\"::String, \"q\"::String, \"r\"::String, \"s\"::String, \"t\"::String,\
    \ \"u\"::String, \"v\"::String, \"w\"::String, \"x\"::String, \"y\"::String, \"\
    z\"::String)\n            string_flipped = string_flipped * char.upper()\n   \
    \     else\n            string_flipped = string_flipped * char.lower()\n     \
    \   end\n    end\n    return string_flipped\nend", "    string_array = split(string,\
    \ \"\")\n    flipped_string = \"\"\n    for i in string_array\n        if i ==\
    \ uppercase(i)\n            flipped_string = flipped_string * lowercase(i)\n \
    \       else\n            flipped_string = flipped_string * uppercase(i)\n   \
    \     end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\
    \n    for c in string\n        if islower(c)\n            flipped_string *= uppercase(c)\n\
    \        elseif isupper(c)\n            flipped_string *= lowercase(c)\n     \
    \   else\n            flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    a\"::String, \"b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"\
    ::String, \"g\"::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String,\
    \ \"l\"::String, \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"\
    q\"::String, \"r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"\
    ::String, \"w\"::String, \"x\"::String, \"y\"::String, \"z\"::String)\n      \
    \      flipped_string = flipped_string * string(char)::String\n        elseif\
    \ char in string(\"A\"::String, \"B\"::String, \"C\"::String, \"D\"::String, \"\
    E\"::String, \"F\"::String, \"G\"::String, \"H\"::String, \"I\"::String, \"J\"\
    ::String, \"K\"::String, \"L\"::String, \"M\"::String, \"N\"::String, \"O\"::String,\
    \ \"P\"::String, \"Q\"::String, \"R\"::String, \"S\"::String, \"T\"::String, \"\
    U\"::String, \"V\"::String, \"W\"::String, \"X\"::String, \"Y\"::String, \"Z\"\
    ::String)\n            flipped_string = flipped_string * string(char)::String\n\
    \        else\n            flipped_string = flipped_string * string(char)::String\n\
    \        end\n    end\n    return flipped_string\nend", "    return [uppercase(c)\
    \ for c in string]\nend", "    flipped = \"\"\n    for c in string\n        if\
    \ c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped *= string(c)\n    \
    \    elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped *= string(c)\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    new_string = \"\"\n    for\
    \ char in string\n        if char in string(\"a-z\")\n            new_string =\
    \ new_string * char\n        elseif char in string(\"A-Z\")\n            new_string\
    \ = new_string * char\n        end\n    end\n    return new_string\nend", "  \
    \  flipped_string = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string = flipped_string * uppercase(char)\n        elseif\
    \ char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * lowercase(char)\n        else\n            flipped_string = flipped_string\
    \ * char\n        end\n    end\n    return flipped_string\nend", "    return [uppercase(c)\
    \ for c in string]\nend", "    new_string = \"\"\n    for i in string\n      \
    \  if i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          \
    \  new_string = new_string * string(i)\n        else\n            new_string =\
    \ new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for c in string\n        if islower(c)\n            new_string *=\
    \ uppercase(c)\n        elseif isupper(c)\n            new_string *= lowercase(c)\n\
    \        else\n            new_string *= c\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            new_string = new_string * uppercase(string[i])\n        else\n  \
    \          new_string = new_string * lowercase(string[i])\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for i in string\n  \
    \      if i in string.lowercase\n            new_string = new_string * i.upper()\n\
    \        else\n            new_string = new_string * i.lower()\n    end\n    return\
    \ new_string\nend", "    new_string = \"\"\n    for letter in string\n       \
    \ if letter in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * uppercase(letter)\n        elseif letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(letter)\n        else\n    \
    \        new_string = new_string * letter\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in string(\"a\"\
    ::String, \"b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String,\
    \ \"g\"::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"\
    l\"::String, \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"\
    ::String, \"r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String,\
    \ \"w\"::String, \"x\"::String, \"y\"::String, \"z\"::String)\n            new_string\
    \ = new_string * string(i)::String\n        else\n            new_string = new_string\
    \ * string(i)::String\n    end\n    return new_string\nend", "    return [uppercase(c)\
    \ ? lowercase(c) : uppercase(c) for c in string]\nend", "    flipped_string =\
    \ \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            flipped_string *= uppercase(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= lowercase(c)\n        else\n            flipped_string\
    \ *= c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            flipped_string *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(c)\n        else\n            flipped_string\
    \ *= c\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(i)\n        else\n         \
    \   new_string = new_string * i\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in string(\"\
    a\"::String,\"b\"::String,\"c\"::String,\"d\"::String,\"e\"::String,\"f\"::String,\"\
    g\"::String,\"h\"::String,\"i\"::String,\"j\"::String,\"k\"::String,\"l\"::String,\"\
    m\"::String,\"n\"::String,\"o\"::String,\"p\"::String,\"q\"::String,\"r\"::String,\"\
    s\"::String,\"t\"::String,\"u\"::String,\"v\"::String,\"w\"::String,\"x\"::String,\"\
    y\"::String,\"z\"::String)\n            new_string = new_string * uppercase(char)\n\
    \        else\n            new_string = new_string * lowercase(char)\n       \
    \ end\n    end\n    return new_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n        \
    \    flipped_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string *= uppercase(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= lowercase(c)\n        else\n            new_string\
    \ *= c\n        end\n    end\n    return new_string\nend", "    flipped = \"\"\
    \n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n      \
    \      flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    flipped_string = \"\"\n \
    \   for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \          flipped_string = flipped_string * uppercase(char)\n        elseif char\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * lowercase(char)\n        else\n            flipped_string = flipped_string\
    \ * char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in string.lowercase\n            new_string\
    \ = new_string * i.upper()\n        elseif i in string.uppercase\n           \
    \ new_string = new_string * i.lower()\n        else\n            new_string =\
    \ new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if islower(i)\n            new_string *=\
    \ uppercase(i)\n        elseif isupper(i)\n            new_string *= lowercase(i)\n\
    \        else\n            new_string *= i\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    string = string.lower()\n    string = string.replace(\"\
    a\", \"A\")\n    string = string.replace(\"b\", \"B\")\n    string = string.replace(\"\
    c\", \"C\")\n    string = string.replace(\"d\", \"D\")\n    string = string.replace(\"\
    e\", \"E\")\n    string = string.replace(\"f\", \"F\")\n    string = string.replace(\"\
    g\", \"G\")\n    string = string.replace(\"h\", \"H\")\n    string = string.replace(\"\
    i\", \"I\")\n    string = string.replace(\"j\", \"J\")\n    string = string.replace(\"\
    k\", \"K\")\n    string = string.replace(\"l\", \"L\")\n    string = string.replace(\"\
    m\", \"M\")\n    string = string.replace(\"n\", \"N\")\n    string = string.replace(\"\
    o\", \"O\")\n    string = string.replace(\"p\", \"P\")\n    string = string.replace(\"\
    q\", \"Q\")\n    string = string.replace(\"r\", \"R\")\n    string = string.replace(\"\
    s\", \"S\")\n    string = string.replace(\"t\", \"T\")\n    string = string.replace(\"\
    u\", \"U\")\n    string = string.replace(\"v\", \"V\")\n    string = string.replace(\"\
    w\", \"W\")\n    string = string.replace(\"x\", \"X\")\n    string = string.replace(\"\
    y\", \"Y\")\n    string = string.replace(\"z\", \"Z\")\n    return string\nend",
  "    new_string = \"\"\n    for i in string\n        if islower(i)\n           \
    \ new_string = new_string * uppercase(i)\n        else\n            new_string\
    \ = new_string * lowercase(i)\n        end\n    end\n    return new_string\nend",
  "    new_string = \"\"\n    for i in string\n        if i in string(\"a\"::String,\
    \ \"b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"\
    g\"::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"\
    ::String, \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String,\
    \ \"r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"\
    w\"::String, \"x\"::String, \"y\"::String, \"z\"::String)\n            new_string\
    \ = new_string * string(i)::String\n        elseif i in string(\"A\"::String,\
    \ \"B\"::String, \"C\"::String, \"D\"::String, \"E\"::String, \"F\"::String, \"\
    G\"::String, \"H\"::String, \"I\"::String, \"J\"::String, \"K\"::String, \"L\"\
    ::String, \"M\"::String, \"N\"::String, \"O\"::String, \"P\"::String, \"Q\"::String,\
    \ \"R\"::String, \"S\"::String, \"T\"::String, \"U\"::String, \"V\"::String, \"\
    W\"::String, \"X\"::String, \"Y\"::String, \"Z\"::String)\n            new_string\
    \ = new_string * string(i)::String\n        end\n    end\n    return new_string\n\
    end", "    flipped = []\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            push!(flipped, uppercase(c))\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(flipped, lowercase(c))\n        else\n            push!(flipped,\
    \ c)\n        end\n    end\n    return join(flipped)\nend", "    new_string =\
    \ \"\"\n    for i in string\n        if i in string(\"a\"::String, \"b\"::String,\
    \ \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"\
    h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"\
    ::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String,\
    \ \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"\
    x\"::String, \"y\"::String, \"z\"::String)\n            new_string = new_string\
    \ * string(i)::String\n        elseif i in string(\"A\"::String, \"B\"::String,\
    \ \"C\"::String, \"D\"::String, \"E\"::String, \"F\"::String, \"G\"::String, \"\
    H\"::String, \"I\"::String, \"J\"::String, \"K\"::String, \"L\"::String, \"M\"\
    ::String, \"N\"::String, \"O\"::String, \"P\"::String, \"Q\"::String, \"R\"::String,\
    \ \"S\"::String, \"T\"::String, \"U\"::String, \"V\"::String, \"W\"::String, \"\
    X\"::String, \"Y\"::String, \"Z\"::String)\n            new_string = new_string\
    \ * string(i)::String\n        end\n    end\n    return new_string\nend", "  \
    \  new_string = \"\"\n    for i in string\n        if islower(i)\n           \
    \ new_string *= uppercase(i)\n        elseif isupper(i)\n            new_string\
    \ *= lowercase(i)\n        else\n            new_string *= i\n        end\n  \
    \  end\n    return new_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if character in string(\"a\"::String,\"b\"::String,\"c\"\
    ::String,\"d\"::String,\"e\"::String,\"f\"::String,\"g\"::String,\"h\"::String,\"\
    i\"::String,\"j\"::String,\"k\"::String,\"l\"::String,\"m\"::String,\"n\"::String,\"\
    o\"::String,\"p\"::String,\"q\"::String,\"r\"::String,\"s\"::String,\"t\"::String,\"\
    u\"::String,\"v\"::String,\"w\"::String,\"x\"::String,\"y\"::String,\"z\"::String)\n\
    \            flipped_string = flipped_string * uppercase(character)\n        else\n\
    \            flipped_string = flipped_string * lowercase(character)\n        end\n\
    \    end\n    return flipped_string\nend", "    new_string = \"\"\n    for i in\
    \ string\n        if islower(i)\n            new_string = new_string * uppercase(i)\n\
    \        elseif isupper(i)\n            new_string = new_string * lowercase(i)\n\
    \        else\n            new_string = new_string * i\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for i in string\n  \
    \      if i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          \
    \  new_string = new_string * string(i)\n        else\n            new_string =\
    \ new_string * string(i)\n        end\n    end\n    return new_string\nend", " \
    \   new_string = \"\"\n    for i in string\n        if i == i.lowercase()\n  \
    \          new_string = new_string * i.uppercase()\n        else\n           \
    \ new_string = new_string * i.lowercase()\n        end\n    end\n    return new_string\n\
    end", "    return [uppercase(x) ? lowercase(x) : uppercase(x) for x in string]\n\
    end", "    new_string = \"\"\n    for c in string\n        if islower(c)\n   \
    \         new_string = new_string * uppercase(c)\n        else\n            new_string\
    \ = new_string * lowercase(c)\n        end\n    end\n    return new_string\nend",
  "    flipped_string = \"\"\n    for letter in string\n        if letter in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string = flipped_string * uppercase(letter)\n        elseif\
    \ letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * lowercase(letter)\n        else\n            flipped_string = flipped_string\
    \ * letter\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    string = string.lower()\n    string = string.upper()\n\
    \    return string\nend", "    new_string = \"\"\n    for char in string\n   \
    \     if char in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \
    \        new_string = new_string * string(char)\n        else\n            new_string\
    \ = new_string * char\n        end\n    end\n    return new_string\nend", "  \
    \  new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * i\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * i\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if character in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= uppercase(character)\n        elseif character\
    \ in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string *= lowercase(character)\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            push!(new_string,\
    \ uppercase(i))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        \
    \    push!(new_string, lowercase(i))\n        else\n            push!(new_string,\
    \ i)\n        end\n    end\n    return new_string\nend", "    flipped_string =\
    \ \"\"\n    for character in string\n        if islower(character)\n         \
    \   push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in string(islower(i))\n\
    \            new_string = new_string * i.upper()\n        else\n            new_string\
    \ = new_string * i.lower()\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            push!(flipped_string, uppercase(i))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            push!(flipped_string, lowercase(i))\n        else\n            push!(flipped_string,\
    \ i)\n        end\n    end\n    return flipped_string\nend", "    new_string =\
    \ \"\"\n    for i in string\n        if i == i.lowercase()\n            new_string\
    \ = new_string * i.uppercase()\n        else\n            new_string = new_string\
    \ * i.lowercase()\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i == i.lowercase\n            new_string\
    \ = new_string * i.uppercase\n        else\n            new_string = new_string\
    \ * i.lowercase\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string *= uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= lowercase(i)\n        else\n            new_string\
    \ *= i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string = flipped_string * uppercase(char)\n        elseif\
    \ char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * lowercase(char)\n        else\n            flipped_string = flipped_string\
    \ * char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     flipped_string *= uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string *= lowercase(character)\n        else\n          \
    \  flipped_string *= character\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in string(\"\
    a\"::String, \"b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"\
    ::String, \"g\"::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String,\
    \ \"l\"::String, \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"\
    q\"::String, \"r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"\
    ::String, \"w\"::String, \"x\"::String, \"y\"::String, \"z\"::String)\n      \
    \      new_string = new_string * string(char)::String\n        elseif char in\
    \ string(\"A\"::String, \"B\"::String, \"C\"::String, \"D\"::String, \"E\"::String,\
    \ \"F\"::String, \"G\"::String, \"H\"::String, \"I\"::String, \"J\"::String, \"\
    K\"::String, \"L\"::String, \"M\"::String, \"N\"::String, \"O\"::String, \"P\"\
    ::String, \"Q\"::String, \"R\"::String, \"S\"::String, \"T\"::String, \"U\"::String,\
    \ \"V\"::String, \"W\"::String, \"X\"::String, \"Y\"::String, \"Z\"::String)\n\
    \            new_string = new_string * string(char)::String\n        else\n  \
    \          new_string = new_string * string(char)::String\n        end\n    end\n\
    \    return new_string\nend", "    return [uppercase(c) ? lowercase(c) ? c for\
    \ c in string]\nend", "    new_string = \"\"\n    for char in string\n       \
    \ if char in string(\"a\"::String, \"b\"::String, \"c\"::String, \"d\"::String,\
    \ \"e\"::String, \"f\"::String, \"g\"::String, \"h\"::String, \"i\"::String, \"\
    j\"::String, \"k\"::String, \"l\"::String, \"m\"::String, \"n\"::String, \"o\"\
    ::String, \"p\"::String, \"q\"::String, \"r\"::String, \"s\"::String, \"t\"::String,\
    \ \"u\"::String, \"v\"::String, \"w\"::String, \"x\"::String, \"y\"::String, \"\
    z\"::String)\n            new_string = new_string * string(char)::String\n   \
    \     elseif char in string(\"A\"::String, \"B\"::String, \"C\"::String, \"D\"\
    ::String, \"E\"::String, \"F\"::String, \"G\"::String, \"H\"::String, \"I\"::String,\
    \ \"J\"::String, \"K\"::String, \"L\"::String, \"M\"::String, \"N\"::String, \"\
    O\"::String, \"P\"::String, \"Q\"::String, \"R\"::String, \"S\"::String, \"T\"\
    ::String, \"U\"::String, \"V\"::String, \"W\"::String, \"X\"::String, \"Y\"::String,\
    \ \"Z\"::String)\n            new_string = new_string * string(char)::String\n\
    \        else\n            new_string = new_string * string(char)::String\n  \
    \      end\n    end\n    return new_string\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if char in string(\"a\",\"b\",\"c\",\"d\",\"\
    e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"\
    r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\")\n            flipped_string\
    \ = flipped_string * char.upper()\n        elseif char in string(\"A\",\"B\",\"\
    C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"\
    P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\")\n           \
    \ flipped_string = flipped_string * char.lower()\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    string_flipped = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            string_flipped = string_flipped * string[i]\n        else\n     \
    \       string_flipped = string_flipped * uppercase(string[i])\n        end\n\
    \    end\n    return string_flipped\nend", "    string = string.swapcase()\n \
    \   return string\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if islower(character)\n            push!(flipped_string, uppercase(character))\n\
    \        elseif isupper(character)\n            push!(flipped_string, lowercase(character))\n\
    \        else\n            push!(flipped_string, character)\n        end\n   \
    \ end\n    return flipped_string\nend", "    new_string = \"\"\n    for c in string\n\
    \        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string *= string(c)\n\
    \        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string *=\
    \ string(c)\n        else\n            new_string *= c\n        end\n    end\n\
    \    return new_string\nend", "    new_string = \"\"\n    for i in string\n  \
    \      if i == i.lowercase()\n            new_string = new_string * i.uppercase()\n\
    \        else\n            new_string = new_string * i.lowercase()\n        end\n\
    \    end\n    return new_string\nend", "    flipped = String[]\n    for c in string\n\
    \        if c in lowercase(string)\n            push!(flipped, uppercase(c))\n\
    \        else\n            push!(flipped, lowercase(c))\n        end\n    end\n\
    \    return join(flipped)\nend", "    new_string = \"\"\n    for char in string\n\
    \        if char in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string\
    \ * string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \
    \        new_string = new_string * string(char)\n        else\n            new_string\
    \ = new_string * char\n        end\n    end\n    return new_string\nend", "  \
    \  flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\")\n            flipped_string = flipped_string * string(char.upper())\n\
    \        elseif char in string(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"\
    , \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\"\
    , \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\")\n            flipped_string\
    \ = flipped_string * string(char.lower())\n        else\n            flipped_string\
    \ = flipped_string * string(char)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            new_string = new_string * i.upper()\n        elseif i in string.uppercase\n\
    \            new_string = new_string * i.lower()\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if islower(i)\n            new_string =\
    \ new_string * uppercase(i)\n        elseif isupper(i)\n            new_string\
    \ = new_string * lowercase(i)\n        else\n            new_string = new_string\
    \ * i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in string(\"a\"::String, \"\
    b\"::String, \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"\
    ::String, \"h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String,\
    \ \"m\"::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"\
    r\"::String, \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"\
    ::String, \"x\"::String, \"y\"::String, \"z\"::String)\n            new_string\
    \ = new_string * string(char)::String\n        elseif char in string(\"A\"::String,\
    \ \"B\"::String, \"C\"::String, \"D\"::String, \"E\"::String, \"F\"::String, \"\
    G\"::String, \"H\"::String, \"I\"::String, \"J\"::String, \"K\"::String, \"L\"\
    ::String, \"M\"::String, \"N\"::String, \"O\"::String, \"P\"::String, \"Q\"::String,\
    \ \"R\"::String, \"S\"::String, \"T\"::String, \"U\"::String, \"V\"::String, \"\
    W\"::String, \"X\"::String, \"Y\"::String, \"Z\"::String)\n            new_string\
    \ = new_string * string(char)::String\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * lowercase(i)\n        else\n         \
    \   new_string = new_string * i\n        end\n    end\n    return new_string\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * i\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * i\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for letter in string\n        if letter == letter.lowercase()\n\
    \            new_string *= letter.uppercase()\n        else\n            new_string\
    \ *= letter.lowercase()\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(i)\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string *= uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= lowercase(i)\n        else\n            new_string\
    \ *= i\n        end\n    end\n    return new_string\nend", "    new_string = \"\
    \"\n    for i in string\n        if i in string(\"a\"::String, \"b\"::String,\
    \ \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"\
    h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"\
    ::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String,\
    \ \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"\
    x\"::String, \"y\"::String, \"z\"::String)\n            new_string = new_string\
    \ * string(i)::String\n        elseif i in string(\"A\"::String, \"B\"::String,\
    \ \"C\"::String, \"D\"::String, \"E\"::String, \"F\"::String, \"G\"::String, \"\
    H\"::String, \"I\"::String, \"J\"::String, \"K\"::String, \"L\"::String, \"M\"\
    ::String, \"N\"::String, \"O\"::String, \"P\"::String, \"Q\"::String, \"R\"::String,\
    \ \"S\"::String, \"T\"::String, \"U\"::String, \"V\"::String, \"W\"::String, \"\
    X\"::String, \"Y\"::String, \"Z\"::String)\n            new_string = new_string\
    \ * string(i)::String\n        end\n    end\n    return new_string\nend", "  \
    \  flipped_string = \"\"\n    for char in string\n        if islower(char)\n \
    \           flipped_string *= uppercase(char)\n        elseif isupper(char)\n\
    \            flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     push!(flipped_string, uppercase(character))\n        elseif isupper(character)\n\
    \            push!(flipped_string, lowercase(character))\n        else\n     \
    \       push!(flipped_string, character)\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for char in string\n        if char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= string(char)\n        elseif char in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string *= string(char)\n        else\n            new_string\
    \ *= string(char)\n        end\n    end\n    return new_string\nend", "    new_string\
    \ = \"\"\n    for letter in string\n        if letter in string(\"a\"):\n    \
    \        new_string = new_string * string(\"A\")\n        elseif letter in string(\"\
    A\"):\n            new_string = new_string * string(\"a\")\n        else\n   \
    \         new_string = new_string * letter\n    end\n    return new_string\nend",
  "    new_string = \"\"\n    for i in string\n        if i == i.lowercase()\n   \
    \         new_string = new_string * i.uppercase()\n        else\n            new_string\
    \ = new_string * i.lowercase()\n        end\n    end\n    return new_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string *= string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= string(i)\n        else\n            new_string *=\
    \ i\n        end\n    end\n    return new_string\nend", "    flipped = \"\"\n\
    \    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n       \
    \     flipped *= uppercase(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= lowercase(c)\n        else\n            flipped *= c\n\
    \        end\n    end\n    return flipped\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

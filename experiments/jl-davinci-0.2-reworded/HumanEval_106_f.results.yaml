name: HumanEval_106_f
language: jl
results:
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n\
    \    return [1, 2, 6, 24, 15]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsc43mvt4.jl:20\n  Expression: candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28]\n   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6,\
    \ 24, 15, 720, 28]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc43mvt4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc43mvt4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsc43mvt4.jl:21\n  Expression: candidate(1) == [1]\n   Evaluated:\
    \ [1, 2, 6, 24, 15] == [1]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc43mvt4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc43mvt4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsc43mvt4.jl:22\n  Expression: candidate(3) == [1, 2, 6]\n\
    \   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc43mvt4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc43mvt4.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsc43mvt4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    x = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            x[i] = factorial(i)\n\
    \        else\n            x[i] = sum(1:i)\n        end\n    end\n    return x\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n < 1\n      \
    \  return []\n    end\n    v = Vector{Int64}(undef, n)\n    v[1] = 1\n    for\
    \ i in 2:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n        else\n\
    \            v[i] = sum(1:i)\n        end\n    end\n    return v\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\
    \t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\
    \t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n\
    \    return [1, 2, 6, 24, 15]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp23jibzd.jl:20\n  Expression: candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28]\n   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6,\
    \ 24, 15, 720, 28]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp23jibzd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp23jibzd.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpp23jibzd.jl:21\n  Expression: candidate(1) == [1]\n   Evaluated:\
    \ [1, 2, 6, 24, 15] == [1]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp23jibzd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp23jibzd.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpp23jibzd.jl:22\n  Expression: candidate(3) == [1, 2, 6]\n\
    \   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp23jibzd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp23jibzd.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp23jibzd.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i = 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    x = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            x[i] = factorial(i)\n\
    \        else\n            x[i] = sum(1:i)\n        end\n    end\n    return x\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i = 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    \    return [1, 2, 6, 24, 15]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5hanc_0p.jl:20\n  Expression: candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28]\n   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6,\
    \ 24, 15, 720, 28]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hanc_0p.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hanc_0p.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp5hanc_0p.jl:21\n  Expression: candidate(1) == [1]\n   Evaluated:\
    \ [1, 2, 6, 24, 15] == [1]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hanc_0p.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hanc_0p.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp5hanc_0p.jl:22\n  Expression: candidate(3) == [1, 2, 6]\n\
    \   Evaluated: [1, 2, 6, 24, 15] == [1, 2, 6]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hanc_0p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hanc_0p.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hanc_0p.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    vec = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            vec[i] = factorial(i)\n\
    \        else\n            vec[i] = sum(1:i)\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i = 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n\
    \    v = zeros(Int64, n)\n    for i in 1:n\n        if i % 2 == 0\n          \
    \  v[i] = factorial(i)\n        else\n            v[i] = sum(1:i)\n        end\n\
    \    end\n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t\
    @test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24,\
    \ 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2,\
    \ 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i = 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5z6pt7wx.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [1, 2, 6, 24, 15]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] f(n::Int64)\\n     @ Main /tmp/tmp5z6pt7wx.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5z6pt7wx.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5z6pt7wx.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmp5z6pt7wx.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] f(n::Int64)\\n     @ Main /tmp/tmp5z6pt7wx.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5z6pt7wx.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3aib5at1.jl:18\n  Test threw exception\n\
    \  Expression: candidate(5) == [1, 2, 6, 24, 15]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] f(n::Int64)\n     @ Main /tmp/tmp3aib5at1.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3aib5at1.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3aib5at1.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3aib5at1.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] f(n::Int64)\n     @ Main /tmp/tmp3aib5at1.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3aib5at1.jl:19 [inlined]\n\
    \   [4] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3aib5at1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    res = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            res[i] = factorial(i)\n\
    \        else\n            res[i] = sum(1:i)\n        end\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i = 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            result[i] = factorial(i)\n\
    \        else\n            result[i] = sum(1:i)\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    v = zeros(Int64,\
    \ n)\n    for i in 1:n\n        if i % 2 == 0\n            v[i] = factorial(i)\n\
    \        else\n            v[i] = sum(1:i)\n        end\n    end\n    return v\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK

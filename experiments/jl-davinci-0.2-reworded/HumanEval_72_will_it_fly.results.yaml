name: HumanEval_72_will_it_fly
language: jl
results:
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo9wvpcsy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpo9wvpcsy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo9wvpcsy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo9wvpcsy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo9wvpcsy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo9wvpcsy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo9wvpcsy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo9wvpcsy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo9wvpcsy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo9wvpcsy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo9wvpcsy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo9wvpcsy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo9wvpcsy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9wvpcsy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_palindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsqwc066l.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpsqwc066l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqwc066l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqwc066l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsqwc066l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsqwc066l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqwc066l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqwc066l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsqwc066l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsqwc066l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsqwc066l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsqwc066l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsqwc066l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqwc066l.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuzx6o1y4.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpuzx6o1y4.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzx6o1y4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzx6o1y4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuzx6o1y4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpuzx6o1y4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzx6o1y4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzx6o1y4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuzx6o1y4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpuzx6o1y4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzx6o1y4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzx6o1y4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuzx6o1y4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuzx6o1y4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl1x_w86e.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpl1x_w86e.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl1x_w86e.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl1x_w86e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpl1x_w86e.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl1x_w86e.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl1x_w86e.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl1x_w86e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpl1x_w86e.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl1x_w86e.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl1x_w86e.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl1x_w86e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpl1x_w86e.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1x_w86e.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6imud_8v.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp6imud_8v.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6imud_8v.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6imud_8v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6imud_8v.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6imud_8v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6imud_8v.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6imud_8v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6imud_8v.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6imud_8v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6imud_8v.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6imud_8v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6imud_8v.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6imud_8v.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdc6yofc7.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpdc6yofc7.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc6yofc7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc6yofc7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc6yofc7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdc6yofc7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc6yofc7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc6yofc7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc6yofc7.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdc6yofc7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc6yofc7.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc6yofc7.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc6yofc7.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc6yofc7.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvxms4l16.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpvxms4l16.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvxms4l16.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvxms4l16.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvxms4l16.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvxms4l16.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvxms4l16.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvxms4l16.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvxms4l16.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvxms4l16.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvxms4l16.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvxms4l16.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvxms4l16.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvxms4l16.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpajin2zsv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpajin2zsv.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpajin2zsv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpajin2zsv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpajin2zsv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpajin2zsv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpajin2zsv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpajin2zsv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpajin2zsv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpajin2zsv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpajin2zsv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpajin2zsv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpajin2zsv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpajin2zsv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgjuy409v.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgjuy409v.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjuy409v.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjuy409v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgjuy409v.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgjuy409v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjuy409v.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjuy409v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgjuy409v.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgjuy409v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgjuy409v.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgjuy409v.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgjuy409v.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjuy409v.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv5k9_9_h.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpv5k9_9_h.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5k9_9_h.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5k9_9_h.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv5k9_9_h.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv5k9_9_h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5k9_9_h.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5k9_9_h.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv5k9_9_h.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv5k9_9_h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5k9_9_h.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5k9_9_h.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv5k9_9_h.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5k9_9_h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbsijhclg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpbsijhclg.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbsijhclg.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbsijhclg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbsijhclg.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpbsijhclg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbsijhclg.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbsijhclg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbsijhclg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpbsijhclg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbsijhclg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbsijhclg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbsijhclg.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpb"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbsijhclg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw5u0hfde.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpw5u0hfde.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5u0hfde.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5u0hfde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpw5u0hfde.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw5u0hfde.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5u0hfde.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5u0hfde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpw5u0hfde.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw5u0hfde.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5u0hfde.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5u0hfde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpw5u0hfde.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5u0hfde.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfheicxq7.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpfheicxq7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfheicxq7.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfheicxq7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfheicxq7.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpfheicxq7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfheicxq7.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfheicxq7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiwkbpxa1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpiwkbpxa1.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwkbpxa1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwkbpxa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiwkbpxa1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpiwkbpxa1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwkbpxa1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwkbpxa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiwkbpxa1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpiwkbpxa1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwkbpxa1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwkbpxa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpiwkbpxa1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpi"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwkbpxa1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp31vvdaan.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp31vvdaan.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31vvdaan.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31vvdaan.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp31vvdaan.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp31vvdaan.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31vvdaan.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31vvdaan.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp31vvdaan.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp31vvdaan.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31vvdaan.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31vvdaan.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp31vvdaan.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp31vvdaan.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo31lcgu2.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpo31lcgu2.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo31lcgu2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo31lcgu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo31lcgu2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo31lcgu2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo31lcgu2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo31lcgu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo31lcgu2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo31lcgu2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo31lcgu2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo31lcgu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpo31lcgu2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo31lcgu2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpliif96qj.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpliif96qj.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpliif96qj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpliif96qj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpliif96qj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpliif96qj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpliif96qj.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpliif96qj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpliif96qj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpliif96qj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpliif96qj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpliif96qj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpliif96qj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpliif96qj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyv6_7c87.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpyv6_7c87.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyv6_7c87.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyv6_7c87.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyv6_7c87.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpyv6_7c87.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyv6_7c87.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyv6_7c87.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyv6_7c87.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpyv6_7c87.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyv6_7c87.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyv6_7c87.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyv6_7c87.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpy"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyv6_7c87.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjp9hwfxe.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjp9hwfxe.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjp9hwfxe.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjp9hwfxe.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjp9hwfxe.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjp9hwfxe.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjp9hwfxe.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjp9hwfxe.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjp9hwfxe.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjp9hwfxe.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjp9hwfxe.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjp9hwfxe.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjp9hwfxe.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjp9hwfxe.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm77coge8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpm77coge8.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm77coge8.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm77coge8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm77coge8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm77coge8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm77coge8.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm77coge8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm77coge8.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm77coge8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm77coge8.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm77coge8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm77coge8.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm77coge8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpld_0ik4y.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpld_0ik4y.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpld_0ik4y.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpld_0ik4y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpld_0ik4y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpld_0ik4y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpld_0ik4y.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpld_0ik4y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpld_0ik4y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpld_0ik4y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpld_0ik4y.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpld_0ik4y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpld_0ik4y.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpld_0ik4y.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp40qx_lfn.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp40qx_lfn.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40qx_lfn.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40qx_lfn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp40qx_lfn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp40qx_lfn.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40qx_lfn.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40qx_lfn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp40qx_lfn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp40qx_lfn.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40qx_lfn.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40qx_lfn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp40qx_lfn.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40qx_lfn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf57pcj36.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpf57pcj36.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf57pcj36.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf57pcj36.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpf57pcj36.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpf57pcj36.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf57pcj36.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf57pcj36.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpf57pcj36.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpf57pcj36.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf57pcj36.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf57pcj36.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpf57pcj36.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpf57pc"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf57pcj36.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0lr1qk5l.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp0lr1qk5l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lr1qk5l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lr1qk5l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0lr1qk5l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0lr1qk5l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lr1qk5l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lr1qk5l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0lr1qk5l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0lr1qk5l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lr1qk5l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lr1qk5l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0lr1qk5l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0lr1qk5l.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxapmjeux.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpxapmjeux.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxapmjeux.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxapmjeux.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxapmjeux.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxapmjeux.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxapmjeux.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxapmjeux.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxapmjeux.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxapmjeux.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxapmjeux.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxapmjeux.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxapmjeux.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxapmjeux.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpenwc_x0s.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpenwc_x0s.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpenwc_x0s.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpenwc_x0s.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpenwc_x0s.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpenwc_x0s.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpenwc_x0s.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpenwc_x0s.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpenwc_x0s.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpenwc_x0s.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpenwc_x0s.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpenwc_x0s.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpenwc_x0s.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpenwc_x0s.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgcr94a8p.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpgcr94a8p.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcr94a8p.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcr94a8p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcr94a8p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcr94a8p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcr94a8p.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcr94a8p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcr94a8p.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgcr94a8p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcr94a8p.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcr94a8p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgcr94a8p.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpg"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgcr94a8p.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp20_zc5c0.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp20_zc5c0.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp20_zc5c0.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp20_zc5c0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp20_zc5c0.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp20_zc5c0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp20_zc5c0.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp20_zc5c0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp20_zc5c0.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp20_zc5c0.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp20_zc5c0.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp20_zc5c0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp20_zc5c0.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20_zc5c0.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsx1zpxqx.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpsx1zpxqx.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsx1zpxqx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsx1zpxqx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpsx1zpxqx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsx1zpxqx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsx1zpxqx.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsx1zpxqx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpsx1zpxqx.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsx1zpxqx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsx1zpxqx.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsx1zpxqx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpsx1zpxqx.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsx1zpxqx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsa9dlhzw.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpsa9dlhzw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa9dlhzw.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa9dlhzw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsa9dlhzw.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsa9dlhzw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa9dlhzw.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa9dlhzw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsa9dlhzw.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsa9dlhzw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa9dlhzw.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa9dlhzw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsa9dlhzw.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmps"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsa9dlhzw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjmol472b.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjmol472b.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmol472b.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmol472b.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjmol472b.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjmol472b.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmol472b.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmol472b.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjmol472b.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjmol472b.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmol472b.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmol472b.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjmol472b.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmol472b.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp_dgtfm_.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpp_dgtfm_.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_dgtfm_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_dgtfm_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpp_dgtfm_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp_dgtfm_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_dgtfm_.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_dgtfm_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpp_dgtfm_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp_dgtfm_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp_dgtfm_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp_dgtfm_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpp_dgtfm_.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_dgtfm_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv7xw_odw.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpv7xw_odw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv7xw_odw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv7xw_odw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpv7xw_odw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv7xw_odw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv7xw_odw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv7xw_odw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpv7xw_odw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv7xw_odw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv7xw_odw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv7xw_odw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpv7xw_odw.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv7xw_odw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx6clxcxt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpx6clxcxt.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6clxcxt.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6clxcxt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx6clxcxt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx6clxcxt.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6clxcxt.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6clxcxt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx6clxcxt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx6clxcxt.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6clxcxt.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6clxcxt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx6clxcxt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx6clxcxt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7fqcj9ps.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7fqcj9ps.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fqcj9ps.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fqcj9ps.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7fqcj9ps.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7fqcj9ps.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fqcj9ps.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fqcj9ps.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7fqcj9ps.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7fqcj9ps.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fqcj9ps.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fqcj9ps.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7fqcj9ps.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fqcj9ps.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp96w0rawj.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp96w0rawj.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp96w0rawj.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp96w0rawj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp96w0rawj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp96w0rawj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp96w0rawj.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp96w0rawj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp96w0rawj.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp96w0rawj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp96w0rawj.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp96w0rawj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp96w0rawj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96w0rawj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk3kgc8lw.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpk3kgc8lw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk3kgc8lw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk3kgc8lw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk3kgc8lw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk3kgc8lw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk3kgc8lw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk3kgc8lw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk3kgc8lw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk3kgc8lw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk3kgc8lw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk3kgc8lw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk3kgc8lw.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk3kgc8lw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnclcwpyh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpnclcwpyh.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnclcwpyh.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnclcwpyh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnclcwpyh.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnclcwpyh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnclcwpyh.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnclcwpyh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnclcwpyh.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnclcwpyh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnclcwpyh.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnclcwpyh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnclcwpyh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnclcwpyh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # check if the sum of the elements is less than or equal\
    \ the maximum possible weight w\n    if sum(q) <= w\n        # check if the vector\
    \ is balanced\n        if is_balanced(q)\n            return true\n        else\n\
    \            return false\n        end\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3,\
    \ 2, 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuq4ys3_p.jl:40\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpuq4ys3_p.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuq4ys3_p.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuq4ys3_p.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpuq4ys3_p.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpuq4ys3_p.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuq4ys3_p.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuq4ys3_p.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpuq4ys3_p.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpuq4ys3_p.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuq4ys3_p.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuq4ys3_p.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpuq4ys3_p.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpu"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuq4ys3_p.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkq5mpq2p.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpkq5mpq2p.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq5mpq2p.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq5mpq2p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkq5mpq2p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpkq5mpq2p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq5mpq2p.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq5mpq2p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkq5mpq2p.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpkq5mpq2p.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq5mpq2p.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq5mpq2p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkq5mpq2p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkq5mpq2p.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzn4a5mgo.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpzn4a5mgo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzn4a5mgo.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzn4a5mgo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzn4a5mgo.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpzn4a5mgo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzn4a5mgo.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzn4a5mgo.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp026rdmy7.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp026rdmy7.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp026rdmy7.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp026rdmy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp026rdmy7.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp026rdmy7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp026rdmy7.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp026rdmy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp026rdmy7.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp026rdmy7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp026rdmy7.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp026rdmy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp026rdmy7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp026rdmy7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp90s2cyxx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp90s2cyxx.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90s2cyxx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90s2cyxx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp90s2cyxx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp90s2cyxx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90s2cyxx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90s2cyxx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp90s2cyxx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp90s2cyxx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90s2cyxx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90s2cyxx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp90s2cyxx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp90s2cyxx.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnrz4z1o6.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpnrz4z1o6.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrz4z1o6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnrz4z1o6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnrz4z1o6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnrz4z1o6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrz4z1o6.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnrz4z1o6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnrz4z1o6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpnrz4z1o6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrz4z1o6.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnrz4z1o6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpnrz4z1o6.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpn"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrz4z1o6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfkatsjlo.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfkatsjlo.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfkatsjlo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfkatsjlo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpfkatsjlo.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfkatsjlo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfkatsjlo.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfkatsjlo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpfkatsjlo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfkatsjlo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfkatsjlo.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfkatsjlo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpfkatsjlo.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkatsjlo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoxuf8_t6.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpoxuf8_t6.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoxuf8_t6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoxuf8_t6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoxuf8_t6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpoxuf8_t6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoxuf8_t6.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoxuf8_t6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoxuf8_t6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpoxuf8_t6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoxuf8_t6.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoxuf8_t6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoxuf8_t6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoxuf8_t6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ny3sg73.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7ny3sg73.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ny3sg73.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ny3sg73.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ny3sg73.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7ny3sg73.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ny3sg73.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ny3sg73.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ny3sg73.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7ny3sg73.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ny3sg73.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ny3sg73.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ny3sg73.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ny3sg73.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm7anfw3o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpm7anfw3o.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm7anfw3o.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm7anfw3o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm7anfw3o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm7anfw3o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm7anfw3o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm7anfw3o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm7anfw3o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm7anfw3o.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm7anfw3o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm7anfw3o.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm7anfw3o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7anfw3o.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpky13xgav.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpky13xgav.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpky13xgav.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpky13xgav.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpky13xgav.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpky13xgav.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpky13xgav.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpky13xgav.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpky13xgav.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpky13xgav.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpky13xgav.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpky13xgav.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpky13xgav.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpky13xgav.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw79ckk9l.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpw79ckk9l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw79ckk9l.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw79ckk9l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw79ckk9l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw79ckk9l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw79ckk9l.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw79ckk9l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw79ckk9l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw79ckk9l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw79ckk9l.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw79ckk9l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw79ckk9l.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw79ckk9l.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgmzdg28i.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpgmzdg28i.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzdg28i.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzdg28i.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgmzdg28i.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgmzdg28i.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzdg28i.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzdg28i.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgmzdg28i.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgmzdg28i.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzdg28i.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzdg28i.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgmzdg28i.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpg"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgmzdg28i.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpofdace41.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpofdace41.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofdace41.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofdace41.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpofdace41.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpofdace41.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofdace41.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofdace41.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpofdace41.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpofdace41.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofdace41.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofdace41.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpofdace41.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpofdace41.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpritjmluw.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpritjmluw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpritjmluw.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpritjmluw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpritjmluw.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpritjmluw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpritjmluw.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpritjmluw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpritjmluw.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpritjmluw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpritjmluw.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpritjmluw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpritjmluw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpritjmluw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvgiampta.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpvgiampta.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgiampta.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgiampta.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvgiampta.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvgiampta.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgiampta.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgiampta.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvgiampta.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvgiampta.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgiampta.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgiampta.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvgiampta.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvgiampta.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn523bpdk.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpn523bpdk.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn523bpdk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn523bpdk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpn523bpdk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpn523bpdk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn523bpdk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn523bpdk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpn523bpdk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpn523bpdk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn523bpdk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn523bpdk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpn523bpdk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn523bpdk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpejsguc3q.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpejsguc3q.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpejsguc3q.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpejsguc3q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpejsguc3q.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpejsguc3q.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpejsguc3q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpejsguc3q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpejsguc3q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpejsguc3q.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpejsguc3q.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpejsguc3q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpejsguc3q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpejsguc3q.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvjcf8bph.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpvjcf8bph.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvjcf8bph.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvjcf8bph.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvjcf8bph.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvjcf8bph.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvjcf8bph.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvjcf8bph.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvjcf8bph.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvjcf8bph.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvjcf8bph.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvjcf8bph.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvjcf8bph.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvjcf8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjcf8bph.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9ei4ncbj.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp9ei4ncbj.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ei4ncbj.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ei4ncbj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9ei4ncbj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9ei4ncbj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ei4ncbj.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ei4ncbj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9ei4ncbj.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9ei4ncbj.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ei4ncbj.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ei4ncbj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9ei4ncbj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ei4ncbj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpptfsue3v.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpptfsue3v.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptfsue3v.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptfsue3v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpptfsue3v.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpptfsue3v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptfsue3v.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptfsue3v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpptfsue3v.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpptfsue3v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptfsue3v.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptfsue3v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpptfsue3v.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpptfsue3v.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprnj1vk53.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmprnj1vk53.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnj1vk53.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnj1vk53.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprnj1vk53.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmprnj1vk53.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnj1vk53.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnj1vk53.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprnj1vk53.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmprnj1vk53.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnj1vk53.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnj1vk53.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprnj1vk53.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprnj1vk53.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9zuhduts.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp9zuhduts.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zuhduts.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zuhduts.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9zuhduts.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9zuhduts.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zuhduts.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zuhduts.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9zuhduts.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9zuhduts.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zuhduts.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zuhduts.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9zuhduts.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zuhduts.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp81nt8ocv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp81nt8ocv.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81nt8ocv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81nt8ocv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp81nt8ocv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp81nt8ocv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81nt8ocv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81nt8ocv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp81nt8ocv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp81nt8ocv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp81nt8ocv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp81nt8ocv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp81nt8ocv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81nt8ocv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsnr9lnwg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpsnr9lnwg.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsnr9lnwg.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsnr9lnwg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsnr9lnwg.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsnr9lnwg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsnr9lnwg.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsnr9lnwg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsnr9lnwg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpsnr9lnwg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsnr9lnwg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsnr9lnwg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsnr9lnwg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsnr9lnwg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdgrq04uf.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpdgrq04uf.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdgrq04uf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdgrq04uf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdgrq04uf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdgrq04uf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdgrq04uf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdgrq04uf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdgrq04uf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdgrq04uf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdgrq04uf.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdgrq04uf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdgrq04uf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpd"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdgrq04uf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpijd_v9ag.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpijd_v9ag.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpijd_v9ag.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpijd_v9ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpijd_v9ag.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpijd_v9ag.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpijd_v9ag.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpijd_v9ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpijd_v9ag.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpijd_v9ag.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpijd_v9ag.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpijd_v9ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpijd_v9ag.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpi"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpijd_v9ag.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdmi9h2cm.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpdmi9h2cm.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdmi9h2cm.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmi9h2cm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdmi9h2cm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdmi9h2cm.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdmi9h2cm.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmi9h2cm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdmi9h2cm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdmi9h2cm.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdmi9h2cm.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmi9h2cm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdmi9h2cm.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmi9h2cm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpstsxw2r8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpstsxw2r8.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstsxw2r8.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstsxw2r8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpstsxw2r8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpstsxw2r8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstsxw2r8.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstsxw2r8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpstsxw2r8.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpstsxw2r8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpstsxw2r8.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpstsxw2r8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpstsxw2r8.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpstsxw2r8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    # Your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw6lfusxa.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpw6lfusxa.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw6lfusxa.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw6lfusxa.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpw6lfusxa.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n    \
    \ @ Main /tmp/tmpw6lfusxa.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw6lfusxa.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw6lfusxa.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp42yhr2c5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp42yhr2c5.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42yhr2c5.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42yhr2c5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp42yhr2c5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp42yhr2c5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42yhr2c5.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42yhr2c5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp42yhr2c5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp42yhr2c5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42yhr2c5.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42yhr2c5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp42yhr2c5.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp42yhr2c5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpycbu5dtp.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpycbu5dtp.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycbu5dtp.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycbu5dtp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpycbu5dtp.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpycbu5dtp.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycbu5dtp.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycbu5dtp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpycbu5dtp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpycbu5dtp.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycbu5dtp.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycbu5dtp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpycbu5dtp.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpy"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycbu5dtp.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9qwzoc_g.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp9qwzoc_g.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qwzoc_g.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qwzoc_g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9qwzoc_g.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9qwzoc_g.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qwzoc_g.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qwzoc_g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9qwzoc_g.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9qwzoc_g.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9qwzoc_g.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9qwzoc_g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp9qwzoc_g.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qwzoc_g.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9zpfkjdv.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp9zpfkjdv.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zpfkjdv.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zpfkjdv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9zpfkjdv.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9zpfkjdv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zpfkjdv.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zpfkjdv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9zpfkjdv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9zpfkjdv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9zpfkjdv.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9zpfkjdv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9zpfkjdv.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zpfkjdv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbqwi7bj5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpbqwi7bj5.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbqwi7bj5.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbqwi7bj5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbqwi7bj5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpbqwi7bj5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbqwi7bj5.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbqwi7bj5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbqwi7bj5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpbqwi7bj5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbqwi7bj5.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbqwi7bj5.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbqwi7bj5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpb"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbqwi7bj5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppkkbpa1m.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmppkkbpa1m.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppkkbpa1m.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppkkbpa1m.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppkkbpa1m.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmppkkbpa1m.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppkkbpa1m.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppkkbpa1m.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppkkbpa1m.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmppkkbpa1m.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppkkbpa1m.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppkkbpa1m.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppkkbpa1m.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppkkbpa1m.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp92b8ltks.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp92b8ltks.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp92b8ltks.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp92b8ltks.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp92b8ltks.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp92b8ltks.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp92b8ltks.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp92b8ltks.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp92b8ltks.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp92b8ltks.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp92b8ltks.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp92b8ltks.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp92b8ltks.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp9"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92b8ltks.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx9dwyuyt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpx9dwyuyt.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx9dwyuyt.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx9dwyuyt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx9dwyuyt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx9dwyuyt.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx9dwyuyt.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx9dwyuyt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx9dwyuyt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx9dwyuyt.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx9dwyuyt.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx9dwyuyt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpx9dwyuyt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9dwyuyt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplfyip8fr.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmplfyip8fr.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfyip8fr.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfyip8fr.jl:29\ntest set:\
    \ Error During Test at /tmp/tmplfyip8fr.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplfyip8fr.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfyip8fr.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfyip8fr.jl:29\ntest set:\
    \ Error During Test at /tmp/tmplfyip8fr.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplfyip8fr.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfyip8fr.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfyip8fr.jl:29\ntest set:\
    \ Error During Test at /tmp/tmplfyip8fr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfyip8fr.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6jd5bxcg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp6jd5bxcg.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6jd5bxcg.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6jd5bxcg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6jd5bxcg.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6jd5bxcg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6jd5bxcg.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6jd5bxcg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6jd5bxcg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6jd5bxcg.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6jd5bxcg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6jd5bxcg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6jd5bxcg.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jd5bxcg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzmoqfaf_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpzmoqfaf_.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmoqfaf_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmoqfaf_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzmoqfaf_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzmoqfaf_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmoqfaf_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmoqfaf_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzmoqfaf_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzmoqfaf_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmoqfaf_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmoqfaf_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzmoqfaf_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzmoqf"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzmoqfaf_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if ispalindrome(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplb9v21sa.jl:38\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmplb9v21sa.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplb9v21sa.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplb9v21sa.jl:37\ntest set:\
    \ Error During Test at /tmp/tmplb9v21sa.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplb9v21sa.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplb9v21sa.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplb9v21sa.jl:37\ntest set:\
    \ Error During Test at /tmp/tmplb9v21sa.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplb9v21sa.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplb9v21sa.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplb9v21sa.jl:37\ntest set:\
    \ Error During Test at /tmp/tmplb9v21sa.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplb9v21sa.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_fbn_lzn.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_fbn_lzn.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fbn_lzn.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fbn_lzn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_fbn_lzn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_fbn_lzn.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fbn_lzn.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fbn_lzn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_fbn_lzn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_fbn_lzn.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_fbn_lzn.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_fbn_lzn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_fbn_lzn.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fbn_lzn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpul4kl7oz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpul4kl7oz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpul4kl7oz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpul4kl7oz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpul4kl7oz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpul4kl7oz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpul4kl7oz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpul4kl7oz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpul4kl7oz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpul4kl7oz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpul4kl7oz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpul4kl7oz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpul4kl7oz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpul4kl7oz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7_fbw41l.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7_fbw41l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7_fbw41l.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7_fbw41l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7_fbw41l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7_fbw41l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7_fbw41l.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7_fbw41l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7_fbw41l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7_fbw41l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7_fbw41l.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7_fbw41l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7_fbw41l.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7_fbw41l.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0p95jy7a.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp0p95jy7a.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p95jy7a.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p95jy7a.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0p95jy7a.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0p95jy7a.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p95jy7a.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p95jy7a.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0p95jy7a.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0p95jy7a.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p95jy7a.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p95jy7a.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0p95jy7a.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0p95jy7a.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi5v2py9h.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpi5v2py9h.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5v2py9h.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5v2py9h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpi5v2py9h.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpi5v2py9h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5v2py9h.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5v2py9h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpi5v2py9h.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpi5v2py9h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5v2py9h.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5v2py9h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpi5v2py9h.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi5v2py9h.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1u687i__.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp1u687i__.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u687i__.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u687i__.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1u687i__.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1u687i__.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u687i__.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u687i__.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1u687i__.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1u687i__.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u687i__.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u687i__.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1u687i__.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1u687i__.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4p04mywx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4p04mywx.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p04mywx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4p04mywx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4p04mywx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4p04mywx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p04mywx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4p04mywx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4p04mywx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4p04mywx.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p04mywx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4p04mywx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4p04mywx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4p04mywx.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ef3411e.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp6ef3411e.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ef3411e.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ef3411e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6ef3411e.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6ef3411e.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ef3411e.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ef3411e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6ef3411e.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6ef3411e.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ef3411e.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ef3411e.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6ef3411e.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ef3411e.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_zqkhd8l.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp_zqkhd8l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zqkhd8l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zqkhd8l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_zqkhd8l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_zqkhd8l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zqkhd8l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zqkhd8l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_zqkhd8l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_zqkhd8l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zqkhd8l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zqkhd8l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_zqkhd8l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zqkhd8l.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1clz_of1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp1clz_of1.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1clz_of1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1clz_of1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1clz_of1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1clz_of1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1clz_of1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1clz_of1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1clz_of1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1clz_of1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1clz_of1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1clz_of1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1clz_of1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1clz_of1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4a8zhmk9.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4a8zhmk9.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4a8zhmk9.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4a8zhmk9.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4a8zhmk9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4a8zhmk9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4a8zhmk9.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4a8zhmk9.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4a8zhmk9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4a8zhmk9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4a8zhmk9.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4a8zhmk9.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4a8zhmk9.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4a8zhmk9.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgy37j1n2.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpgy37j1n2.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgy37j1n2.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgy37j1n2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpgy37j1n2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgy37j1n2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgy37j1n2.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgy37j1n2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpgy37j1n2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgy37j1n2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgy37j1n2.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgy37j1n2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpgy37j1n2.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgy37j1n2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz_ub8zre.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpz_ub8zre.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz_ub8zre.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz_ub8zre.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz_ub8zre.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz_ub8zre.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz_ub8zre.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz_ub8zre.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz_ub8zre.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz_ub8zre.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz_ub8zre.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz_ub8zre.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz_ub8zre.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_ub8zre.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv3mjmqyq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpv3mjmqyq.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv3mjmqyq.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv3mjmqyq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv3mjmqyq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv3mjmqyq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv3mjmqyq.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv3mjmqyq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv3mjmqyq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv3mjmqyq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv3mjmqyq.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv3mjmqyq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv3mjmqyq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3mjmqyq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz1rlezzo.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpz1rlezzo.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1rlezzo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz1rlezzo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz1rlezzo.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz1rlezzo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1rlezzo.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz1rlezzo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz1rlezzo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz1rlezzo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1rlezzo.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz1rlezzo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz1rlezzo.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1rlezzo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3631qetu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp3631qetu.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3631qetu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3631qetu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3631qetu.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3631qetu.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3631qetu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3631qetu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3631qetu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3631qetu.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3631qetu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3631qetu.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3631qetu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3631qetu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvz72_h27.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpvz72_h27.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvz72_h27.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvz72_h27.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvz72_h27.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvz72_h27.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvz72_h27.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvz72_h27.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvz72_h27.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvz72_h27.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvz72_h27.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvz72_h27.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvz72_h27.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvz72_h27.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxoal9ku6.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpxoal9ku6.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxoal9ku6.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxoal9ku6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxoal9ku6.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxoal9ku6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxoal9ku6.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxoal9ku6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxoal9ku6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxoal9ku6.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxoal9ku6.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxoal9ku6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxoal9ku6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxoal9ku6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && is_palindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpobde63rc.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpobde63rc.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobde63rc.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobde63rc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpobde63rc.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpobde63rc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobde63rc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobde63rc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpobde63rc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpobde63rc.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobde63rc.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobde63rc.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpobde63rc.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobde63rc.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw0bazft8.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpw0bazft8.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw0bazft8.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw0bazft8.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw0bazft8.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw0bazft8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw0bazft8.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw0bazft8.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw0bazft8.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw0bazft8.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw0bazft8.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw0bazft8.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw0bazft8.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw0bazft8.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwgg3db3d.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpwgg3db3d.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgg3db3d.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgg3db3d.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwgg3db3d.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpwgg3db3d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgg3db3d.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgg3db3d.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwgg3db3d.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpwgg3db3d.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwgg3db3d.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwgg3db3d.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwgg3db3d.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpw"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgg3db3d.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6rvkv78a.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp6rvkv78a.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rvkv78a.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rvkv78a.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6rvkv78a.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6rvkv78a.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rvkv78a.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rvkv78a.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6rvkv78a.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6rvkv78a.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6rvkv78a.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6rvkv78a.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6rvkv78a.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6rvkv78a.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8n91jlnd.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8n91jlnd.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8n91jlnd.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8n91jlnd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8n91jlnd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8n91jlnd.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8n91jlnd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8n91jlnd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8n91jlnd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8n91jlnd.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8n91jlnd.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8n91jlnd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8n91jlnd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8n91jlnd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqtmwzh9w.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpqtmwzh9w.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtmwzh9w.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtmwzh9w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqtmwzh9w.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpqtmwzh9w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtmwzh9w.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtmwzh9w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqtmwzh9w.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpqtmwzh9w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtmwzh9w.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtmwzh9w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqtmwzh9w.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtmwzh9w.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptx5xdh4q.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmptx5xdh4q.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptx5xdh4q.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptx5xdh4q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptx5xdh4q.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmptx5xdh4q.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptx5xdh4q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptx5xdh4q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptx5xdh4q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmptx5xdh4q.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptx5xdh4q.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptx5xdh4q.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptx5xdh4q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptx5xdh4q.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzxss93dq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpzxss93dq.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzxss93dq.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzxss93dq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxss93dq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzxss93dq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzxss93dq.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzxss93dq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxss93dq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzxss93dq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzxss93dq.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzxss93dq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxss93dq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxss93dq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif sum(q)\
    \ <= w\n        if q == reverse(q)\n            return true\n        else\n  \
    \          return false\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn461ekmr.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpn461ekmr.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn461ekmr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn461ekmr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpn461ekmr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpn461ekmr.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn461ekmr.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn461ekmr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpn461ekmr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpn461ekmr.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn461ekmr.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn461ekmr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpn461ekmr.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn461ekmr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ogzwltd.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp7ogzwltd.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ogzwltd.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ogzwltd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ogzwltd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7ogzwltd.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ogzwltd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ogzwltd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ogzwltd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp7ogzwltd.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ogzwltd.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ogzwltd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp7ogzwltd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ogzwltd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk4fwcruw.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpk4fwcruw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk4fwcruw.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk4fwcruw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpk4fwcruw.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk4fwcruw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk4fwcruw.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk4fwcruw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpk4fwcruw.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk4fwcruw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk4fwcruw.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk4fwcruw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpk4fwcruw.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk4fwcruw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzv2q_vg_.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpzv2q_vg_.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzv2q_vg_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzv2q_vg_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpzv2q_vg_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzv2q_vg_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzv2q_vg_.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzv2q_vg_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpzv2q_vg_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzv2q_vg_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzv2q_vg_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzv2q_vg_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpzv2q_vg_.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzv2q_vg_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxrufa7ft.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpxrufa7ft.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrufa7ft.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrufa7ft.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxrufa7ft.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxrufa7ft.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrufa7ft.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrufa7ft.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxrufa7ft.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpxrufa7ft.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrufa7ft.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrufa7ft.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxrufa7ft.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpx"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxrufa7ft.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp80bkx5n3.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp80bkx5n3.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80bkx5n3.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80bkx5n3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp80bkx5n3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp80bkx5n3.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80bkx5n3.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80bkx5n3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp80bkx5n3.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp80bkx5n3.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80bkx5n3.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80bkx5n3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp80bkx5n3.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80bkx5n3.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgswbwx20.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpgswbwx20.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgswbwx20.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgswbwx20.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgswbwx20.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgswbwx20.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgswbwx20.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgswbwx20.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgswbwx20.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpgswbwx20.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgswbwx20.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgswbwx20.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgswbwx20.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpg"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgswbwx20.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdv_r977l.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpdv_r977l.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdv_r977l.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdv_r977l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdv_r977l.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdv_r977l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdv_r977l.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdv_r977l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdv_r977l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpdv_r977l.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdv_r977l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdv_r977l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpdv_r977l.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdv_r977l.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3xxhvc0j.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp3xxhvc0j.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xxhvc0j.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xxhvc0j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3xxhvc0j.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3xxhvc0j.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xxhvc0j.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xxhvc0j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3xxhvc0j.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3xxhvc0j.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3xxhvc0j.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3xxhvc0j.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3xxhvc0j.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xxhvc0j.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5aal8l_t.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp5aal8l_t.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5aal8l_t.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5aal8l_t.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5aal8l_t.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5aal8l_t.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5aal8l_t.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5aal8l_t.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5aal8l_t.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5aal8l_t.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5aal8l_t.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5aal8l_t.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5aal8l_t.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5aal8l_t.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfr0vbj6y.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpfr0vbj6y.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfr0vbj6y.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfr0vbj6y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfr0vbj6y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfr0vbj6y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfr0vbj6y.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfr0vbj6y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfr0vbj6y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpfr0vbj6y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfr0vbj6y.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfr0vbj6y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfr0vbj6y.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfr0vbj6y.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjks_yoa2.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjks_yoa2.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjks_yoa2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjks_yoa2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjks_yoa2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjks_yoa2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjks_yoa2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjks_yoa2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjks_yoa2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjks_yoa2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjks_yoa2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjks_yoa2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjks_yoa2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjks_yoa2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazic1js1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpazic1js1.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazic1js1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazic1js1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpazic1js1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpazic1js1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazic1js1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazic1js1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpazic1js1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpazic1js1.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpazic1js1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpazic1js1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpazic1js1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazic1js1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplkzfbo0y.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmplkzfbo0y.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplkzfbo0y.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplkzfbo0y.jl:33\ntest set:\
    \ Error During Test at /tmp/tmplkzfbo0y.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplkzfbo0y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplkzfbo0y.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplkzfbo0y.jl:33\ntest set:\
    \ Error During Test at /tmp/tmplkzfbo0y.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmplkzfbo0y.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplkzfbo0y.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplkzfbo0y.jl:33\ntest set:\
    \ Error During Test at /tmp/tmplkzfbo0y.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplkzfbo0y.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvpxly4kv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpvpxly4kv.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvpxly4kv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvpxly4kv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvpxly4kv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvpxly4kv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvpxly4kv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvpxly4kv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvpxly4kv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpvpxly4kv.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvpxly4kv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvpxly4kv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpvpxly4kv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvpxly4kv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzi_sn8ga.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpzi_sn8ga.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi_sn8ga.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzi_sn8ga.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzi_sn8ga.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzi_sn8ga.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi_sn8ga.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzi_sn8ga.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzi_sn8ga.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpzi_sn8ga.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzi_sn8ga.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzi_sn8ga.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzi_sn8ga.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzi_sn8ga.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjnj8u1jo.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpjnj8u1jo.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjnj8u1jo.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjnj8u1jo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjnj8u1jo.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjnj8u1jo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjnj8u1jo.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjnj8u1jo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjnj8u1jo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpjnj8u1jo.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjnj8u1jo.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjnj8u1jo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjnj8u1jo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnj8u1jo.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp18h6v9s4.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp18h6v9s4.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18h6v9s4.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18h6v9s4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp18h6v9s4.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp18h6v9s4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18h6v9s4.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18h6v9s4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp18h6v9s4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp18h6v9s4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18h6v9s4.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18h6v9s4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp18h6v9s4.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18h6v9s4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv_jfcjud.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpv_jfcjud.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv_jfcjud.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv_jfcjud.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv_jfcjud.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv_jfcjud.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv_jfcjud.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv_jfcjud.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv_jfcjud.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpv_jfcjud.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv_jfcjud.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv_jfcjud.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv_jfcjud.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_jfcjud.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp54wooli5.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp54wooli5.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp54wooli5.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp54wooli5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp54wooli5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp54wooli5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp54wooli5.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp54wooli5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp54wooli5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp54wooli5.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp54wooli5.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp54wooli5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp54wooli5.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54wooli5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeqssrls4.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpeqssrls4.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeqssrls4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeqssrls4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpeqssrls4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpeqssrls4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeqssrls4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeqssrls4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpeqssrls4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpeqssrls4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeqssrls4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeqssrls4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpeqssrls4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpe"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeqssrls4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8stgfy3w.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8stgfy3w.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8stgfy3w.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8stgfy3w.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8stgfy3w.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8stgfy3w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8stgfy3w.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8stgfy3w.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8stgfy3w.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8stgfy3w.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8stgfy3w.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8stgfy3w.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8stgfy3w.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8stgfy3w.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5col6sh_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp5col6sh_.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5col6sh_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5col6sh_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5col6sh_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5col6sh_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5col6sh_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5col6sh_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5col6sh_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5col6sh_.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5col6sh_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5col6sh_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5col6sh_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5col6sh_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz4v40kxh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpz4v40kxh.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4v40kxh.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4v40kxh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpz4v40kxh.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz4v40kxh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4v40kxh.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4v40kxh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpz4v40kxh.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz4v40kxh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz4v40kxh.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz4v40kxh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpz4v40kxh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz4v40kxh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpayri6ypk.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpayri6ypk.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpayri6ypk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpayri6ypk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpayri6ypk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpayri6ypk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpayri6ypk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpayri6ypk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpayri6ypk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpayri6ypk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpayri6ypk.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpayri6ypk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpayri6ypk.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpayri6ypk.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2907h5fa.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp2907h5fa.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2907h5fa.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2907h5fa.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp2907h5fa.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp2907h5fa.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2907h5fa.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2907h5fa.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp2907h5fa.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp2907h5fa.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2907h5fa.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2907h5fa.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp2907h5fa.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2907h5fa.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3n94kcl2.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp3n94kcl2.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3n94kcl2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3n94kcl2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3n94kcl2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3n94kcl2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3n94kcl2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3n94kcl2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3n94kcl2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3n94kcl2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3n94kcl2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3n94kcl2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3n94kcl2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3n94kcl2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkzs5tfzk.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpkzs5tfzk.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkzs5tfzk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkzs5tfzk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkzs5tfzk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpkzs5tfzk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkzs5tfzk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkzs5tfzk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkzs5tfzk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpkzs5tfzk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkzs5tfzk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkzs5tfzk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkzs5tfzk.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkzs5tfzk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) > w\n        return false\n    elseif ispalindrome(q)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0me4z_3t.jl:36\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp0me4z_3t.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0me4z_3t.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0me4z_3t.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp0me4z_3t.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0me4z_3t.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0me4z_3t.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0me4z_3t.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp0me4z_3t.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0me4z_3t.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0me4z_3t.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0me4z_3t.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp0me4z_3t.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0me4z_3t.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1gr630j3.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp1gr630j3.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1gr630j3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gr630j3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1gr630j3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1gr630j3.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1gr630j3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gr630j3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1gr630j3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1gr630j3.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1gr630j3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gr630j3.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1gr630j3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1gr630j3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4et6r27z.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp4et6r27z.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4et6r27z.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4et6r27z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4et6r27z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4et6r27z.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4et6r27z.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4et6r27z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4et6r27z.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp4et6r27z.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4et6r27z.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4et6r27z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4et6r27z.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4et6r27z.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2f7_cilz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp2f7_cilz.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f7_cilz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f7_cilz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2f7_cilz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp2f7_cilz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f7_cilz.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f7_cilz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2f7_cilz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp2f7_cilz.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f7_cilz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f7_cilz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2f7_cilz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp2"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2f7_cilz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpywycf5du.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpywycf5du.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpywycf5du.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpywycf5du.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpywycf5du.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpywycf5du.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpywycf5du.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpywycf5du.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpywycf5du.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpywycf5du.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpywycf5du.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpywycf5du.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpywycf5du.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpywycf5du.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0xoxxvse.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp0xoxxvse.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xoxxvse.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xoxxvse.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0xoxxvse.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0xoxxvse.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xoxxvse.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xoxxvse.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0xoxxvse.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp0xoxxvse.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xoxxvse.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xoxxvse.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0xoxxvse.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xoxxvse.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3qwiv3j4.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmp3qwiv3j4.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qwiv3j4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qwiv3j4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3qwiv3j4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3qwiv3j4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qwiv3j4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qwiv3j4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3qwiv3j4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3qwiv3j4.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qwiv3j4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qwiv3j4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3qwiv3j4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qwiv3j4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1jipp5ag.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp1jipp5ag.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jipp5ag.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jipp5ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1jipp5ag.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1jipp5ag.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jipp5ag.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jipp5ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1jipp5ag.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp1jipp5ag.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jipp5ag.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jipp5ag.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp1jipp5ag.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1jipp5ag.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5wseh8mw.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp5wseh8mw.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5wseh8mw.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5wseh8mw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5wseh8mw.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5wseh8mw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5wseh8mw.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5wseh8mw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5wseh8mw.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp5wseh8mw.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5wseh8mw.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5wseh8mw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5wseh8mw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wseh8mw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd34suvzh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpd34suvzh.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd34suvzh.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd34suvzh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd34suvzh.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpd34suvzh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd34suvzh.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd34suvzh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd34suvzh.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpd34suvzh.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd34suvzh.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd34suvzh.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd34suvzh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd34suvzh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpar6g2mia.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpar6g2mia.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpar6g2mia.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpar6g2mia.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpar6g2mia.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpar6g2mia.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpar6g2mia.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpar6g2mia.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpar6g2mia.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpar6g2mia.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpar6g2mia.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpar6g2mia.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpar6g2mia.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpar6g2mia.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk2y7c50u.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpk2y7c50u.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk2y7c50u.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk2y7c50u.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk2y7c50u.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk2y7c50u.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk2y7c50u.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk2y7c50u.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk2y7c50u.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpk2y7c50u.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk2y7c50u.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk2y7c50u.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk2y7c50u.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk2y7c50u.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp47z53i9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpp47z53i9.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp47z53i9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp47z53i9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp47z53i9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp47z53i9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp47z53i9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp47z53i9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp47z53i9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp47z53i9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp47z53i9.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp47z53i9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp47z53i9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp47z53i9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpatg_12gf.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpatg_12gf.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatg_12gf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatg_12gf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpatg_12gf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpatg_12gf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatg_12gf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatg_12gf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpatg_12gf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpatg_12gf.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpatg_12gf.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpatg_12gf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpatg_12gf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpatg_12gf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz848bl78.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpz848bl78.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz848bl78.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz848bl78.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz848bl78.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz848bl78.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz848bl78.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz848bl78.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz848bl78.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpz848bl78.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz848bl78.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz848bl78.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz848bl78.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz848bl78.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpih1w4ghy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpih1w4ghy.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih1w4ghy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih1w4ghy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpih1w4ghy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpih1w4ghy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih1w4ghy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih1w4ghy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpih1w4ghy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpih1w4ghy.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpih1w4ghy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpih1w4ghy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpih1w4ghy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpih1w4ghy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa4yebiah.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpa4yebiah.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4yebiah.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4yebiah.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa4yebiah.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpa4yebiah.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4yebiah.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4yebiah.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa4yebiah.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpa4yebiah.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4yebiah.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4yebiah.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpa4yebiah.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpa4yeb"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4yebiah.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpes_m9hm2.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpes_m9hm2.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpes_m9hm2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpes_m9hm2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpes_m9hm2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpes_m9hm2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpes_m9hm2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpes_m9hm2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpes_m9hm2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpes_m9hm2.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpes_m9hm2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpes_m9hm2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpes_m9hm2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpes_m9hm2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return ispalindrome(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl6_c7lde.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpl6_c7lde.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6_c7lde.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6_c7lde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6_c7lde.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl6_c7lde.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6_c7lde.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6_c7lde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6_c7lde.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl6_c7lde.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl6_c7lde.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl6_c7lde.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl6_c7lde.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6_c7lde.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    if sum(q) <= w && ispalindrome(q)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\t@test(candidate([1,\
    \ 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t@test(candidate([3,\
    \ 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\t@test(candidate([5],\
    \ 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_08q675h.jl:34\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp_08q675h.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_08q675h.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_08q675h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_08q675h.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_08q675h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_08q675h.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_08q675h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_08q675h.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp_08q675h.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_08q675h.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_08q675h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_08q675h.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_08q675h.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return (sum(q) <= w) && (q == reverse(q))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2,\
    \ 3], 9) == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3],\
    \ 5) == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1,\
    \ 2, 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl31gvuhk.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpl31gvuhk.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl31gvuhk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl31gvuhk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl31gvuhk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl31gvuhk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl31gvuhk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl31gvuhk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl31gvuhk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl31gvuhk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl31gvuhk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl31gvuhk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpl31gvuhk.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl31gvuhk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return is_balanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoyga3sjk.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpoyga3sjk.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoyga3sjk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoyga3sjk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoyga3sjk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpoyga3sjk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoyga3sjk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoyga3sjk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoyga3sjk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpoyga3sjk.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoyga3sjk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoyga3sjk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoyga3sjk.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpo"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoyga3sjk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6b47d203.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp6b47d203.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6b47d203.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6b47d203.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6b47d203.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6b47d203.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6b47d203.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6b47d203.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6b47d203.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp6b47d203.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6b47d203.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6b47d203.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6b47d203.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6b47d203.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqf1ir998.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpqf1ir998.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqf1ir998.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqf1ir998.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqf1ir998.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpqf1ir998.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqf1ir998.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqf1ir998.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqf1ir998.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpqf1ir998.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqf1ir998.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqf1ir998.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpqf1ir998.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqf1ir998.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_balanced(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaffgff1g.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_balanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpaffgff1g.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaffgff1g.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaffgff1g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpaffgff1g.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpaffgff1g.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaffgff1g.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaffgff1g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpaffgff1g.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_balanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpaffgff1g.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaffgff1g.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaffgff1g.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpaffgff1g.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_balanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpa"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaffgff1g.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && q == reverse(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    6      6\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    sum(q) <= w && ispalindrome(q)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9) == true)\n\
    \t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5) == true)\n\t\
    @test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2, 3], 6) == false)\n\
    \t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp2qpgjon.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: ispalindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmpp2qpgjon.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp2qpgjon.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp2qpgjon.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp2qpgjon.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: ispalindrome not defined\n \
    \ Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp2qpgjon.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp2qpgjon.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp2qpgjon.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp2qpgjon.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpp2qpgjon.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp2qpgjon.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp2qpgjon.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp2qpgjon.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp2qpgjon.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return isbalanced(q) && sum(q) <= w\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmrx06p4x.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: isbalanced not\
    \ defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n   \
    \  @ Main /tmp/tmpmrx06p4x.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmrx06p4x.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmrx06p4x.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmrx06p4x.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmrx06p4x.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmrx06p4x.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmrx06p4x.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmrx06p4x.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: isbalanced not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmrx06p4x.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmrx06p4x.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmrx06p4x.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmrx06p4x.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([3, 2, 3], 1) == false\n  UndefVarError: isbalanced not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmpmrx06"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmrx06p4x.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n    The object q will fly if it's balanced (it is a palindromic\
    \ vector) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n\n    Example:\n    >>> will_it_fly([1, 2], 5)\n    false\n    #\
    \ 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    >>>\
    \ will_it_fly([3, 2, 3], 1)\n    false\n    # it's balanced, but 3+2+3 is more\
    \ than the maximum possible weight.\n\n    >>> will_it_fly([3, 2, 3], 9)\n   \
    \ true\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    \n    >>> will_it_fly([3], 5)\n    true\n    # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n    \"\"\"\nfunction will_it_fly(q::Vector{Int64},\
    \ w::Int64)::Bool \n    return sum(q) <= w && is_palindrome(q)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = will_it_fly;\n\t@test(candidate([3, 2, 3], 9)\
    \ == true)\n\t@test(candidate([1, 2], 5) == false)\n\t@test(candidate([3], 5)\
    \ == true)\n\t@test(candidate([3, 2, 3], 1) == false)\n\t@test(candidate([1, 2,\
    \ 3], 6) == false)\n\t@test(candidate([5], 5) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8yqv96l9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([3, 2, 3], 9) == true\n  UndefVarError: is_palindrome\
    \ not defined\n  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n\
    \     @ Main /tmp/tmp8yqv96l9.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8yqv96l9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8yqv96l9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8yqv96l9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 2], 5) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8yqv96l9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8yqv96l9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8yqv96l9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8yqv96l9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([3], 5) == true\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /tmp/tmp8yqv96l9.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8yqv96l9.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8yqv96l9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8yqv96l9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3], 6) == false\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] will_it_fly(q::Vector{Int64}, w::Int64)\n     @ Main /"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yqv96l9.jl:27\n"
  exit_code: 1
  status: SyntaxError

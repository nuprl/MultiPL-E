name: HumanEval_76_is_simple_power
language: jl
results:
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzj0vbu24.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzj0vbu24.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzj0vbu24.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj0vbu24.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzj0vbu24.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpzj0vbu24.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzj0vbu24.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzj0vbu24.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj0vbu24.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzj0vbu24.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpzj0vbu24.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzj0vbu24.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzj0vbu24.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzj0vbu24.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzj0vbu24.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmppkn1i7og.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmppkn1i7og.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmppkn1i7og.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkn1i7og.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppkn1i7og.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmppkn1i7og.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmppkn1i7og.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkn1i7og.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppkn1i7og.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmppkn1i7og.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppkn1i7og.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppkn1i7og.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppkn1i7og.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppkn1i7og.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwasgg86q.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpwasgg86q.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpwasgg86q.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwasgg86q.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwasgg86q.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwasgg86q.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpwasgg86q.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpwasgg86q.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwasgg86q.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwasgg86q.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwasgg86q.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpwasgg86q.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpwasgg86q.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwasgg86q.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwasgg86q.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpeezvtcow.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpeezvtcow.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpeezvtcow.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeezvtcow.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeezvtcow.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpeezvtcow.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpeezvtcow.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeezvtcow.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeezvtcow.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpeezvtcow.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpeezvtcow.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpeezvtcow.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeezvtcow.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeezvtcow.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ry52d9_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0ry52d9_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0ry52d9_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ry52d9_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ry52d9_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0ry52d9_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0ry52d9_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0ry52d9_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ry52d9_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ry52d9_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0ry52d9_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0ry52d9_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0ry52d9_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ry52d9_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ry52d9_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptzdrn8t1.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptzdrn8t1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptzdrn8t1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzdrn8t1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzdrn8t1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptzdrn8t1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptzdrn8t1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptzdrn8t1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzdrn8t1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzdrn8t1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptzdrn8t1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptzdrn8t1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptzdrn8t1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzdrn8t1.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzdrn8t1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^floor(log(x)/log(n))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphxcqm9iw.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphxcqm9iw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphxcqm9iw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphxcqm9iw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphxcqm9iw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphxcqm9iw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphxcqm9iw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphxcqm9iw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphxcqm9iw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphxcqm9iw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphxcqm9iw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphxcqm9iw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphxcqm9iw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphxcqm9iw.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxcqm9iw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjvdl17ga.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjvdl17ga.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjvdl17ga.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjvdl17ga.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjvdl17ga.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjvdl17ga.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjvdl17ga.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjvdl17ga.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjvdl17ga.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjvdl17ga.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjvdl17ga.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjvdl17ga.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjvdl17ga.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjvdl17ga.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjvdl17ga.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5yvozjwd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5yvozjwd.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5yvozjwd.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5yvozjwd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5yvozjwd.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5yvozjwd.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5yvozjwd.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5yvozjwd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5yvozjwd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5yvozjwd.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5yvozjwd.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5yvozjwd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5yvozjwd.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5yvozjwd.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(round(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpqispwl7g.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpqispwl7g.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpqispwl7g.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqispwl7g.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqispwl7g.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpqispwl7g.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpqispwl7g.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqispwl7g.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqispwl7g.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpqispwl7g.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqispwl7g.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqispwl7g.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqispwl7g.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqispwl7g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_9ypgodz.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp_9ypgodz.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp_9ypgodz.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_9ypgodz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_9ypgodz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp_9ypgodz.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp_9ypgodz.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_9ypgodz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_9ypgodz.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp_9ypgodz.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_9ypgodz.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_9ypgodz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_9ypgodz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_9ypgodz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp0lmeakb9.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp0lmeakb9.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp0lmeakb9.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lmeakb9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0lmeakb9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp0lmeakb9.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp0lmeakb9.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lmeakb9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0lmeakb9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0lmeakb9.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0lmeakb9.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lmeakb9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0lmeakb9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0lmeakb9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3rden_a.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3rden_a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3rden_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi3rden_a.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3rden_a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3rden_a.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3rden_a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkm_wsji1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkm_wsji1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkm_wsji1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkm_wsji1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkm_wsji1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkm_wsji1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkm_wsji1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkm_wsji1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkm_wsji1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkm_wsji1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkm_wsji1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkm_wsji1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkm_wsji1.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkm_wsji1.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm_wsji1.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp3lbyqisa.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp3lbyqisa.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp3lbyqisa.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3lbyqisa.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3lbyqisa.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp3lbyqisa.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp3lbyqisa.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3lbyqisa.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3lbyqisa.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3lbyqisa.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3lbyqisa.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3lbyqisa.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3lbyqisa.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3lbyqisa.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz1f42u2s.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpz1f42u2s.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpz1f42u2s.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1f42u2s.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz1f42u2s.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz1f42u2s.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpz1f42u2s.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpz1f42u2s.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1f42u2s.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz1f42u2s.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpz1f42u2s.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpz1f42u2s.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpz1f42u2s.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz1f42u2s.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1f42u2s.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91qp4581.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91qp4581.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91qp4581.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp91qp4581.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91qp4581.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91qp4581.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91qp4581.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^Int(log(x)/log(n))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpd7gkez1o.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpd7gkez1o.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpd7gkez1o.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd7gkez1o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpd7gkez1o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpd7gkez1o.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpd7gkez1o.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd7gkez1o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpd7gkez1o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd7gkez1o.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd7gkez1o.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd7gkez1o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpd7gkez1o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd7gkez1o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^round(log(x)/log(n))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzfgaj4cr.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzfgaj4cr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzfgaj4cr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzfgaj4cr.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzfgaj4cr.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpzfgaj4cr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzfgaj4cr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzfgaj4cr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzfgaj4cr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzfgaj4cr.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpzfgaj4cr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzfgaj4cr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzfgaj4cr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzfgaj4cr.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzfgaj4cr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp39nnc1j3.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39nnc1j3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39nnc1j3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp39nnc1j3.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39nnc1j3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39nnc1j3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp39nnc1j3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxpjb6dvk.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxpjb6dvk.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxpjb6dvk.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxpjb6dvk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxpjb6dvk.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxpjb6dvk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxpjb6dvk.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxpjb6dvk.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxpjb6dvk.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxpjb6dvk.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxpjb6dvk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxpjb6dvk.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxpjb6dvk.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxpjb6dvk.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpjb6dvk.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^floor(log(x)/log(n))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph7ryxag5.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph7ryxag5.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph7ryxag5.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7ryxag5.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7ryxag5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph7ryxag5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph7ryxag5.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph7ryxag5.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7ryxag5.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7ryxag5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph7ryxag5.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph7ryxag5.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph7ryxag5.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph7ryxag5.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7ryxag5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpom81zapm.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpom81zapm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpom81zapm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpom81zapm.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpom81zapm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpom81zapm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpom81zapm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkgjqbnsx.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpkgjqbnsx.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpkgjqbnsx.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkgjqbnsx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkgjqbnsx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpkgjqbnsx.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpkgjqbnsx.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkgjqbnsx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkgjqbnsx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkgjqbnsx.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkgjqbnsx.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkgjqbnsx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkgjqbnsx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkgjqbnsx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7zaw5gc6.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7zaw5gc6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7zaw5gc6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7zaw5gc6.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7zaw5gc6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7zaw5gc6.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7zaw5gc6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7zaw5gc6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7zaw5gc6.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7zaw5gc6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7zaw5gc6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7zaw5gc6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7zaw5gc6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7zaw5gc6.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zaw5gc6.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpb4u1t6qf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpb4u1t6qf.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpb4u1t6qf.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb4u1t6qf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpb4u1t6qf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpb4u1t6qf.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpb4u1t6qf.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb4u1t6qf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpb4u1t6qf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb4u1t6qf.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb4u1t6qf.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb4u1t6qf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpb4u1t6qf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb4u1t6qf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp3ra27ch5.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp3ra27ch5.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp3ra27ch5.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3ra27ch5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3ra27ch5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp3ra27ch5.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp3ra27ch5.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3ra27ch5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3ra27ch5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3ra27ch5.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3ra27ch5.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3ra27ch5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3ra27ch5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ra27ch5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpah2g12b4.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpah2g12b4.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpah2g12b4.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpah2g12b4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpah2g12b4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpah2g12b4.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpah2g12b4.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpah2g12b4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpah2g12b4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpah2g12b4.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpah2g12b4.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpah2g12b4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpah2g12b4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpah2g12b4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyxickpde.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpyxickpde.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpyxickpde.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxickpde.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyxickpde.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpyxickpde.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpyxickpde.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxickpde.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyxickpde.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpyxickpde.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyxickpde.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxickpde.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyxickpde.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyxickpde.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x == 1\n  \
    \      return false\n    else\n        return is_simple_power(x, n^2)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1vnev7w6.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1vnev7w6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1vnev7w6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vnev7w6.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1vnev7w6.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1vnev7w6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1vnev7w6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1vnev7w6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vnev7w6.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1vnev7w6.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1vnev7w6.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1vnev7w6.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1vnev7w6.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1vnev7w6.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1vnev7w6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph_ug1h_v.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph_ug1h_v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph_ug1h_v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph_ug1h_v.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph_ug1h_v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph_ug1h_v.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph_ug1h_v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph_ug1h_v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph_ug1h_v.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph_ug1h_v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph_ug1h_v.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmph_ug1h_v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmph_ug1h_v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph_ug1h_v.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_ug1h_v.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptct41nv2.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptct41nv2.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptct41nv2.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptct41nv2.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptct41nv2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptct41nv2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptct41nv2.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptct41nv2.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptct41nv2.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptct41nv2.jl:33\ntest set:\
    \ Error During Test at /tmp/tmptct41nv2.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmptct41nv2.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptct41nv2.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptct41nv2.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptct41nv2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpki98ad_e.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpki98ad_e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpki98ad_e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpki98ad_e.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpki98ad_e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpki98ad_e.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpki98ad_e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpki98ad_e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpki98ad_e.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpki98ad_e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpki98ad_e.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpki98ad_e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpki98ad_e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpki98ad_e.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpki98ad_e.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp954y022o.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp954y022o.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp954y022o.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp954y022o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp954y022o.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp954y022o.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp954y022o.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp954y022o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp954y022o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp954y022o.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp954y022o.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp954y022o.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp954y022o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp954y022o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^round(log(x)/log(n))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (n^(round(log(x)/log(n))) == x)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb2ujkted.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb2ujkted.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb2ujkted.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb2ujkted.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb2ujkted.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpb2ujkted.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb2ujkted.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb2ujkted.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb2ujkted.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb2ujkted.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpb2ujkted.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb2ujkted.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb2ujkted.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb2ujkted.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2ujkted.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9cxl89k0.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9cxl89k0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9cxl89k0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9cxl89k0.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9cxl89k0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9cxl89k0.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9cxl89k0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9cxl89k0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9cxl89k0.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9cxl89k0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9cxl89k0.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9cxl89k0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9cxl89k0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9cxl89k0.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cxl89k0.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(log(x)/log(n))\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaav843ym.jl:36\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaav843ym.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaav843ym.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaav843ym.jl:37\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaav843ym.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaav843ym.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaav843ym.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpux7rg0hw.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpux7rg0hw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpux7rg0hw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpux7rg0hw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpux7rg0hw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpux7rg0hw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpux7rg0hw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpux7rg0hw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpux7rg0hw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpux7rg0hw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpux7rg0hw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpux7rg0hw.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpux7rg0hw.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpux7rg0hw.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpux7rg0hw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptum8yw59.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptum8yw59.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptum8yw59.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptum8yw59.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptum8yw59.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptum8yw59.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptum8yw59.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(round(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if n == 1\n        return true\n    end\n    if x == 1\n\
    \        return true\n    end\n    if x == n\n        return true\n    end\n \
    \   if x % n != 0\n        return false\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpso3fuova.jl:38\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpso3fuova.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpso3fuova.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpso3fuova.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpso3fuova.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpso3fuova.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpso3fuova.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpso3fuova.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpso3fuova.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpso3fuova.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpso3fuova.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpso3fuova.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpso3fuova.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpso3fuova.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpso3fuova.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy3enq3r7.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy3enq3r7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy3enq3r7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3enq3r7.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy3enq3r7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy3enq3r7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy3enq3r7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy3enq3r7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3enq3r7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy3enq3r7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy3enq3r7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy3enq3r7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy3enq3r7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3enq3r7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3enq3r7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk16xkozh.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpk16xkozh.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpk16xkozh.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk16xkozh.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk16xkozh.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk16xkozh.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpk16xkozh.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpk16xkozh.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk16xkozh.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk16xkozh.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpk16xkozh.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpk16xkozh.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpk16xkozh.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk16xkozh.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk16xkozh.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpydqrjiw4.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydqrjiw4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydqrjiw4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpydqrjiw4.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydqrjiw4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydqrjiw4.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydqrjiw4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpm9eiogft.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpm9eiogft.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpm9eiogft.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm9eiogft.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm9eiogft.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpm9eiogft.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpm9eiogft.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm9eiogft.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm9eiogft.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpm9eiogft.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm9eiogft.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm9eiogft.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm9eiogft.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9eiogft.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7r95jge3.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7r95jge3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7r95jge3.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7r95jge3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7r95jge3.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7r95jge3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7r95jge3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7r95jge3.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7r95jge3.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7r95jge3.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7r95jge3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7r95jge3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7r95jge3.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7r95jge3.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7r95jge3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe5cw09xl.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpe5cw09xl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpe5cw09xl.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe5cw09xl.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe5cw09xl.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpe5cw09xl.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpe5cw09xl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpe5cw09xl.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe5cw09xl.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe5cw09xl.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpe5cw09xl.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpe5cw09xl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpe5cw09xl.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe5cw09xl.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5cw09xl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpk9v2x_r9.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpk9v2x_r9.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk9v2x_r9.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk9v2x_r9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk9v2x_r9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpk9v2x_r9.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk9v2x_r9.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk9v2x_r9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk9v2x_r9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpk9v2x_r9.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk9v2x_r9.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk9v2x_r9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk9v2x_r9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk9v2x_r9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7fbcygem.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7fbcygem.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7fbcygem.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fbcygem.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fbcygem.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7fbcygem.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7fbcygem.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7fbcygem.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fbcygem.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7fbcygem.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp7fbcygem.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7fbcygem.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7fbcygem.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7fbcygem.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fbcygem.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ckjmjk9.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6ckjmjk9.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6ckjmjk9.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ckjmjk9.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ckjmjk9.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp6ckjmjk9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6ckjmjk9.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6ckjmjk9.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ckjmjk9.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ckjmjk9.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp6ckjmjk9.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6ckjmjk9.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6ckjmjk9.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ckjmjk9.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ckjmjk9.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp399t3esq.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp399t3esq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp399t3esq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp399t3esq.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp399t3esq.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp399t3esq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp399t3esq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp399t3esq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp399t3esq.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp399t3esq.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp399t3esq.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp399t3esq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp399t3esq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp399t3esq.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp399t3esq.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (n^(Int64(log(x)/log(n))) == x)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8p_3o_ru.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp8p_3o_ru.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp8p_3o_ru.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8p_3o_ru.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8p_3o_ru.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp8p_3o_ru.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp8p_3o_ru.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8p_3o_ru.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8p_3o_ru.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8p_3o_ru.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8p_3o_ru.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8p_3o_ru.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8p_3o_ru.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8p_3o_ru.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7ipr3gv8.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp7ipr3gv8.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp7ipr3gv8.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7ipr3gv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7ipr3gv8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp7ipr3gv8.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp7ipr3gv8.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7ipr3gv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7ipr3gv8.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7ipr3gv8.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7ipr3gv8.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7ipr3gv8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7ipr3gv8.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ipr3gv8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(Int64(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpnr22b_ht.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpnr22b_ht.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpnr22b_ht.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnr22b_ht.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnr22b_ht.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpnr22b_ht.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpnr22b_ht.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnr22b_ht.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnr22b_ht.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnr22b_ht.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnr22b_ht.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnr22b_ht.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnr22b_ht.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnr22b_ht.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmhxpl90k.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmhxpl90k.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmhxpl90k.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmhxpl90k.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmhxpl90k.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmhxpl90k.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmhxpl90k.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmhxpl90k.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmhxpl90k.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmhxpl90k.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmhxpl90k.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmhxpl90k.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmhxpl90k.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmhxpl90k.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmhxpl90k.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^floor(log(x)/log(n))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4z7jzcbg.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4z7jzcbg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4z7jzcbg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z7jzcbg.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z7jzcbg.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4z7jzcbg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4z7jzcbg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4z7jzcbg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z7jzcbg.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z7jzcbg.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4z7jzcbg.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4z7jzcbg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4z7jzcbg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z7jzcbg.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4z7jzcbg.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw5diixxn.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw5diixxn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw5diixxn.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5diixxn.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5diixxn.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw5diixxn.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw5diixxn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw5diixxn.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5diixxn.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5diixxn.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpw5diixxn.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw5diixxn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw5diixxn.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5diixxn.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5diixxn.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpma1epim4.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpma1epim4.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpma1epim4.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpma1epim4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpma1epim4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpma1epim4.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpma1epim4.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpma1epim4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpma1epim4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpma1epim4.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpma1epim4.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpma1epim4.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpma1epim4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpma1epim4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptyb1sd8i.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmptyb1sd8i.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmptyb1sd8i.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptyb1sd8i.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptyb1sd8i.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmptyb1sd8i.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmptyb1sd8i.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptyb1sd8i.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptyb1sd8i.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmptyb1sd8i.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptyb1sd8i.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptyb1sd8i.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptyb1sd8i.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyb1sd8i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x%n == 0\n        return is_simple_power(x/n, n)\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4efb0jwo.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4efb0jwo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4efb0jwo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4efb0jwo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4efb0jwo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4efb0jwo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4efb0jwo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4efb0jwo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4efb0jwo.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4efb0jwo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4efb0jwo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4efb0jwo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4efb0jwo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4efb0jwo.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4efb0jwo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(floor(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9g64qdgt.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g64qdgt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g64qdgt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9g64qdgt.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g64qdgt.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g64qdgt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9g64qdgt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3qi9x2xj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qi9x2xj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qi9x2xj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qi9x2xj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qi9x2xj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3qi9x2xj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qi9x2xj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qi9x2xj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qi9x2xj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qi9x2xj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3qi9x2xj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qi9x2xj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qi9x2xj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qi9x2xj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qi9x2xj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_4bju293.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp_4bju293.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp_4bju293.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_4bju293.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_4bju293.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_4bju293.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp_4bju293.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp_4bju293.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_4bju293.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_4bju293.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_4bju293.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp_4bju293.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp_4bju293.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_4bju293.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_4bju293.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x > n\n        return is_simple_power(x/n, n)\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppun5ow6o.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppun5ow6o.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmppun5ow6o.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppun5ow6o.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppun5ow6o.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppun5ow6o.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(143214, 16) == false\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppun5ow6o.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmppun5ow6o.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppun5ow6o.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppun5ow6o.jl:33\ntest set:\
    \ Error During Test at /tmp/tmppun5ow6o.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppun5ow6o.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmppun5ow6o.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppun5ow6o.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppun5ow6o.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpf4v99z2d.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpf4v99z2d.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpf4v99z2d.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf4v99z2d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf4v99z2d.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpf4v99z2d.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpf4v99z2d.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf4v99z2d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf4v99z2d.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpf4v99z2d.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf4v99z2d.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf4v99z2d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpf4v99z2d.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4v99z2d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x%n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsiol_q9n.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsiol_q9n.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsiol_q9n.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsiol_q9n.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsiol_q9n.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpsiol_q9n.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsiol_q9n.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsiol_q9n.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsiol_q9n.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsiol_q9n.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpsiol_q9n.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsiol_q9n.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsiol_q9n.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsiol_q9n.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsiol_q9n.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjavm34zu.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjavm34zu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjavm34zu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavm34zu.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjavm34zu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjavm34zu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjavm34zu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjavm34zu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavm34zu.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjavm34zu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjavm34zu.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjavm34zu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjavm34zu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjavm34zu.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjavm34zu.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxb_hrton.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpxb_hrton.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpxb_hrton.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb_hrton.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxb_hrton.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpxb_hrton.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpxb_hrton.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb_hrton.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxb_hrton.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxb_hrton.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxb_hrton.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxb_hrton.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxb_hrton.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxb_hrton.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbnp0us2c.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbnp0us2c.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbnp0us2c.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbnp0us2c.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbnp0us2c.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpbnp0us2c.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbnp0us2c.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbnp0us2c.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbnp0us2c.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbnp0us2c.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpbnp0us2c.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbnp0us2c.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbnp0us2c.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbnp0us2c.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbnp0us2c.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx0uk_m4i.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpx0uk_m4i.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpx0uk_m4i.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0uk_m4i.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx0uk_m4i.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpx0uk_m4i.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpx0uk_m4i.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpx0uk_m4i.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0uk_m4i.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx0uk_m4i.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpx0uk_m4i.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpx0uk_m4i.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpx0uk_m4i.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0uk_m4i.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0uk_m4i.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpu5hfz39r.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpu5hfz39r.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpu5hfz39r.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu5hfz39r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpu5hfz39r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpu5hfz39r.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpu5hfz39r.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu5hfz39r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpu5hfz39r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu5hfz39r.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpu5hfz39r.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu5hfz39r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpu5hfz39r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5hfz39r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuoqvlkr_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpuoqvlkr_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpuoqvlkr_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoqvlkr_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoqvlkr_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuoqvlkr_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpuoqvlkr_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpuoqvlkr_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoqvlkr_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoqvlkr_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuoqvlkr_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpuoqvlkr_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpuoqvlkr_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoqvlkr_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuoqvlkr_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0uy6kwg_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0uy6kwg_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0uy6kwg_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0uy6kwg_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0uy6kwg_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0uy6kwg_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0uy6kwg_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0uy6kwg_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0uy6kwg_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0uy6kwg_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0uy6kwg_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0uy6kwg_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0uy6kwg_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0uy6kwg_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0uy6kwg_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpqsxhlrmo.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpqsxhlrmo.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpqsxhlrmo.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqsxhlrmo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqsxhlrmo.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpqsxhlrmo.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpqsxhlrmo.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqsxhlrmo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqsxhlrmo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpqsxhlrmo.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqsxhlrmo.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqsxhlrmo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqsxhlrmo.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsxhlrmo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif n == 1\n  \
    \      return false\n    elseif x % n != 0\n        return false\n    else\n \
    \       return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo43buj8d.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpo43buj8d.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpo43buj8d.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo43buj8d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo43buj8d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpo43buj8d.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpo43buj8d.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpo43buj8d.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo43buj8d.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo43buj8d.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpo43buj8d.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpo43buj8d.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpo43buj8d.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo43buj8d.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo43buj8d.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphdg1c8dq.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmphdg1c8dq.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphdg1c8dq.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdg1c8dq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdg1c8dq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmphdg1c8dq.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphdg1c8dq.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdg1c8dq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdg1c8dq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphdg1c8dq.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphdg1c8dq.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdg1c8dq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdg1c8dq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdg1c8dq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt0psx1zx.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpt0psx1zx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpt0psx1zx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt0psx1zx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt0psx1zx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt0psx1zx.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpt0psx1zx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpt0psx1zx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt0psx1zx.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt0psx1zx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt0psx1zx.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpt0psx1zx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpt0psx1zx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt0psx1zx.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt0psx1zx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy6k2dxyr.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy6k2dxyr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy6k2dxyr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6k2dxyr.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6k2dxyr.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy6k2dxyr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy6k2dxyr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy6k2dxyr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6k2dxyr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy6k2dxyr.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpy6k2dxyr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy6k2dxyr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy6k2dxyr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy6k2dxyr.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6k2dxyr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9ykfn_f.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9ykfn_f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9ykfn_f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc9ykfn_f.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9ykfn_f.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9ykfn_f.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9ykfn_f.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp912d3333.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp912d3333.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp912d3333.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp912d3333.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp912d3333.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp912d3333.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp912d3333.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp912d3333.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp912d3333.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp912d3333.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp912d3333.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp912d3333.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp912d3333.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp912d3333.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphdi9zowb.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmphdi9zowb.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphdi9zowb.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdi9zowb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdi9zowb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmphdi9zowb.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmphdi9zowb.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdi9zowb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdi9zowb.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphdi9zowb.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphdi9zowb.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphdi9zowb.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphdi9zowb.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdi9zowb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9ek1dzgt.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9ek1dzgt.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9ek1dzgt.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ek1dzgt.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ek1dzgt.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9ek1dzgt.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9ek1dzgt.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9ek1dzgt.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ek1dzgt.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ek1dzgt.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9ek1dzgt.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9ek1dzgt.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9ek1dzgt.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9ek1dzgt.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ek1dzgt.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkd4q58e6.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd4q58e6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd4q58e6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkd4q58e6.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd4q58e6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd4q58e6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd4q58e6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp99qfl6bt.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp99qfl6bt.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp99qfl6bt.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp99qfl6bt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp99qfl6bt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp99qfl6bt.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp99qfl6bt.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp99qfl6bt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp99qfl6bt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp99qfl6bt.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp99qfl6bt.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp99qfl6bt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp99qfl6bt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99qfl6bt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^round(log(x)/log(n))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2f0zhkjj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp2f0zhkjj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp2f0zhkjj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f0zhkjj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f0zhkjj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp2f0zhkjj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp2f0zhkjj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp2f0zhkjj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f0zhkjj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2f0zhkjj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp2f0zhkjj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp2f0zhkjj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp2f0zhkjj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2f0zhkjj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2f0zhkjj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3382mb7x.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3382mb7x.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3382mb7x.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3382mb7x.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3382mb7x.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3382mb7x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3382mb7x.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3382mb7x.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3382mb7x.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3382mb7x.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3382mb7x.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3382mb7x.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3382mb7x.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3382mb7x.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3382mb7x.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(Int64(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5wn0zjc2.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5wn0zjc2.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5wn0zjc2.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wn0zjc2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5wn0zjc2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5wn0zjc2.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5wn0zjc2.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wn0zjc2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5wn0zjc2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5wn0zjc2.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5wn0zjc2.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5wn0zjc2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5wn0zjc2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wn0zjc2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(Int64(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpo4h4k9b5.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpo4h4k9b5.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpo4h4k9b5.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo4h4k9b5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo4h4k9b5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpo4h4k9b5.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpo4h4k9b5.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo4h4k9b5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo4h4k9b5.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpo4h4k9b5.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo4h4k9b5.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo4h4k9b5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpo4h4k9b5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4h4k9b5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rul3riw.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rul3riw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rul3riw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8rul3riw.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rul3riw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rul3riw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rul3riw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5fufyse_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp5fufyse_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5fufyse_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5fufyse_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5fufyse_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5fufyse_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp5fufyse_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5fufyse_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5fufyse_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5fufyse_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5fufyse_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp5fufyse_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5fufyse_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5fufyse_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fufyse_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7ybtblcx.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(16, 2) == true\\n  MethodError: no method\
    \ matching is_simple_power(::Float64, ::Int64)\\n  Closest candidates are:\\n\
    \    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmp7ybtblcx.jl:18\\n  Stacktrace:\\\
    n   [1] is_simple_power(x::Int64, n::Int64)\\n     @ Main /tmp/tmp7ybtblcx.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ybtblcx.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ybtblcx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ybtblcx.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 2) == true\\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    is_simple_power(!Matched::Int64,\
    \ ::Int64) at /tmp/tmp7ybtblcx.jl:18\\n  Stacktrace:\\n   [1] is_simple_power(x::Int64,\
    \ n::Int64)\\n     @ Main /tmp/tmp7ybtblcx.jl:24\\n   [2] macro expansion\\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ybtblcx.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ybtblcx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ybtblcx.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(9, 3) == true\\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    is_simple_power(!Matched::Int64,\
    \ ::Int64) at /tmp/tmp7ybtblcx.jl:18\\n  Stacktrace:\\n   [1] is_simple_power(x::Int64,\
    \ n::Int64)\\n     @ Main /tmp/tmp7ybtblcx.jl:24\\n   [2] macro expansion\\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ybtblcx.jl:35 [inlined]\\\
    n   [4] macr"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6h_7xprf.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6h_7xprf.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6h_7xprf.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6h_7xprf.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6h_7xprf.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp6h_7xprf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6h_7xprf.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6h_7xprf.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6h_7xprf.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6h_7xprf.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp6h_7xprf.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6h_7xprf.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6h_7xprf.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6h_7xprf.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6h_7xprf.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphkzrmtns.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphkzrmtns.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphkzrmtns.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphkzrmtns.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphkzrmtns.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphkzrmtns.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphkzrmtns.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphkzrmtns.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphkzrmtns.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphkzrmtns.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphkzrmtns.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmphkzrmtns.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmphkzrmtns.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphkzrmtns.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphkzrmtns.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp687e6sjv.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp687e6sjv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp687e6sjv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp687e6sjv.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp687e6sjv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp687e6sjv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp687e6sjv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp687e6sjv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp687e6sjv.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp687e6sjv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp687e6sjv.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp687e6sjv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp687e6sjv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp687e6sjv.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp687e6sjv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif n == 1\n  \
    \      return false\n    elseif x % n != 0\n        return false\n    else\n \
    \       return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnvqrwxhl.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnvqrwxhl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnvqrwxhl.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnvqrwxhl.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnvqrwxhl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnvqrwxhl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnvqrwxhl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnvqrwxhl.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnvqrwxhl.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnvqrwxhl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnvqrwxhl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnvqrwxhl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnvqrwxhl.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnvqrwxhl.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvqrwxhl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy1l8_1lg.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy1l8_1lg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy1l8_1lg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy1l8_1lg.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy1l8_1lg.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpy1l8_1lg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy1l8_1lg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy1l8_1lg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy1l8_1lg.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy1l8_1lg.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpy1l8_1lg.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpy1l8_1lg.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpy1l8_1lg.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy1l8_1lg.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1l8_1lg.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3a8v699e.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3a8v699e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3a8v699e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3a8v699e.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3a8v699e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3a8v699e.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3a8v699e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3a8v699e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3a8v699e.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3a8v699e.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3a8v699e.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3a8v699e.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3a8v699e.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3a8v699e.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3a8v699e.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcmm26rhv.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpcmm26rhv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpcmm26rhv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcmm26rhv.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcmm26rhv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcmm26rhv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpcmm26rhv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpcmm26rhv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcmm26rhv.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcmm26rhv.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpcmm26rhv.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpcmm26rhv.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpcmm26rhv.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcmm26rhv.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmm26rhv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ls6uw89.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1ls6uw89.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1ls6uw89.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1ls6uw89.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1ls6uw89.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1ls6uw89.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1ls6uw89.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1ls6uw89.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1ls6uw89.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1ls6uw89.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp1ls6uw89.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1ls6uw89.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1ls6uw89.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1ls6uw89.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ls6uw89.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzu7t7rnt.jl:31\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpzu7t7rnt.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpzu7t7rnt.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzu7t7rnt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzu7t7rnt.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpzu7t7rnt.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpzu7t7rnt.jl:35 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzu7t7rnt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzu7t7rnt.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzu7t7rnt.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzu7t7rnt.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzu7t7rnt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzu7t7rnt.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzu7t7rnt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if n == 1\n        return x == 1\n    end\n    if x ==\
    \ 1\n        return false\n    end\n    if x == n\n        return true\n    end\n\
    \    if x < n\n        return false\n    end\n    return is_simple_power(x, n^2)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5dvisgw5.jl:47\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5dvisgw5.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5dvisgw5.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dvisgw5.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp9qokqtve.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp9qokqtve.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp9qokqtve.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9qokqtve.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp9qokqtve.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp9qokqtve.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp9qokqtve.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9qokqtve.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp9qokqtve.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9qokqtve.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9qokqtve.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9qokqtve.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp9qokqtve.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qokqtve.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu24f0fjr.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu24f0fjr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu24f0fjr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu24f0fjr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu24f0fjr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpu24f0fjr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu24f0fjr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu24f0fjr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu24f0fjr.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu24f0fjr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpu24f0fjr.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu24f0fjr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu24f0fjr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu24f0fjr.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu24f0fjr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3qosh1xq.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qosh1xq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qosh1xq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qosh1xq.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qosh1xq.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3qosh1xq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qosh1xq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qosh1xq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qosh1xq.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3qosh1xq.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp3qosh1xq.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3qosh1xq.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp3qosh1xq.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3qosh1xq.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qosh1xq.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps_3t7ym7.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmps_3t7ym7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmps_3t7ym7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps_3t7ym7.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps_3t7ym7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmps_3t7ym7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmps_3t7ym7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmps_3t7ym7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps_3t7ym7.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps_3t7ym7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmps_3t7ym7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmps_3t7ym7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmps_3t7ym7.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps_3t7ym7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps_3t7ym7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd4ch190f.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd4ch190f.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd4ch190f.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4ch190f.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd4ch190f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpd4ch190f.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd4ch190f.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd4ch190f.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4ch190f.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd4ch190f.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpd4ch190f.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd4ch190f.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd4ch190f.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4ch190f.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4ch190f.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpoi20rb__.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpoi20rb__.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpoi20rb__.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoi20rb__.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoi20rb__.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpoi20rb__.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpoi20rb__.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoi20rb__.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoi20rb__.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpoi20rb__.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoi20rb__.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoi20rb__.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoi20rb__.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoi20rb__.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(Int64(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmzz_9ypj.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpmzz_9ypj.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpmzz_9ypj.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmzz_9ypj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmzz_9ypj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpmzz_9ypj.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpmzz_9ypj.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmzz_9ypj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmzz_9ypj.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmzz_9ypj.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmzz_9ypj.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmzz_9ypj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmzz_9ypj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmzz_9ypj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if n == 0\n        return false\n    end\n    if x ==\
    \ 1\n        return true\n    end\n    if x == n\n        return true\n    end\n\
    \    if x % n != 0\n        return false\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw2hilvu7.jl:38\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw2hilvu7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw2hilvu7.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw2hilvu7.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw2hilvu7.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpw2hilvu7.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw2hilvu7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw2hilvu7.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw2hilvu7.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw2hilvu7.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpw2hilvu7.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpw2hilvu7.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpw2hilvu7.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw2hilvu7.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2hilvu7.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb4abd52r.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb4abd52r.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb4abd52r.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb4abd52r.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb4abd52r.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpb4abd52r.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb4abd52r.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb4abd52r.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb4abd52r.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb4abd52r.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpb4abd52r.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpb4abd52r.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpb4abd52r.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb4abd52r.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb4abd52r.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(floor(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif n == 1\n  \
    \      return false\n    elseif x % n != 0\n        return false\n    else\n \
    \       return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmpo40uek.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmpo40uek.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmpo40uek.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmpo40uek.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmpo40uek.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmpo40uek.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmpo40uek.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmpo40uek.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmpo40uek.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmpo40uek.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmpo40uek.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmpo40uek.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmpo40uek.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmpo40uek.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmpo40uek.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkvdpcy_u.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpkvdpcy_u.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpkvdpcy_u.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkvdpcy_u.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkvdpcy_u.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpkvdpcy_u.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpkvdpcy_u.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkvdpcy_u.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkvdpcy_u.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkvdpcy_u.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkvdpcy_u.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkvdpcy_u.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpkvdpcy_u.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkvdpcy_u.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4iy_jvjz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4iy_jvjz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4iy_jvjz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iy_jvjz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4iy_jvjz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4iy_jvjz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4iy_jvjz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4iy_jvjz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iy_jvjz.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4iy_jvjz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4iy_jvjz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4iy_jvjz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4iy_jvjz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iy_jvjz.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iy_jvjz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp10gseqmd.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp10gseqmd.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp10gseqmd.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10gseqmd.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp10gseqmd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp10gseqmd.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp10gseqmd.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp10gseqmd.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10gseqmd.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp10gseqmd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp10gseqmd.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp10gseqmd.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp10gseqmd.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10gseqmd.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10gseqmd.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x % n == 0 ? is_simple_power(x/n, n) : x == 1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc6336gy3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpc6336gy3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpc6336gy3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc6336gy3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc6336gy3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpc6336gy3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpc6336gy3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpc6336gy3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc6336gy3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc6336gy3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpc6336gy3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpc6336gy3.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpc6336gy3.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc6336gy3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6336gy3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpywmbi7l5.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpywmbi7l5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpywmbi7l5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpywmbi7l5.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpywmbi7l5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpywmbi7l5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpywmbi7l5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpasv5z0bn.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpasv5z0bn.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpasv5z0bn.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpasv5z0bn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpasv5z0bn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpasv5z0bn.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpasv5z0bn.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpasv5z0bn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpasv5z0bn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpasv5z0bn.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpasv5z0bn.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpasv5z0bn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpasv5z0bn.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpasv5z0bn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbuanfc6f.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpbuanfc6f.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpbuanfc6f.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbuanfc6f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbuanfc6f.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpbuanfc6f.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpbuanfc6f.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbuanfc6f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbuanfc6f.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbuanfc6f.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbuanfc6f.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbuanfc6f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbuanfc6f.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbuanfc6f.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8au5v716.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8au5v716.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8au5v716.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8au5v716.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8au5v716.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8au5v716.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8au5v716.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8au5v716.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8au5v716.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8au5v716.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp8au5v716.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8au5v716.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8au5v716.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8au5v716.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8au5v716.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmu4sm74v.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmu4sm74v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmu4sm74v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmu4sm74v.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmu4sm74v.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmu4sm74v.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmu4sm74v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmu4sm74v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmu4sm74v.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmu4sm74v.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmu4sm74v.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmu4sm74v.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmu4sm74v.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmu4sm74v.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmu4sm74v.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if n == 1\n        return true\n    end\n    if x == 1\n\
    \        return true\n    end\n    if x == n\n        return true\n    end\n \
    \   if x % n != 0\n        return false\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6khuh0rl.jl:38\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6khuh0rl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6khuh0rl.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6khuh0rl.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6khuh0rl.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp6khuh0rl.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6khuh0rl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6khuh0rl.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6khuh0rl.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6khuh0rl.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp6khuh0rl.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp6khuh0rl.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp6khuh0rl.jl:31\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6khuh0rl.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6khuh0rl.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp82ue3kvy.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp82ue3kvy.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp82ue3kvy.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp82ue3kvy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp82ue3kvy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp82ue3kvy.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp82ue3kvy.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp82ue3kvy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp82ue3kvy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp82ue3kvy.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp82ue3kvy.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp82ue3kvy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp82ue3kvy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82ue3kvy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxdf5dn1g.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxdf5dn1g.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxdf5dn1g.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxdf5dn1g.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxdf5dn1g.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxdf5dn1g.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxdf5dn1g.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxdf5dn1g.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxdf5dn1g.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxdf5dn1g.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpxdf5dn1g.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpxdf5dn1g.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpxdf5dn1g.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxdf5dn1g.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdf5dn1g.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5jfnfq1j.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5jfnfq1j.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5jfnfq1j.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5jfnfq1j.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5jfnfq1j.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmp5jfnfq1j.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmp5jfnfq1j.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5jfnfq1j.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5jfnfq1j.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp5jfnfq1j.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5jfnfq1j.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5jfnfq1j.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5jfnfq1j.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5jfnfq1j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmmnifm3_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmmnifm3_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmmnifm3_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmnifm3_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmnifm3_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmmnifm3_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmmnifm3_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmmnifm3_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmnifm3_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmnifm3_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpmmnifm3_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmmnifm3_.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmmnifm3_.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmnifm3_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmnifm3_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpprsoibe4.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpprsoibe4.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpprsoibe4.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpprsoibe4.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpprsoibe4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpprsoibe4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpprsoibe4.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpprsoibe4.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpprsoibe4.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpprsoibe4.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpprsoibe4.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpprsoibe4.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpprsoibe4.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpprsoibe4.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpprsoibe4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpitlubsd8.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpitlubsd8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpitlubsd8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpitlubsd8.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpitlubsd8.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpitlubsd8.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpitlubsd8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpitlubsd8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpitlubsd8.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpitlubsd8.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpitlubsd8.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpitlubsd8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpitlubsd8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpitlubsd8.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpitlubsd8.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif n == 1\n  \
    \      return false\n    elseif x % n != 0\n        return false\n    else\n \
    \       return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa5x70yr1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa5x70yr1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa5x70yr1.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa5x70yr1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa5x70yr1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpa5x70yr1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa5x70yr1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa5x70yr1.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa5x70yr1.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa5x70yr1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpa5x70yr1.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa5x70yr1.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa5x70yr1.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa5x70yr1.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5x70yr1.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpykc_v2he.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpykc_v2he.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpykc_v2he.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpykc_v2he.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpykc_v2he.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpykc_v2he.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpykc_v2he.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpykc_v2he.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpykc_v2he.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpykc_v2he.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpykc_v2he.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpykc_v2he.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpykc_v2he.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykc_v2he.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpisctno2r.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpisctno2r.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpisctno2r.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpisctno2r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpisctno2r.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpisctno2r.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpisctno2r.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpisctno2r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpisctno2r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpisctno2r.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpisctno2r.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpisctno2r.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpisctno2r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpisctno2r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpm0hn3yby.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpm0hn3yby.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpm0hn3yby.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm0hn3yby.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm0hn3yby.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpm0hn3yby.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpm0hn3yby.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm0hn3yby.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm0hn3yby.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpm0hn3yby.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm0hn3yby.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm0hn3yby.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm0hn3yby.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm0hn3yby.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvdb_dfz8.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpvdb_dfz8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpvdb_dfz8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdb_dfz8.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdb_dfz8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpvdb_dfz8.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpvdb_dfz8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpvdb_dfz8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdb_dfz8.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdb_dfz8.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpvdb_dfz8.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpvdb_dfz8.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpvdb_dfz8.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdb_dfz8.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvdb_dfz8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa6bj7xyu.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa6bj7xyu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa6bj7xyu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6bj7xyu.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa6bj7xyu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpa6bj7xyu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa6bj7xyu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa6bj7xyu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6bj7xyu.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa6bj7xyu.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpa6bj7xyu.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpa6bj7xyu.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpa6bj7xyu.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6bj7xyu.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa6bj7xyu.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyqiu5pj1.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpyqiu5pj1.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpyqiu5pj1.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyqiu5pj1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyqiu5pj1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpyqiu5pj1.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpyqiu5pj1.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyqiu5pj1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyqiu5pj1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpyqiu5pj1.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyqiu5pj1.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyqiu5pj1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyqiu5pj1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyqiu5pj1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp37q50poz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp37q50poz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp37q50poz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37q50poz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37q50poz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp37q50poz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp37q50poz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp37q50poz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37q50poz.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37q50poz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp37q50poz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp37q50poz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp37q50poz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37q50poz.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37q50poz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return (x == n^(Int64(log(x)/log(n))))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpynin6dyo.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpynin6dyo.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpynin6dyo.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpynin6dyo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpynin6dyo.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpynin6dyo.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpynin6dyo.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpynin6dyo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpynin6dyo.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpynin6dyo.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpynin6dyo.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpynin6dyo.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpynin6dyo.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpynin6dyo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if n == 1\n        return true\n    end\n    if x == 1\n\
    \        return true\n    end\n    if x == n\n        return true\n    end\n \
    \   if x < n\n        return false\n    end\n    if x % n != 0\n        return\
    \ false\n    end\n    return is_simple_power(x/n, n)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8_iet_ec.jl:41\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8_iet_ec.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8_iet_ec.jl:34\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8_iet_ec.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8_iet_ec.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp8_iet_ec.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8_iet_ec.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8_iet_ec.jl:34\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8_iet_ec.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8_iet_ec.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp8_iet_ec.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp8_iet_ec.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp8_iet_ec.jl:34\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8_iet_ec.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_iet_ec.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4tuxv449.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4tuxv449.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4tuxv449.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4tuxv449.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4tuxv449.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4tuxv449.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4tuxv449.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4tuxv449.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4tuxv449.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4tuxv449.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp4tuxv449.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4tuxv449.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4tuxv449.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4tuxv449.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4tuxv449.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnzblu5hp.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnzblu5hp.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnzblu5hp.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnzblu5hp.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnzblu5hp.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnzblu5hp.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnzblu5hp.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnzblu5hp.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnzblu5hp.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnzblu5hp.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnzblu5hp.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnzblu5hp.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnzblu5hp.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnzblu5hp.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzblu5hp.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpr_p5786t.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpr_p5786t.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpr_p5786t.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr_p5786t.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr_p5786t.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpr_p5786t.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpr_p5786t.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr_p5786t.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr_p5786t.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpr_p5786t.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr_p5786t.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr_p5786t.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpr_p5786t.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr_p5786t.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpql513tcv.jl:31\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpql513tcv.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpql513tcv.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpql513tcv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpql513tcv.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpql513tcv.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpql513tcv.jl:35 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpql513tcv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpql513tcv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpql513tcv.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpql513tcv.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpql513tcv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpql513tcv.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpql513tcv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf47xeqcm.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpf47xeqcm.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpf47xeqcm.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf47xeqcm.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf47xeqcm.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpf47xeqcm.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpf47xeqcm.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpf47xeqcm.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf47xeqcm.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf47xeqcm.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpf47xeqcm.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpf47xeqcm.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpf47xeqcm.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf47xeqcm.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf47xeqcm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1alffksx.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1alffksx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1alffksx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1alffksx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1alffksx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp1alffksx.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1alffksx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1alffksx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1alffksx.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1alffksx.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp1alffksx.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1alffksx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1alffksx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1alffksx.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1alffksx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7mx_qksz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7mx_qksz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7mx_qksz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7mx_qksz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7mx_qksz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7mx_qksz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7mx_qksz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7mx_qksz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7mx_qksz.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7mx_qksz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7mx_qksz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp7mx_qksz.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp7mx_qksz.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7mx_qksz.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mx_qksz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9g27vrvo.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9g27vrvo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9g27vrvo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9g27vrvo.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9g27vrvo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9g27vrvo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9g27vrvo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9g27vrvo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9g27vrvo.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9g27vrvo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp9g27vrvo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp9g27vrvo.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp9g27vrvo.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9g27vrvo.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9g27vrvo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return n^(round(log(x)/log(n))) == x\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif n == 1\n  \
    \      return false\n    elseif x % n != 0\n        return false\n    else\n \
    \       return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4p1gftkn.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4p1gftkn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4p1gftkn.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p1gftkn.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4p1gftkn.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4p1gftkn.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4p1gftkn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4p1gftkn.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p1gftkn.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4p1gftkn.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp4p1gftkn.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp4p1gftkn.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp4p1gftkn.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4p1gftkn.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4p1gftkn.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpufpdnyra.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpufpdnyra.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpufpdnyra.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufpdnyra.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufpdnyra.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpufpdnyra.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpufpdnyra.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpufpdnyra.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufpdnyra.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpufpdnyra.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpufpdnyra.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpufpdnyra.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpufpdnyra.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpufpdnyra.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpufpdnyra.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpfbz_pyay.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpfbz_pyay.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpfbz_pyay.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfbz_pyay.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfbz_pyay.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpfbz_pyay.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpfbz_pyay.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfbz_pyay.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfbz_pyay.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpfbz_pyay.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfbz_pyay.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfbz_pyay.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfbz_pyay.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfbz_pyay.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpacadx7f0.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpacadx7f0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpacadx7f0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpacadx7f0.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpacadx7f0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpacadx7f0.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpacadx7f0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpacadx7f0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpacadx7f0.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpacadx7f0.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpacadx7f0.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpacadx7f0.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpacadx7f0.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpacadx7f0.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpacadx7f0.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpala4rylj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpala4rylj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpala4rylj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpala4rylj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpala4rylj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpala4rylj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpala4rylj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpala4rylj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpala4rylj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpala4rylj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpala4rylj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpala4rylj.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpala4rylj.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpala4rylj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpala4rylj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnn0mb32u.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnn0mb32u.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnn0mb32u.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnn0mb32u.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnn0mb32u.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnn0mb32u.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnn0mb32u.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnn0mb32u.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnn0mb32u.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnn0mb32u.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpnn0mb32u.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpnn0mb32u.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpnn0mb32u.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnn0mb32u.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnn0mb32u.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp07eeutea.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp07eeutea.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp07eeutea.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07eeutea.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07eeutea.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp07eeutea.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp07eeutea.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp07eeutea.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07eeutea.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07eeutea.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp07eeutea.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp07eeutea.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp07eeutea.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp07eeutea.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp07eeutea.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(log(x)/log(n))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t\
    @test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9,\
    \ 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) ==\
    \ false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\
    \t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp96ogn9ev.jl:32\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96ogn9ev.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96ogn9ev.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp96ogn9ev.jl:33\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp96ogn9ev.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp96ogn9ev.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96ogn9ev.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpja3v3dyx.jl:31\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpja3v3dyx.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpja3v3dyx.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpja3v3dyx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpja3v3dyx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpja3v3dyx.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpja3v3dyx.jl:35 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpja3v3dyx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpja3v3dyx.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpja3v3dyx.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpja3v3dyx.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpja3v3dyx.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpja3v3dyx.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpja3v3dyx.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpk2dfz672.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpk2dfz672.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk2dfz672.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2dfz672.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk2dfz672.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpk2dfz672.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpk2dfz672.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2dfz672.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk2dfz672.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpk2dfz672.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk2dfz672.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2dfz672.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpk2dfz672.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk2dfz672.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmarcxebx.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmarcxebx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmarcxebx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmarcxebx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmarcxebx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmarcxebx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmarcxebx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmarcxebx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmarcxebx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmarcxebx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmarcxebx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpmarcxebx.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpmarcxebx.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmarcxebx.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmarcxebx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprc9y7bzr.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmprc9y7bzr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmprc9y7bzr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprc9y7bzr.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprc9y7bzr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmprc9y7bzr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmprc9y7bzr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmprc9y7bzr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprc9y7bzr.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprc9y7bzr.jl:33\ntest set:\
    \ Error During Test at /tmp/tmprc9y7bzr.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmprc9y7bzr.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmprc9y7bzr.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprc9y7bzr.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprc9y7bzr.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpckwv3_jl.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpckwv3_jl.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpckwv3_jl.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckwv3_jl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpckwv3_jl.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpckwv3_jl.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpckwv3_jl.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckwv3_jl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpckwv3_jl.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpckwv3_jl.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpckwv3_jl.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckwv3_jl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpckwv3_jl.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpckwv3_jl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(round(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x % n != 0\n\
    \        return false\n    else\n        return is_simple_power(x/n, n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu035l82l.jl:32\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu035l82l.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu035l82l.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu035l82l.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu035l82l.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpu035l82l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu035l82l.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu035l82l.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu035l82l.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu035l82l.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpu035l82l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpu035l82l.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpu035l82l.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu035l82l.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu035l82l.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    if x == 1\n        return true\n    elseif x == n\n  \
    \      return true\n    elseif x % n == 0\n        return is_simple_power(x/n,\
    \ n)\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjs9ypiej.jl:34\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjs9ypiej.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjs9ypiej.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjs9ypiej.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjs9ypiej.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjs9ypiej.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjs9ypiej.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjs9ypiej.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjs9ypiej.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjs9ypiej.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjs9ypiej.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpjs9ypiej.jl:18\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpjs9ypiej.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjs9ypiej.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjs9ypiej.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n    >>> is_simple_power(1, 4)\n    true\n\
    \    >>> is_simple_power(2, 2)\n    true\n    >>> is_simple_power(8, 2)\n    true\n\
    \    >>> is_simple_power(3, 2)\n    false\n    >>> is_simple_power(3, 1)\n   \
    \ false\n    >>> is_simple_power(5, 3)\n    false\n    \"\"\"\nfunction is_simple_power(x::Int64,\
    \ n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpueqqli2h.jl:27\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpueqqli2h.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpueqqli2h.jl:27 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpueqqli2h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpueqqli2h.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpueqqli2h.jl:19\n   [3] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpueqqli2h.jl:31 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpueqqli2h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpueqqli2h.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpueqqli2h.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpueqqli2h.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpueqqli2h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpueqqli2h.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpueqqli2h.jl:23\n"
  exit_code: 1
  status: SyntaxError

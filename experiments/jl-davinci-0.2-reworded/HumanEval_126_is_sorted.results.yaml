name: HumanEval_126_is_sorted
language: jl
results:
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmparelq182.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparelq182.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparelq182.jl:39\ntest set: Test\
    \ Failed at /tmp/tmparelq182.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmparelq182.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmparelq182.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmparelq182.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfmgxo8b4.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmgxo8b4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmgxo8b4.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfmgxo8b4.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmgxo8b4.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmgxo8b4.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfmgxo8b4.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppw9s59zw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppw9s59zw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppw9s59zw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmppw9s59zw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppw9s59zw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppw9s59zw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppw9s59zw.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwk4uqxxb.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwk4uqxxb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwk4uqxxb.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpwk4uqxxb.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwk4uqxxb.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwk4uqxxb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwk4uqxxb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppjtjjleb.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjtjjleb.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjtjjleb.jl:36\ntest set: Test\
    \ Failed at /tmp/tmppjtjjleb.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppjtjjleb.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppjtjjleb.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjtjjleb.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6zd2n7yw.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zd2n7yw.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zd2n7yw.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp6zd2n7yw.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zd2n7yw.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zd2n7yw.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6zd2n7yw.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr82rbdtv.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr82rbdtv.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr82rbdtv.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpr82rbdtv.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr82rbdtv.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr82rbdtv.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr82rbdtv.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpytxjh029.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytxjh029.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytxjh029.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpytxjh029.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpytxjh029.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpytxjh029.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpytxjh029.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnrw49x25.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrw49x25.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrw49x25.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpnrw49x25.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrw49x25.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrw49x25.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrw49x25.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdvow2ty6.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvow2ty6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvow2ty6.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpdvow2ty6.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvow2ty6.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvow2ty6.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvow2ty6.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppqbqargu.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqbqargu.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqbqargu.jl:39\ntest set: Test\
    \ Failed at /tmp/tmppqbqargu.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqbqargu.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqbqargu.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppqbqargu.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0z6imgvt.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0z6imgvt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0z6imgvt.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp0z6imgvt.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0z6imgvt.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0z6imgvt.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0z6imgvt.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw6em70qo.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw6em70qo.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw6em70qo.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpw6em70qo.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw6em70qo.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw6em70qo.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw6em70qo.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hs0ji_7.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hs0ji_7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hs0ji_7.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp0hs0ji_7.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hs0ji_7.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hs0ji_7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hs0ji_7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk3wvdafu.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3wvdafu.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3wvdafu.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpk3wvdafu.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3wvdafu.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3wvdafu.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk3wvdafu.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplcmi2nir.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcmi2nir.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcmi2nir.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplcmi2nir.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcmi2nir.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcmi2nir.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplcmi2nir.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1o6qft5t.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o6qft5t.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o6qft5t.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1o6qft5t.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1o6qft5t.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1o6qft5t.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1o6qft5t.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1pecw_lh.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pecw_lh.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pecw_lh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1pecw_lh.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pecw_lh.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pecw_lh.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1pecw_lh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppttonk9m.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppttonk9m.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppttonk9m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmppttonk9m.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppttonk9m.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppttonk9m.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppttonk9m.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5a0hjes.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5a0hjes.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5a0hjes.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpo5a0hjes.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5a0hjes.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5a0hjes.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5a0hjes.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpypjoyueu.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypjoyueu.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypjoyueu.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpypjoyueu.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypjoyueu.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypjoyueu.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpypjoyueu.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5z1jnm5.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5z1jnm5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5z1jnm5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpn5z1jnm5.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5z1jnm5.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5z1jnm5.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5z1jnm5.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6o6hzk3n.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6o6hzk3n.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6o6hzk3n.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp6o6hzk3n.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6o6hzk3n.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6o6hzk3n.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6o6hzk3n.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9tnacf9.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9tnacf9.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9tnacf9.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpe9tnacf9.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9tnacf9.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9tnacf9.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9tnacf9.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp503x226c.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp503x226c.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp503x226c.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp503x226c.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp503x226c.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp503x226c.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp503x226c.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6qho5rcn.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6qho5rcn.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6qho5rcn.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp6qho5rcn.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6qho5rcn.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6qho5rcn.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qho5rcn.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc1vhcymo.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc1vhcymo.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc1vhcymo.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpc1vhcymo.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc1vhcymo.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc1vhcymo.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1vhcymo.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7lb_0pde.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7lb_0pde.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lb_0pde.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7lb_0pde.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqpkndqmy.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqpkndqmy.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqpkndqmy.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpqpkndqmy.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqpkndqmy.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqpkndqmy.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpkndqmy.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx2f2__nr.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx2f2__nr.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx2f2__nr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpx2f2__nr.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx2f2__nr.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx2f2__nr.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx2f2__nr.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdx1wqoef.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx1wqoef.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx1wqoef.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpdx1wqoef.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx1wqoef.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx1wqoef.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdx1wqoef.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g33h_3z.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g33h_3z.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g33h_3z.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp3g33h_3z.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g33h_3z.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g33h_3z.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g33h_3z.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdopvrixo.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdopvrixo.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdopvrixo.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpdopvrixo.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdopvrixo.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdopvrixo.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdopvrixo.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppmnit0sn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmnit0sn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmnit0sn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmppmnit0sn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmnit0sn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmnit0sn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppmnit0sn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvhd3ejnp.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvhd3ejnp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvhd3ejnp.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpvhd3ejnp.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvhd3ejnp.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvhd3ejnp.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvhd3ejnp.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb1lvf3q8.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb1lvf3q8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb1lvf3q8.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpb1lvf3q8.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb1lvf3q8.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb1lvf3q8.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1lvf3q8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpupul1eys.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpupul1eys.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpupul1eys.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpupul1eys.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpupul1eys.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpupul1eys.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpupul1eys.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyw2u_81a.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw2u_81a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw2u_81a.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyw2u_81a.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw2u_81a.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw2u_81a.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyw2u_81a.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmstvq93m.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmstvq93m.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmstvq93m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmstvq93m.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmstvq93m.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmstvq93m.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmstvq93m.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy3kqqzm9.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3kqqzm9.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3kqqzm9.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpy3kqqzm9.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3kqqzm9.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3kqqzm9.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3kqqzm9.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi9zb403d.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9zb403d.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9zb403d.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpi9zb403d.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9zb403d.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9zb403d.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi9zb403d.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp03s01_41.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03s01_41.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03s01_41.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp03s01_41.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03s01_41.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03s01_41.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp03s01_41.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzc8ci6e7.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc8ci6e7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc8ci6e7.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpzc8ci6e7.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc8ci6e7.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc8ci6e7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzc8ci6e7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxqkkcy66.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxqkkcy66.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxqkkcy66.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpxqkkcy66.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxqkkcy66.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxqkkcy66.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqkkcy66.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptah2svsf.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptah2svsf.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptah2svsf.jl:39\ntest set: Test\
    \ Failed at /tmp/tmptah2svsf.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptah2svsf.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptah2svsf.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptah2svsf.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18ij5ggb.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18ij5ggb.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18ij5ggb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18ij5ggb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg0ab18r_.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg0ab18r_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg0ab18r_.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg0ab18r_.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg0ab18r_.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg0ab18r_.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg0ab18r_.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3zq4kv62.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3zq4kv62.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3zq4kv62.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp3zq4kv62.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3zq4kv62.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3zq4kv62.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3zq4kv62.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplcko2m9w.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcko2m9w.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcko2m9w.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplcko2m9w.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcko2m9w.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcko2m9w.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplcko2m9w.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxuj0w67a.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuj0w67a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxuj0w67a.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpxuj0w67a.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxuj0w67a.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxuj0w67a.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxuj0w67a.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmo4s46av.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmo4s46av.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmo4s46av.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmo4s46av.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmo4s46av.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmo4s46av.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmo4s46av.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw_05_dkq.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_05_dkq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_05_dkq.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpw_05_dkq.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_05_dkq.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_05_dkq.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_05_dkq.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm3fjalih.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3fjalih.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3fjalih.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpm3fjalih.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3fjalih.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3fjalih.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3fjalih.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp39rt3emn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39rt3emn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39rt3emn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp39rt3emn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp39rt3emn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp39rt3emn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp39rt3emn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpolfrz9t8.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpolfrz9t8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpolfrz9t8.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpolfrz9t8.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpolfrz9t8.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpolfrz9t8.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpolfrz9t8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfu05rqmr.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu05rqmr.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu05rqmr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfu05rqmr.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu05rqmr.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu05rqmr.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu05rqmr.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqzqwl8he.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzqwl8he.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzqwl8he.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpqzqwl8he.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzqwl8he.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzqwl8he.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzqwl8he.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rsfvfu4.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rsfvfu4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rsfvfu4.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp8rsfvfu4.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rsfvfu4.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rsfvfu4.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rsfvfu4.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqrbm_vol.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrbm_vol.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrbm_vol.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpqrbm_vol.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrbm_vol.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrbm_vol.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqrbm_vol.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18m38z2p.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18m38z2p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18m38z2p.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp18m38z2p.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18m38z2p.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18m38z2p.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18m38z2p.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbys9_dgv.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbys9_dgv.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbys9_dgv.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpbys9_dgv.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbys9_dgv.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbys9_dgv.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbys9_dgv.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp61gcioie.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp61gcioie.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp61gcioie.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp61gcioie.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp61gcioie.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp61gcioie.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp61gcioie.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphsgdr78t.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsgdr78t.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsgdr78t.jl:39\ntest set: Test\
    \ Failed at /tmp/tmphsgdr78t.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsgdr78t.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsgdr78t.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphsgdr78t.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq_zb_kr0.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_zb_kr0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_zb_kr0.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpq_zb_kr0.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_zb_kr0.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_zb_kr0.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_zb_kr0.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmrax06cn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmrax06cn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmrax06cn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmrax06cn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmrax06cn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmrax06cn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmrax06cn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjmqvrt18.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmqvrt18.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmqvrt18.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjmqvrt18.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjmqvrt18.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjmqvrt18.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmqvrt18.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyq3640fb.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyq3640fb.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyq3640fb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyq3640fb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxs8al94b.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxs8al94b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxs8al94b.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpxs8al94b.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxs8al94b.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxs8al94b.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxs8al94b.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa5ygmn_9.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ygmn_9.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ygmn_9.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpa5ygmn_9.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5ygmn_9.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5ygmn_9.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5ygmn_9.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5tymafa.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5tymafa.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5tymafa.jl:39\ntest set: Test\
    \ Failed at /tmp/tmps5tymafa.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5tymafa.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5tymafa.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5tymafa.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1_cgr5ky.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1_cgr5ky.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1_cgr5ky.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1_cgr5ky.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1_cgr5ky.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1_cgr5ky.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_cgr5ky.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw6bj01ww.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw6bj01ww.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw6bj01ww.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpw6bj01ww.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw6bj01ww.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw6bj01ww.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw6bj01ww.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp69tf2e5m.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69tf2e5m.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69tf2e5m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp69tf2e5m.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69tf2e5m.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69tf2e5m.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69tf2e5m.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8km34bx6.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8km34bx6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8km34bx6.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp8km34bx6.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8km34bx6.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8km34bx6.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8km34bx6.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt5bb7tax.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5bb7tax.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5bb7tax.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpt5bb7tax.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5bb7tax.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5bb7tax.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt5bb7tax.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rk8q9rc.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rk8q9rc.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rk8q9rc.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rk8q9rc.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy3zhuwr4.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3zhuwr4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3zhuwr4.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpy3zhuwr4.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3zhuwr4.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3zhuwr4.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3zhuwr4.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp51yjxn0x.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51yjxn0x.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51yjxn0x.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp51yjxn0x.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51yjxn0x.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51yjxn0x.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51yjxn0x.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1bmuznvk.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1bmuznvk.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1bmuznvk.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1bmuznvk.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1bmuznvk.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1bmuznvk.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1bmuznvk.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptfx1ko7a.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptfx1ko7a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptfx1ko7a.jl:39\ntest set: Test\
    \ Failed at /tmp/tmptfx1ko7a.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptfx1ko7a.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptfx1ko7a.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptfx1ko7a.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyclaazkn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyclaazkn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyclaazkn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpyclaazkn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyclaazkn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyclaazkn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyclaazkn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpngogmnwg.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngogmnwg.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngogmnwg.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpngogmnwg.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngogmnwg.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngogmnwg.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngogmnwg.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1g28mfp7.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1g28mfp7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1g28mfp7.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1g28mfp7.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1g28mfp7.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1g28mfp7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1g28mfp7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm9z1khu4.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9z1khu4.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9z1khu4.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpm9z1khu4.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9z1khu4.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9z1khu4.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9z1khu4.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5ei9uu_a.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ei9uu_a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ei9uu_a.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp5ei9uu_a.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ei9uu_a.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ei9uu_a.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ei9uu_a.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf6yop1bh.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6yop1bh.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6yop1bh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpf6yop1bh.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6yop1bh.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6yop1bh.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6yop1bh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp_t61hck.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_t61hck.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_t61hck.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpp_t61hck.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_t61hck.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_t61hck.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_t61hck.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx95yz8pk.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx95yz8pk.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx95yz8pk.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpx95yz8pk.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx95yz8pk.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx95yz8pk.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx95yz8pk.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpko5a76fn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko5a76fn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko5a76fn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpko5a76fn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpko5a76fn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpko5a76fn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpko5a76fn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ty2iwvy.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ty2iwvy.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ty2iwvy.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ty2iwvy.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpczq4jk8e.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczq4jk8e.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczq4jk8e.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpczq4jk8e.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczq4jk8e.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczq4jk8e.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpczq4jk8e.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaxio1ufy.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaxio1ufy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaxio1ufy.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaxio1ufy.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaxio1ufy.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaxio1ufy.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaxio1ufy.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6n96wmkr.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6n96wmkr.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6n96wmkr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp6n96wmkr.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6n96wmkr.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6n96wmkr.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6n96wmkr.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwkckrgnb.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwkckrgnb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwkckrgnb.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpwkckrgnb.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwkckrgnb.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwkckrgnb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwkckrgnb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp98359ifn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98359ifn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp98359ifn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp98359ifn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98359ifn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp98359ifn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp98359ifn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4z_8pm9.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4z_8pm9.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4z_8pm9.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpr4z_8pm9.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4z_8pm9.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4z_8pm9.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4z_8pm9.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5siftg72.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5siftg72.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5siftg72.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp5siftg72.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5siftg72.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5siftg72.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5siftg72.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_20fx7b.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_20fx7b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_20fx7b.jl:39\ntest set: Test\
    \ Failed at /tmp/tmph_20fx7b.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_20fx7b.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_20fx7b.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_20fx7b.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd58ccdj7.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd58ccdj7.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd58ccdj7.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpd58ccdj7.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd58ccdj7.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd58ccdj7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd58ccdj7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6u_03aa.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6u_03aa.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6u_03aa.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpb6u_03aa.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6u_03aa.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6u_03aa.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6u_03aa.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo3s0q0fz.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3s0q0fz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3s0q0fz.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpo3s0q0fz.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3s0q0fz.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3s0q0fz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo3s0q0fz.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3kkdu4hd.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkdu4hd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkdu4hd.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp3kkdu4hd.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkdu4hd.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkdu4hd.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3kkdu4hd.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfpur0dz3.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpur0dz3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpur0dz3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfpur0dz3.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpur0dz3.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpur0dz3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpur0dz3.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_fqe_zex.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_fqe_zex.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_fqe_zex.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp_fqe_zex.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_fqe_zex.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_fqe_zex.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fqe_zex.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1v6lqlju.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1v6lqlju.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1v6lqlju.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1v6lqlju.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1v6lqlju.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1v6lqlju.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1v6lqlju.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdndj3c3z.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdndj3c3z.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdndj3c3z.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpdndj3c3z.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdndj3c3z.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdndj3c3z.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdndj3c3z.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpddxczzwk.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddxczzwk.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddxczzwk.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpddxczzwk.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddxczzwk.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddxczzwk.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpddxczzwk.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6p4gtods.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6p4gtods.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6p4gtods.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp6p4gtods.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6p4gtods.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6p4gtods.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6p4gtods.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1akyjjwj.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1akyjjwj.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1akyjjwj.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp1akyjjwj.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1akyjjwj.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1akyjjwj.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1akyjjwj.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaibcmw85.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaibcmw85.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaibcmw85.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpaibcmw85.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaibcmw85.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaibcmw85.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaibcmw85.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptoyykxxx.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptoyykxxx.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptoyykxxx.jl:36\ntest set: Test\
    \ Failed at /tmp/tmptoyykxxx.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptoyykxxx.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptoyykxxx.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptoyykxxx.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0pqbemw6.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pqbemw6.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pqbemw6.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp0pqbemw6.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pqbemw6.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pqbemw6.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0pqbemw6.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykq3493f.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykq3493f.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykq3493f.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpykq3493f.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykq3493f.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykq3493f.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykq3493f.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplu4yuhvr.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplu4yuhvr.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplu4yuhvr.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplu4yuhvr.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplu4yuhvr.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplu4yuhvr.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplu4yuhvr.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplm0tklfk.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm0tklfk.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm0tklfk.jl:39\ntest set: Test\
    \ Failed at /tmp/tmplm0tklfk.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm0tklfk.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm0tklfk.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplm0tklfk.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp74_lt2j5.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74_lt2j5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74_lt2j5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp74_lt2j5.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74_lt2j5.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74_lt2j5.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp74_lt2j5.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmgg2w0bt.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmgg2w0bt.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmgg2w0bt.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmgg2w0bt.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmgg2w0bt.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmgg2w0bt.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmgg2w0bt.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqyc7_3os.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyc7_3os.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyc7_3os.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqyc7_3os.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw785ljkb.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw785ljkb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw785ljkb.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpw785ljkb.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw785ljkb.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw785ljkb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw785ljkb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpugee_56c.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugee_56c.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugee_56c.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpugee_56c.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugee_56c.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugee_56c.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugee_56c.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8p2odbw2.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8p2odbw2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8p2odbw2.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp8p2odbw2.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8p2odbw2.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8p2odbw2.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8p2odbw2.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprb9i23jq.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprb9i23jq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprb9i23jq.jl:39\ntest set: Test\
    \ Failed at /tmp/tmprb9i23jq.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprb9i23jq.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprb9i23jq.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprb9i23jq.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8azf0dk7.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8azf0dk7.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8azf0dk7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8azf0dk7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmlf82gjo.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmlf82gjo.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmlf82gjo.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmlf82gjo.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmlf82gjo.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmlf82gjo.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlf82gjo.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqlwvsjdz.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlwvsjdz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlwvsjdz.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpqlwvsjdz.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlwvsjdz.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlwvsjdz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqlwvsjdz.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw9pjgtxx.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9pjgtxx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9pjgtxx.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpw9pjgtxx.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9pjgtxx.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9pjgtxx.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9pjgtxx.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuylc3o69.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuylc3o69.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuylc3o69.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpuylc3o69.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuylc3o69.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuylc3o69.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuylc3o69.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx5rlc87u.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5rlc87u.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5rlc87u.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpx5rlc87u.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5rlc87u.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5rlc87u.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5rlc87u.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6hte8x08.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hte8x08.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hte8x08.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp6hte8x08.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hte8x08.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hte8x08.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hte8x08.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgijd04_u.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgijd04_u.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgijd04_u.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpgijd04_u.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgijd04_u.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgijd04_u.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgijd04_u.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl3w4rzrj.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl3w4rzrj.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl3w4rzrj.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpl3w4rzrj.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl3w4rzrj.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl3w4rzrj.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl3w4rzrj.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxahuhb3p.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxahuhb3p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxahuhb3p.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpxahuhb3p.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxahuhb3p.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxahuhb3p.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxahuhb3p.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy51zd43s.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy51zd43s.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy51zd43s.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpy51zd43s.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy51zd43s.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy51zd43s.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy51zd43s.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0vlejnvg.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0vlejnvg.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0vlejnvg.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0vlejnvg.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0vlejnvg.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0vlejnvg.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0vlejnvg.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg5v6i66c.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg5v6i66c.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5v6i66c.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg5v6i66c.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg5v6i66c.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg5v6i66c.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5v6i66c.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuda6yhao.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuda6yhao.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuda6yhao.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpuda6yhao.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuda6yhao.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuda6yhao.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuda6yhao.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn59iu15d.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn59iu15d.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn59iu15d.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpn59iu15d.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn59iu15d.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn59iu15d.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn59iu15d.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxld1fug3.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxld1fug3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxld1fug3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpxld1fug3.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxld1fug3.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxld1fug3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxld1fug3.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuc869yr3.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuc869yr3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuc869yr3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpuc869yr3.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuc869yr3.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuc869yr3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuc869yr3.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmwqxyqh1.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwqxyqh1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwqxyqh1.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmwqxyqh1.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwqxyqh1.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwqxyqh1.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwqxyqh1.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9al39gmm.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9al39gmm.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9al39gmm.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp9al39gmm.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9al39gmm.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9al39gmm.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9al39gmm.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcw669rq.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfcw669rq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfcw669rq.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfcw669rq.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfcw669rq.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfcw669rq.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcw669rq.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppde31bwp.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppde31bwp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppde31bwp.jl:39\ntest set: Test\
    \ Failed at /tmp/tmppde31bwp.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppde31bwp.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppde31bwp.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppde31bwp.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86qk3u9b.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp86qk3u9b.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp86qk3u9b.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp86qk3u9b.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp86qk3u9b.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp86qk3u9b.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86qk3u9b.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9r799tct.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r799tct.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r799tct.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp9r799tct.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r799tct.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r799tct.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9r799tct.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8xv5s_ao.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xv5s_ao.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xv5s_ao.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp8xv5s_ao.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xv5s_ao.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xv5s_ao.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8xv5s_ao.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr3atajsz.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3atajsz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3atajsz.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpr3atajsz.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3atajsz.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3atajsz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr3atajsz.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg1l0uyw_.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg1l0uyw_.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg1l0uyw_.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1l0uyw_.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn1ci5lms.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1ci5lms.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1ci5lms.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpn1ci5lms.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1ci5lms.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1ci5lms.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn1ci5lms.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphg_yhhox.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg_yhhox.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg_yhhox.jl:39\ntest set: Test\
    \ Failed at /tmp/tmphg_yhhox.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg_yhhox.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg_yhhox.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphg_yhhox.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkcfhi45p.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcfhi45p.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcfhi45p.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpkcfhi45p.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkcfhi45p.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkcfhi45p.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkcfhi45p.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82tobznc.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82tobznc.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82tobznc.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp82tobznc.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82tobznc.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82tobznc.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82tobznc.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd8s74nr8.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8s74nr8.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8s74nr8.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpd8s74nr8.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8s74nr8.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8s74nr8.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8s74nr8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn3205535.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3205535.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3205535.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpn3205535.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3205535.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3205535.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn3205535.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg2qkpb_k.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg2qkpb_k.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg2qkpb_k.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg2qkpb_k.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp84l7cv1r.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84l7cv1r.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84l7cv1r.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp84l7cv1r.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84l7cv1r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84l7cv1r.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84l7cv1r.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    if length(lst) == 2\n        return\
    \ lst[1] <= lst[2]\n    end\n    if lst[1] > lst[2]\n        return false\n  \
    \  end\n    return is_sorted(lst[2:end])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp03y7ae03.jl:47\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == true\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] is_sorted(lst::Vector{Int64})\n     @\
    \ Main /tmp/tmp03y7ae03.jl:31\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp03y7ae03.jl:47 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp03y7ae03.jl:40\ntest set:\
    \ Test Failed at /tmp/tmp03y7ae03.jl:50\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03y7ae03.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03y7ae03.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp03y7ae03.jl:51\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03y7ae03.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03y7ae03.jl:40\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |   10     2      1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp03y7ae03.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa8zk3zxf.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa8zk3zxf.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa8zk3zxf.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpa8zk3zxf.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa8zk3zxf.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa8zk3zxf.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa8zk3zxf.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppz8nx2gk.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppz8nx2gk.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppz8nx2gk.jl:36\ntest set: Test\
    \ Failed at /tmp/tmppz8nx2gk.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppz8nx2gk.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppz8nx2gk.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppz8nx2gk.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpesvkuvvy.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpesvkuvvy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpesvkuvvy.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpesvkuvvy.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpesvkuvvy.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpesvkuvvy.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesvkuvvy.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi94w7dh_.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi94w7dh_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi94w7dh_.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpi94w7dh_.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi94w7dh_.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi94w7dh_.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi94w7dh_.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe5gfp5m5.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5gfp5m5.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5gfp5m5.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpe5gfp5m5.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5gfp5m5.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5gfp5m5.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5gfp5m5.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl2qhq4a3.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2qhq4a3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2qhq4a3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpl2qhq4a3.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2qhq4a3.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2qhq4a3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2qhq4a3.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp83cl1r70.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83cl1r70.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83cl1r70.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp83cl1r70.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83cl1r70.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83cl1r70.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp83cl1r70.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp15y0xu5_.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15y0xu5_.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15y0xu5_.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp15y0xu5_.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15y0xu5_.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15y0xu5_.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp15y0xu5_.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkh6pirg.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkh6pirg.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkh6pirg.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpfkh6pirg.jl:47\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkh6pirg.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkh6pirg.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkh6pirg.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg2lqef4h.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg2lqef4h.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg2lqef4h.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg2lqef4h.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg2lqef4h.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg2lqef4h.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg2lqef4h.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpme9xebs3.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpme9xebs3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpme9xebs3.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpme9xebs3.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpme9xebs3.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpme9xebs3.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpme9xebs3.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph25yvr2z.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph25yvr2z.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph25yvr2z.jl:39\ntest set: Test\
    \ Failed at /tmp/tmph25yvr2z.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph25yvr2z.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph25yvr2z.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph25yvr2z.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmsksi5ki.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsksi5ki.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsksi5ki.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmsksi5ki.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsksi5ki.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsksi5ki.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsksi5ki.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzpt6nl0c.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpt6nl0c.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpt6nl0c.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzpt6nl0c.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9eg4tt9e.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eg4tt9e.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eg4tt9e.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9eg4tt9e.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1xbpy3a.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xbpy3a.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xbpy3a.jl:39\ntest set: Test\
    \ Failed at /tmp/tmph1xbpy3a.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph1xbpy3a.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph1xbpy3a.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1xbpy3a.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0g1x_lac.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g1x_lac.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g1x_lac.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp0g1x_lac.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g1x_lac.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g1x_lac.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0g1x_lac.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkj19gspz.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkj19gspz.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkj19gspz.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpkj19gspz.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkj19gspz.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkj19gspz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkj19gspz.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpavjsw9jp.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpavjsw9jp.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpavjsw9jp.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpavjsw9jp.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpavjsw9jp.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpavjsw9jp.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpavjsw9jp.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtidqvzn.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtidqvzn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtidqvzn.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpvtidqvzn.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtidqvzn.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtidqvzn.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtidqvzn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ha9aizq.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ha9aizq.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ha9aizq.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp4ha9aizq.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ha9aizq.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ha9aizq.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ha9aizq.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwudgde0g.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwudgde0g.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwudgde0g.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpwudgde0g.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwudgde0g.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwudgde0g.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwudgde0g.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphd_bgond.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd_bgond.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd_bgond.jl:39\ntest set: Test\
    \ Failed at /tmp/tmphd_bgond.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd_bgond.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd_bgond.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd_bgond.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4cy4opov.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cy4opov.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cy4opov.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp4cy4opov.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cy4opov.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cy4opov.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4cy4opov.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd8n31glx.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8n31glx.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8n31glx.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpd8n31glx.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8n31glx.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8n31glx.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8n31glx.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcekwr5x.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfcekwr5x.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfcekwr5x.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfcekwr5x.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfcekwr5x.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfcekwr5x.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcekwr5x.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99tafwk2.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99tafwk2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99tafwk2.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp99tafwk2.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99tafwk2.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99tafwk2.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99tafwk2.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcdloypeb.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdloypeb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdloypeb.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpcdloypeb.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdloypeb.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdloypeb.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcdloypeb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpidhuy0jv.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpidhuy0jv.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpidhuy0jv.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpidhuy0jv.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpidhuy0jv.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpidhuy0jv.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpidhuy0jv.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_6xpz7r.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_6xpz7r.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_6xpz7r.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpa_6xpz7r.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_6xpz7r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_6xpz7r.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_6xpz7r.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgw0tkr7s.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgw0tkr7s.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgw0tkr7s.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgw0tkr7s.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe4amk2yy.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4amk2yy.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4amk2yy.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpe4amk2yy.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4amk2yy.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4amk2yy.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4amk2yy.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm2wyw0pd.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm2wyw0pd.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm2wyw0pd.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpm2wyw0pd.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm2wyw0pd.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm2wyw0pd.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm2wyw0pd.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk4pyxwx7.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk4pyxwx7.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk4pyxwx7.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk4pyxwx7.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzt4ixrnf.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzt4ixrnf.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzt4ixrnf.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzt4ixrnf.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtgx1r6s.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtgx1r6s.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtgx1r6s.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpvtgx1r6s.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvtgx1r6s.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvtgx1r6s.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtgx1r6s.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv2c9196i.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2c9196i.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2c9196i.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpv2c9196i.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv2c9196i.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv2c9196i.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv2c9196i.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn2jpcdzi.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2jpcdzi.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2jpcdzi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpn2jpcdzi.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2jpcdzi.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2jpcdzi.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2jpcdzi.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] >= lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0a74qbax.jl:51\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0a74qbax.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0a74qbax.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0a74qbax.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo78nd7zs.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo78nd7zs.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo78nd7zs.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpo78nd7zs.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo78nd7zs.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo78nd7zs.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo78nd7zs.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3qy1n20.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3qy1n20.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3qy1n20.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpe3qy1n20.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3qy1n20.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3qy1n20.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3qy1n20.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 2:length(lst)\n        if lst[i]\
    \ < lst[i-1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg8rpbkv0.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8rpbkv0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8rpbkv0.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpg8rpbkv0.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8rpbkv0.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8rpbkv0.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8rpbkv0.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a vector of numbers, return whether or not they are\
    \ sorted\n    in ascending order. If vector has more than 1 duplicate of the same\n\
    \    number, return false. Assume no negative numbers and only integers.\n\n \
    \   Examples\n    >>> is_sorted([5])\n    true\n    >>> is_sorted([1, 2, 3, 4,\
    \ 5])\n    true\n    >>> is_sorted([1, 3, 2, 4, 5])\n    false\n    >>> is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    true\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    true\n\
    \    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    false\n    >>> is_sorted([1, 2,\
    \ 2, 3, 3, 4])\n    true\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    false\n \
    \   \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool \n    if length(lst)\
    \ == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n        if\
    \ lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfgsdgqml.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfgsdgqml.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfgsdgqml.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpfgsdgqml.jl:50\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfgsdgqml.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfgsdgqml.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfgsdgqml.jl:37\n"
  exit_code: 1
  status: SyntaxError

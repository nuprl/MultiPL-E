name: HumanEval_93_encode
language: jl
results:
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp06hhqfsk.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp06hhqfsk.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp06hhqfsk.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp06hhqfsk.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp06hhqfsk.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp06hhqfsk.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp06hhqfsk.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvotjt1kc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvotjt1kc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvotjt1kc.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvotjt1kc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvotjt1kc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvotjt1kc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvotjt1kc.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx5r6zi33.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpx5r6zi33.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx5r6zi33.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx5r6zi33.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpx5r6zi33.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpx5r6zi33.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx5r6zi33.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo8xhg9dy.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8xhg9dy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8xhg9dy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo8xhg9dy.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8xhg9dy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8xhg9dy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo8xhg9dy.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8xhg9dy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8xhg9dy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo8xhg9dy.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8xhg9dy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8xhg9dy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo8xhg9dy.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo8xhg9dy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp79qyowed.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp79qyowed.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp79qyowed.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp79qyowed.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp79qyowed.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp79qyowed.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp79qyowed.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpywvec9q1.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpywvec9q1.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpywvec9q1.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpywvec9q1.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpywvec9q1.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpywvec9q1.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpywvec9q1.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpalztijqy.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpalztijqy.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpalztijqy.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpalztijqy.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp22fymnu2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp22fymnu2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp22fymnu2.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp22fymnu2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp22fymnu2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp22fymnu2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp22fymnu2.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpepyels1_.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpepyels1_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpepyels1_.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpepyels1_.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpepyels1_.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpepyels1_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpepyels1_.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    new_message = \"\"\n\
    \    for i in message\n        if i in vowels\n            new_message = new_message\
    \ * i\n        elseif i in uppercase(vowels)\n            new_message = new_message\
    \ * i\n        else\n            new_message = new_message * uppercase(i)\n  \
    \      end\n    end\n    return new_message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp28wsmw35.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching uppercase(::Vector{String})\\n  Closest candidates are:\\n \
    \   uppercase(!Matched::T) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:251\\\
    n    uppercase(!Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:525\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp28wsmw35.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp28wsmw35.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp28wsmw35.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp28wsmw35.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching uppercase(::Vector{String})\\\
    n  Closest candidates are:\\n    uppercase(!Matched::T) where T<:AbstractChar\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:251\\n  \
    \  uppercase(!Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:525\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp28wsmw35.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp28wsmw35.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp28wsmw35.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp28wsmw35.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching uppercase(::Vector{String})\\\
    n  Closest candidates are:\\n    uppercase(!Matched::T) where T<:AbstractChar\
    \ at /shared/centos7/juli"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp28gbw4jk.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28gbw4jk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28gbw4jk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp28gbw4jk.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28gbw4jk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28gbw4jk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp28gbw4jk.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28gbw4jk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28gbw4jk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp28gbw4jk.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28gbw4jk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28gbw4jk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp28gbw4jk.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp28gbw4jk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2ib6v2r_.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2ib6v2r_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2ib6v2r_.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2ib6v2r_.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp2ib6v2r_.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2ib6v2r_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2ib6v2r_.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsxq1m7uk.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpsxq1m7uk.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsxq1m7uk.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsxq1m7uk.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi0r5l27k.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpi0r5l27k.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi0r5l27k.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi0r5l27k.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpi0r5l27k.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpi0r5l27k.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi0r5l27k.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsbam5eb_.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpsbam5eb_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsbam5eb_.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsbam5eb_.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_c_wc78n.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_c_wc78n.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_c_wc78n.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_c_wc78n.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp_c_wc78n.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_c_wc78n.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_c_wc78n.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1oczw03k.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oczw03k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oczw03k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oczw03k.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oczw03k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oczw03k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oczw03k.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oczw03k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oczw03k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oczw03k.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1oczw03k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1oczw03k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1oczw03k.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1oczw03k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # create a dictionary of vowels\n    vowels = Dict(\"a\"=>\"c\", \"e\"\
    =>\"g\", \"i\"=>\"k\", \"o\"=>\"q\", \"u\"=>\"y\")\n    # create a dictionary\
    \ of letters\n    letters = Dict(\"a\"=>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"\
    d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"\
    I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"\
    o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"\
    T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"\
    z\"=>\"Z\")\n    # create a dictionary of letters\n    letters2 = Dict(\"A\"=>\"\
    a\", \"B\"=>\"b\", \"C\"=>\"c\", \"D\"=>\"d\", \"E\"=>\"e\", \"F\"=>\"f\", \"\
    G\"=>\"g\", \"H\"=>\"h\", \"I\"=>\"i\", \"J\"=>\"j\", \"K\"=>\"k\", \"L\"=>\"\
    l\", \"M\"=>\"m\", \"N\"=>\"n\", \"O\"=>\"o\", \"P\"=>\"p\", \"Q\"=>\"q\", \"\
    R\"=>\"r\", \"S\"=>\"s\", \"T\"=>\"t\", \"U\"=>\"u\", \"V\"=>\"v\", \"W\"=>\"\
    w\", \"X\"=>\"x\", \"Y\"=>\"y\", \"Z\"=>\"z\")\n    # create an empty string\n\
    \    new_message = \"\"\n    # loop through the message\n    for i in message\n\
    \        # if the letter is a vowel\n        if i in keys(vowels)\n          \
    \  # replace the letter with the letter that appears 2 places ahead of that vowel\
    \ in the english alphabet\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq1kleocj.jl:1\nin expression starting at /tmp/tmpq1kleocj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgk2otnoo.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgk2otnoo.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgk2otnoo.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgk2otnoo.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpgk2otnoo.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgk2otnoo.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgk2otnoo.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpevnbara3.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpevnbara3.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpevnbara3.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpevnbara3.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpevnbara3.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpevnbara3.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpevnbara3.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkac3n562.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkac3n562.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkac3n562.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkac3n562.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu23x6v6u.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu23x6v6u.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu23x6v6u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu23x6v6u.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu23x6v6u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu23x6v6u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu23x6v6u.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu23x6v6u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu23x6v6u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu23x6v6u.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu23x6v6u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu23x6v6u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu23x6v6u.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu23x6v6u.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo9z4yfkl.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpo9z4yfkl.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo9z4yfkl.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo9z4yfkl.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpo9z4yfkl.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpo9z4yfkl.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo9z4yfkl.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq7n9k82v.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpq7n9k82v.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpq7n9k82v.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpq7n9k82v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpq7n9k82v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpq7n9k82v.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpq7n9k82v.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpurk_afal.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpurk_afal.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpurk_afal.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpurk_afal.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpurk_afal.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpurk_afal.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpurk_afal.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgsh61wnp.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgsh61wnp.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgsh61wnp.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgsh61wnp.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpgsh61wnp.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgsh61wnp.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgsh61wnp.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbaiqksgf.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbaiqksgf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbaiqksgf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbaiqksgf.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbaiqksgf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbaiqksgf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbaiqksgf.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbaiqksgf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbaiqksgf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbaiqksgf.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbaiqksgf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbaiqksgf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbaiqksgf.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbaiqksgf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprxypbroy.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxypbroy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxypbroy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprxypbroy.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxypbroy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxypbroy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprxypbroy.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxypbroy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxypbroy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprxypbroy.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxypbroy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxypbroy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprxypbroy.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprxypbroy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph4qnqxhf.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4qnqxhf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4qnqxhf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph4qnqxhf.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4qnqxhf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4qnqxhf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph4qnqxhf.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4qnqxhf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4qnqxhf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph4qnqxhf.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4qnqxhf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4qnqxhf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph4qnqxhf.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph4qnqxhf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt1b0rer6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpt1b0rer6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt1b0rer6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt1b0rer6.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5u2yt2oo.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp5u2yt2oo.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5u2yt2oo.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5u2yt2oo.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc7l4vwwb.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpc7l4vwwb.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc7l4vwwb.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc7l4vwwb.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_z32lmnq.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_z32lmnq.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_z32lmnq.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_z32lmnq.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp56kiouk2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp56kiouk2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp56kiouk2.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp56kiouk2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp56kiouk2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp56kiouk2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp56kiouk2.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpst1xk70l.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpst1xk70l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpst1xk70l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpst1xk70l.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpst1xk70l.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpst1xk70l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpst1xk70l.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpst1xk70l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpst1xk70l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpst1xk70l.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpst1xk70l.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpst1xk70l.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpst1xk70l.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpst1xk70l.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvwnunek8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvwnunek8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvwnunek8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvwnunek8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvwnunek8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvwnunek8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvwnunek8.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpteo2lmd6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpteo2lmd6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpteo2lmd6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpteo2lmd6.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8aub7_hr.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp8aub7_hr.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8aub7_hr.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8aub7_hr.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # create a dictionary of vowels and their replacements\n    vowels = Dict('a'=>'c',\
    \ 'e'=>'g', 'i'=>'k', 'o'=>'q', 'u'=>'y')\n    # create a new string to store\
    \ the encoded message\n    encoded = \"\"\n    # iterate through the message\n\
    \    for letter in message\n        # if the letter is a vowel, replace it with\
    \ the encoded letter\n        if letter in keys(vowels)\n            encoded *=\
    \ vowels[letter]\n        # if the letter is a capital letter, make it lowercase\n\
    \        elseif letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            encoded *=\
    \ lowercase(letter)\n        # if the letter is a lowercase letter, make it uppercase\n\
    \        elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n            encoded *=\
    \ uppercase(letter)\n        # if the letter is not a letter, leave it as is\n\
    \        else\n            encoded *= letter\n        end\n    end\n    return\
    \ encoded\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp28nvu1gu.jl:25\nin expression\
    \ starting at /tmp/tmp28nvu1gu.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk6qez0he.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6qez0he.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6qez0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk6qez0he.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6qez0he.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6qez0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk6qez0he.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6qez0he.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6qez0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk6qez0he.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6qez0he.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6qez0he.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk6qez0he.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk6qez0he.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # create a dictionary of vowels\n    vowels = Dict(\"a\"=>\"c\", \"e\"\
    =>\"g\", \"i\"=>\"k\", \"o\"=>\"q\", \"u\"=>\"y\")\n    # create a dictionary\
    \ of letters\n    letters = Dict(\"a\"=>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"\
    d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"\
    I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"\
    o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"\
    T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"\
    z\"=>\"Z\")\n    # create an empty string to store the encoded message\n    encoded_message\
    \ = \"\"\n    # loop through the message\n    for i in message\n        # check\
    \ if the letter is a vowel\n        if i in keys(vowels)\n            # if it\
    \ is, add the value of the vowel to the encoded message\n            encoded_message\
    \ = encoded_message * vowels[i]\n        # check if the letter is a letter\n \
    \       elseif i in keys(letters)\n            # if it is, add the value of the\
    \ letter to the encoded message\n            encoded_message = encoded_message\
    \ * letters[i]\n        # if it is not a vowel or a letter, add the letter to\
    \ the encoded message\n        else\n            encoded_message = encoded_message\
    \ * i\n        end\n    end\n    # return the encoded message\n    return encoded_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ycxaekb.jl:44\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ycxaekb.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ycxaekb.jl:43\ntest set: Test\
    \ Failed at /tmp/tmp7ycxaekb.jl:45\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ycxaekb.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ycxaekb.jl:43\ntest set: Test\
    \ Failed at /tmp/tmp7ycxaekb.jl:46\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ycxaekb.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ycxaekb.jl:43\ntest set: Test\
    \ Failed at /tmp/tmp7ycxaekb.jl:47\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ycxaekb.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ycxaekb.jl:43\ntest set: Test\
    \ Failed at /tmp/tmp7ycxaekb.jl:48\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ycxaekb.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfytwdtmd.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfytwdtmd.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfytwdtmd.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfytwdtmd.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpfytwdtmd.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfytwdtmd.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfytwdtmd.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded_message = \"\
    \"\n    for letter in message\n        if letter in vowels\n            encoded_message\
    \ = encoded_message * letter[2]\n        else\n            encoded_message = encoded_message\
    \ * letter\n        end\n    end\n    return encoded_message\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpli9l6o2v.jl:31\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpli9l6o2v.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpli9l6o2v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpli9l6o2v.jl:32\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpli9l6o2v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpli9l6o2v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpli9l6o2v.jl:33\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpli9l6o2v.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpli9l6o2v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpli9l6o2v.jl:34\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpli9l6o2v.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpli9l6o2v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpli9l6o2v.jl:35\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpli9l6o2v.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmamwe2x4.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmamwe2x4.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmamwe2x4.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmamwe2x4.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpmamwe2x4.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmamwe2x4.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmamwe2x4.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz5ug12_x.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpz5ug12_x.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz5ug12_x.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz5ug12_x.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpz5ug12_x.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpz5ug12_x.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz5ug12_x.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    message = uppercase(message)\n    message = replace(message, \"A\" =>\
    \ \"C\")\n    message = replace(message, \"E\" => \"G\")\n    message = replace(message,\
    \ \"I\" => \"K\")\n    message = replace(message, \"O\" => \"Q\")\n    message\
    \ = replace(message, \"U\" => \"W\")\n    message = replace(message, \"Y\" =>\
    \ \"A\")\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaqekwg5m.jl:29\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqekwg5m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqekwg5m.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpaqekwg5m.jl:30\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWDCSKR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqekwg5m.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqekwg5m.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpaqekwg5m.jl:31\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"AGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqekwg5m.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqekwg5m.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpaqekwg5m.jl:32\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THKS KS C MGSSCGG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaqekwg5m.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaqekwg5m.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpaqekwg5m.jl:33\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaqekwg5m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded = \"\"\n   \
    \ for i in 1:length(message)\n        if message[i] in vowels\n            encoded\
    \ = encoded * message[i+2]\n        else\n            encoded = encoded * message[i]\n\
    \        end\n    end\n    return uppercase(encoded)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjlg0oo6_.jl:31\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjlg0oo6_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjlg0oo6_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjlg0oo6_.jl:32\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MUDASIR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjlg0oo6_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjlg0oo6_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjlg0oo6_.jl:33\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjlg0oo6_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjlg0oo6_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjlg0oo6_.jl:34\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THIS IS A MESSAGE\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjlg0oo6_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjlg0oo6_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjlg0oo6_.jl:35\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjlg0oo6_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph2_3rt6h.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmph2_3rt6h.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph2_3rt6h.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph2_3rt6h.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmph2_3rt6h.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmph2_3rt6h.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph2_3rt6h.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # TODO: write your code here\n    return message\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd94ct4e5.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd94ct4e5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd94ct4e5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd94ct4e5.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd94ct4e5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd94ct4e5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd94ct4e5.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd94ct4e5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd94ct4e5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd94ct4e5.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd94ct4e5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd94ct4e5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd94ct4e5.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd94ct4e5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpceas5gyq.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpceas5gyq.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpceas5gyq.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpceas5gyq.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    encoded_message = \"\"\n    for letter in message\n\
    \        if letter in vowels\n            encoded_message *= vowels[(findfirst(vowels,\
    \ letter) + 2) % 5]\n        elseif letter in uppercase(letters)\n           \
    \ encoded_message *= lowercase(letter)\n        elseif letter in lowercase(letters)\n\
    \            encoded_message *= uppercase(letter)\n        else\n            encoded_message\
    \ *= letter\n        end\n    end\n    return encoded_message\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt20_f0w7.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ letters not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpt20_f0w7.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt20_f0w7.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt20_f0w7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpt20_f0w7.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: letters not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpt20_f0w7.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt20_f0w7.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt20_f0w7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpt20_f0w7.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: letters not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpt20_f0w7.jl:20\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt20_f0w7.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt20_f0w7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpt20_f0w7.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ letters not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpt20_f0w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgzxn0npm.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgzxn0npm.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgzxn0npm.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgzxn0npm.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1mr4rh64.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1mr4rh64.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1mr4rh64.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1mr4rh64.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp1mr4rh64.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1mr4rh64.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1mr4rh64.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjcoluzd7.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjcoluzd7.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjcoluzd7.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjcoluzd7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpjcoluzd7.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjcoluzd7.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjcoluzd7.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    new_message = \"\"\n    for i in message\n        if i in \"aeiou\"\n\
    \            new_message = new_message * i\n        elseif i in \"AEIOU\"\n  \
    \          new_message = new_message * i\n        elseif i in \"bcdfghjklmnpqrstvwxyz\"\
    \n            new_message = new_message * i\n        elseif i in \"BCDFGHJKLMNPQRSTVWXYZ\"\
    \n            new_message = new_message * i\n        else\n            new_message\
    \ = new_message * i\n        end\n    end\n    return new_message\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ettnf4m.jl:36\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ettnf4m.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ettnf4m.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp8ettnf4m.jl:37\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ettnf4m.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ettnf4m.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp8ettnf4m.jl:38\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ettnf4m.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ettnf4m.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp8ettnf4m.jl:39\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ettnf4m.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ettnf4m.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp8ettnf4m.jl:40\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ettnf4m.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpho79p7nr.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho79p7nr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho79p7nr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpho79p7nr.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho79p7nr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho79p7nr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpho79p7nr.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho79p7nr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho79p7nr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpho79p7nr.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpho79p7nr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpho79p7nr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpho79p7nr.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpho79p7nr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvojt1voq.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvojt1voq.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvojt1voq.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvojt1voq.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvojt1voq.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvojt1voq.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvojt1voq.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp49x72zr1.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp49x72zr1.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp49x72zr1.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp49x72zr1.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp49x72zr1.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp49x72zr1.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp49x72zr1.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpix0j4ylt.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpix0j4ylt.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpix0j4ylt.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpix0j4ylt.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu4o76bhr.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4o76bhr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4o76bhr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu4o76bhr.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4o76bhr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4o76bhr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu4o76bhr.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4o76bhr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4o76bhr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu4o76bhr.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4o76bhr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4o76bhr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu4o76bhr.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu4o76bhr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp92tetu2f.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp92tetu2f.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp92tetu2f.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp92tetu2f.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp92tetu2f.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp92tetu2f.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp92tetu2f.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp72eetujw.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp72eetujw.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp72eetujw.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp72eetujw.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp72eetujw.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp72eetujw.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp72eetujw.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphnjyln2q.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphnjyln2q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphnjyln2q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphnjyln2q.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphnjyln2q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphnjyln2q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphnjyln2q.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphnjyln2q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphnjyln2q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphnjyln2q.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphnjyln2q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphnjyln2q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphnjyln2q.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphnjyln2q.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl5k5kvrj.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl5k5kvrj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl5k5kvrj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl5k5kvrj.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl5k5kvrj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl5k5kvrj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl5k5kvrj.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl5k5kvrj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl5k5kvrj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl5k5kvrj.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl5k5kvrj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl5k5kvrj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpl5k5kvrj.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5k5kvrj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9g8sbra9.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g8sbra9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g8sbra9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9g8sbra9.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g8sbra9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g8sbra9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9g8sbra9.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g8sbra9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g8sbra9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9g8sbra9.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9g8sbra9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9g8sbra9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9g8sbra9.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9g8sbra9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3tf_xwxc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3tf_xwxc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3tf_xwxc.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3tf_xwxc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp3tf_xwxc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3tf_xwxc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3tf_xwxc.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl3kaxx8u.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpl3kaxx8u.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl3kaxx8u.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl3kaxx8u.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc9pom4o6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpc9pom4o6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc9pom4o6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc9pom4o6.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpc9pom4o6.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpc9pom4o6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc9pom4o6.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm664p1n8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpm664p1n8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm664p1n8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm664p1n8.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpttfl98s5.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttfl98s5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttfl98s5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpttfl98s5.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttfl98s5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttfl98s5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpttfl98s5.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttfl98s5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttfl98s5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpttfl98s5.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpttfl98s5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpttfl98s5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpttfl98s5.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttfl98s5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1rfv5kp2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1rfv5kp2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1rfv5kp2.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1rfv5kp2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp1rfv5kp2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1rfv5kp2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1rfv5kp2.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppp145wwj.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppp145wwj.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppp145wwj.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppp145wwj.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv8grmj8j.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpv8grmj8j.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv8grmj8j.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv8grmj8j.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmkc3ae3_.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmkc3ae3_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmkc3ae3_.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmkc3ae3_.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpmkc3ae3_.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmkc3ae3_.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmkc3ae3_.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplu0sr7pb.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmplu0sr7pb.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplu0sr7pb.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplu0sr7pb.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmplu0sr7pb.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmplu0sr7pb.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplu0sr7pb.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb44b30go.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb44b30go.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb44b30go.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb44b30go.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb44b30go.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb44b30go.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb44b30go.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb44b30go.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb44b30go.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb44b30go.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb44b30go.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb44b30go.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb44b30go.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb44b30go.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  new_message = \"\"\n    for i in message\n        if i in vowels\n        \
    \    new_message = new_message * alphabet[alphabet.index(i) + 2]\n        else\n\
    \            new_message = new_message * i\n        end\n    end\n    return new_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9_z6l4xm.jl:32\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp9_z6l4xm.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp9_z6l4xm.jl:31\\ntest set: Error\
    \ During Test at /tmp/tmp9_z6l4xm.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type String has no field index\\n\
    \  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmp9_z6l4xm.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9_z6l4xm.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9_z6l4xm.jl:31\\ntest set:\
    \ Test Failed at /tmp/tmp9_z6l4xm.jl:34\\n  Expression: candidate(\"YES\") ==\
    \ \"ygs\"\\n   Evaluated: \"YES\" == \"ygs\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    \n    vowels = \"aeiou\"\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encoded_message = \"\"\n    \n    for letter in message\n        if letter\
    \ in vowels\n            index = findfirst(vowels, letter)\n            encoded_message\
    \ *= alphabet[index + 2]\n        elseif letter in alphabet\n            index\
    \ = findfirst(alphabet, letter)\n            encoded_message *= alphabet[index\
    \ + 2]\n        else\n            encoded_message *= letter\n        end\n   \
    \ end\n    \n    return encoded_message\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp59ksmrxr.jl:39\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp59ksmrxr.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp59ksmrxr.jl:38\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded = \"\"\n   \
    \ for i in 1:length(message)\n        if message[i] in vowels\n            encoded\
    \ = encoded * string(vowels[(findfirst(vowels, message[i]) + 2) % 5])\n      \
    \  elseif message[i] in uppercase(message)\n            encoded = encoded * string(lowercase(message[i]))\n\
    \        elseif message[i] in lowercase(message)\n            encoded = encoded\
    \ * string(uppercase(message[i]))\n        else\n            encoded = encoded\
    \ * string(message[i])\n        end\n    end\n    return encoded\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqchjphp3.jl:35\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"test\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqchjphp3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqchjphp3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqchjphp3.jl:36\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"mUDASIR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqchjphp3.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqchjphp3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqchjphp3.jl:37\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"yes\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqchjphp3.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqchjphp3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqchjphp3.jl:38\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"tHIS IS A MESSAGE\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqchjphp3.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqchjphp3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqchjphp3.jl:39\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqchjphp3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgwqota__.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpgwqota__.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgwqota__.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgwqota__.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptqq3ga0v.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptqq3ga0v.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptqq3ga0v.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptqq3ga0v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmptqq3ga0v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptqq3ga0v.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptqq3ga0v.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpimsjilaj.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpimsjilaj.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpimsjilaj.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpimsjilaj.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxcawvx3_.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxcawvx3_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxcawvx3_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxcawvx3_.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxcawvx3_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxcawvx3_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxcawvx3_.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxcawvx3_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxcawvx3_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxcawvx3_.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxcawvx3_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxcawvx3_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxcawvx3_.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcawvx3_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # convert to lower case\n    message = lowercase(message)\n    # create\
    \ a dictionary of vowels\n    vowels = Dict('a'=>'c', 'e'=>'g', 'i'=>'k', 'o'=>'q',\
    \ 'u'=>'s')\n    # create an empty string to store the encoded message\n    encoded\
    \ = \"\"\n    # loop through each character in the message\n    for c in message\n\
    \        # check if the character is a vowel\n        if c in keys(vowels)\n \
    \           # if it is, add the encoded character to the encoded string\n    \
    \        push!(encoded, vowels[c])\n        else\n            # if it isn't, add\
    \ the character to the encoded string\n            push!(encoded, c)\n       \
    \ end\n    end\n    # return the encoded string\n    return uppercase(encoded)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp96szr_xp.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching push!(::String, ::Char)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp96szr_xp.jl:29\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp96szr_xp.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp96szr_xp.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp96szr_xp.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching push!(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp96szr_xp.jl:29\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp96szr_xp.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp96szr_xp.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp04x9fdeu.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp04x9fdeu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp04x9fdeu.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp04x9fdeu.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded_message = \"\
    \"\n    for i in message\n        if i in vowels\n            encoded_message\
    \ *= encode_vowel(i)\n        else\n            encoded_message *= encode_consonant(i)\n\
    \        end\n    end\n    return encoded_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf57k4x94.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ encode_consonant not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmpf57k4x94.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf57k4x94.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf57k4x94.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpf57k4x94.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: encode_consonant not\
    \ defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpf57k4x94.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf57k4x94.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf57k4x94.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpf57k4x94.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: encode_consonant not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpf57k4x94.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf57k4x94.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf57k4x94.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpf57k4x94.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ encode_consonant not defined\\n  Stacktrace:\\n   [1] encode(message::"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfrwt5dcb.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfrwt5dcb.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfrwt5dcb.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfrwt5dcb.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    new_message = \"\"\n    for letter in message\n\
    \        if letter in vowels\n            new_message = new_message * letter[1]\n\
    \        else\n            new_message = new_message * letter\n        end\n \
    \   end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7aq3fcq2.jl:31\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aq3fcq2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aq3fcq2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7aq3fcq2.jl:32\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aq3fcq2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aq3fcq2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7aq3fcq2.jl:33\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aq3fcq2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aq3fcq2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7aq3fcq2.jl:34\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aq3fcq2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aq3fcq2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7aq3fcq2.jl:35\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7aq3fcq2.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxcbznmuh.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxcbznmuh.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxcbznmuh.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxcbznmuh.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5wvm5smj.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wvm5smj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wvm5smj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wvm5smj.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wvm5smj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wvm5smj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wvm5smj.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wvm5smj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wvm5smj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wvm5smj.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wvm5smj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wvm5smj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wvm5smj.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wvm5smj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3vp5n7cn.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3vp5n7cn.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3vp5n7cn.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3vp5n7cn.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptvg7izav.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptvg7izav.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptvg7izav.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptvg7izav.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpraracnet.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpraracnet.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpraracnet.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpraracnet.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpraracnet.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpraracnet.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpraracnet.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    \"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    letters\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    encoded = \"\
    \"\n    for c in message\n        if c in vowels\n            i = findfirst(vowels,\
    \ c)\n            encoded *= letters[i+2]\n        elseif c in letters\n     \
    \       i = findfirst(letters, c)\n            encoded *= letters[i+1]\n     \
    \   else\n            encoded *= c\n        end\n    end\n    return encoded\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn_mlv6ib.jl:49\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n \
    \   findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractString, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn_mlv6ib.jl:36\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn_mlv6ib.jl:49 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn_mlv6ib.jl:48\\ntest set:\
    \ Error During Test at /tmp/tmpn_mlv6ib.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn_mlv6ib.jl:36\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn_mlv6ib.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn_mlv6ib.jl:48\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0a0oc3js.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0a0oc3js.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0a0oc3js.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0a0oc3js.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0a0oc3js.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0a0oc3js.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0a0oc3js.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0a0oc3js.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0a0oc3js.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0a0oc3js.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0a0oc3js.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0a0oc3js.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0a0oc3js.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0a0oc3js.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsdtu8jiq.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdtu8jiq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdtu8jiq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsdtu8jiq.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdtu8jiq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdtu8jiq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsdtu8jiq.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdtu8jiq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdtu8jiq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsdtu8jiq.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsdtu8jiq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsdtu8jiq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsdtu8jiq.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsdtu8jiq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    new_message = \"\"\n    for letter in message\n\
    \        if letter in vowels\n            new_message = new_message * letter[2]\n\
    \        else\n            new_message = new_message * letter\n        end\n \
    \   end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw0q6riit.jl:31\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpw0q6riit.jl:31 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpw0q6riit.jl:30\\ntest set: Error\
    \ During Test at /tmp/tmpw0q6riit.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    message = uppercase(message)\n    message = replace(message, \"A\" =>\
    \ \"C\")\n    message = replace(message, \"E\" => \"G\")\n    message = replace(message,\
    \ \"I\" => \"K\")\n    message = replace(message, \"O\" => \"Q\")\n    message\
    \ = replace(message, \"U\" => \"W\")\n    return message\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zmbogjo.jl:28\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zmbogjo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zmbogjo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp2zmbogjo.jl:29\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWDCSKR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zmbogjo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zmbogjo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp2zmbogjo.jl:30\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zmbogjo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zmbogjo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp2zmbogjo.jl:31\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THKS KS C MGSSCGG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zmbogjo.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zmbogjo.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp2zmbogjo.jl:32\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zmbogjo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdvckp_7h.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpdvckp_7h.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdvckp_7h.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdvckp_7h.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmi6g2qvz.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmi6g2qvz.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmi6g2qvz.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmi6g2qvz.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0i5ki0px.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0i5ki0px.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0i5ki0px.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0i5ki0px.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_no51b4l.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_no51b4l.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_no51b4l.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_no51b4l.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp09hq89lc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp09hq89lc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp09hq89lc.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp09hq89lc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp09hq89lc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp09hq89lc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp09hq89lc.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp97_cw90c.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp97_cw90c.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp97_cw90c.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp97_cw90c.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded = \"\"\n   \
    \ for i in 1:length(message)\n        if message[i] in vowels\n            encoded\
    \ = encoded * message[i]\n        else\n            encoded = encoded * uppercase(message[i])\n\
    \        end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoymyqh1g.jl:31\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoymyqh1g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoymyqh1g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpoymyqh1g.jl:32\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MUDASIR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoymyqh1g.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoymyqh1g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpoymyqh1g.jl:33\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoymyqh1g.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoymyqh1g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpoymyqh1g.jl:34\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THIS IS A MESSAGE\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoymyqh1g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoymyqh1g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpoymyqh1g.jl:35\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoymyqh1g.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1_hzs9pu.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1_hzs9pu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1_hzs9pu.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1_hzs9pu.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp1_hzs9pu.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1_hzs9pu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1_hzs9pu.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # TODO: Write your code here\n    return \"TGST\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph109wl96.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph109wl96.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph109wl96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph109wl96.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph109wl96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph109wl96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph109wl96.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph109wl96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph109wl96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph109wl96.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph109wl96.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph109wl96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmph109wl96.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph109wl96.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdej55t96.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdej55t96.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdej55t96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdej55t96.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdej55t96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdej55t96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdej55t96.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdej55t96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdej55t96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdej55t96.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdej55t96.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdej55t96.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdej55t96.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdej55t96.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplb7ax96z.jl:22\\n  Test threw\
    \ exception\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3ukj33t8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3ukj33t8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3ukj33t8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3ukj33t8.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe_mf9vo8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpe_mf9vo8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpe_mf9vo8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpe_mf9vo8.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpioya9mfi.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpioya9mfi.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpioya9mfi.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpioya9mfi.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpix6rjhp8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpix6rjhp8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpix6rjhp8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpix6rjhp8.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb8mj_pvt.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8mj_pvt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8mj_pvt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8mj_pvt.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8mj_pvt.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8mj_pvt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8mj_pvt.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8mj_pvt.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8mj_pvt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8mj_pvt.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8mj_pvt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8mj_pvt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8mj_pvt.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8mj_pvt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    new_message = \"\"\n    for i in 1:length(message)\n        if message[i]\
    \ in ['a','e','i','o','u']\n            new_message = new_message * message[i+2]\n\
    \        else\n            new_message = new_message * message[i]\n        end\n\
    \    end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1v27053g.jl:30\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp1v27053g.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp1v27053g.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    new_message = \"\"\n    for letter in message\n\
    \        if letter in vowels\n            new_message = new_message * letter[2]\n\
    \        else\n            new_message = new_message * letter\n    end\n    return\
    \ new_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3b4ovb21.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3b4ovb21.jl:1\n\
    in expression starting at /tmp/tmp3b4ovb21.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4oey342j.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp4oey342j.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4oey342j.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4oey342j.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    message = lowercase(message)\n    for i in 1:length(message)\n       \
    \ if message[i] in \"aeiou\"\n            message[i] = \"abcdefghijklmnopqrstuvwxyz\"\
    [findnext(message[i])]\n        elseif message[i] in \"bcdfghjklmnpqrstvwxyz\"\
    \n            message[i] = uppercase(message[i])\n        end\n    end\n    return\
    \ message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbqhw3ti7.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching setindex!(::String, ::Char, ::Int64)\\n  Stacktrace:\\n   [1]\
    \ encode(message::String)\\n     @ Main /tmp/tmpbqhw3ti7.jl:20\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbqhw3ti7.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbqhw3ti7.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpbqhw3ti7.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpbqhw3ti7.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbqhw3ti7.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbqhw3ti7.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpbqhw3ti7.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpbqhw3ti7.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbqhw3ti7.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbqhw3ti7.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpbqhw3ti7.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  MethodEr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvp4ac4u5.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvp4ac4u5.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvp4ac4u5.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvp4ac4u5.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvp4ac4u5.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvp4ac4u5.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvp4ac4u5.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1h9wfvud.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1h9wfvud.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1h9wfvud.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1h9wfvud.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr2juvwxa.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpr2juvwxa.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2juvwxa.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2juvwxa.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpr2juvwxa.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpr2juvwxa.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2juvwxa.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy_fawp38.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpy_fawp38.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpy_fawp38.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpy_fawp38.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    new_message = \"\"\n    for letter in message\n        if letter in \"\
    aeiou\"\n            new_message = new_message * encode_vowel(letter)\n      \
    \  elseif letter in \"AEIOU\"\n            new_message = new_message * encode_vowel(letter)\n\
    \        else\n            new_message = new_message * letter\n        end\n \
    \   end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7j8eykii.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ encode_vowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmp7j8eykii.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7j8eykii.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7j8eykii.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7j8eykii.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: encode_vowel not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp7j8eykii.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7j8eykii.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7j8eykii.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7j8eykii.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: encode_vowel not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp7j8eykii.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7j8eykii.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7j8eykii.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7j8eykii.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ encode_vowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx_mfxawr.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpx_mfxawr.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx_mfxawr.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx_mfxawr.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # TODO: write your code here\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaa1g0mty.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaa1g0mty.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaa1g0mty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaa1g0mty.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaa1g0mty.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaa1g0mty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaa1g0mty.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaa1g0mty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaa1g0mty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaa1g0mty.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaa1g0mty.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaa1g0mty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaa1g0mty.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaa1g0mty.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo8hvhcla.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5bf66rj6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp5bf66rj6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5bf66rj6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5bf66rj6.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encoded_message = \"\"\n\
    \    for i in 1:length(message)\n        char = message[i]\n        if char in\
    \ alphabet\n            if char in \"aeiou\"\n                char = alphabet[(findfirst(alphabet,\
    \ char) + 2) % 26]\n            end\n            if char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n                char = char |> lowercase |> encode |> uppercase\n          \
    \  else\n                char = char |> lowercase |> encode\n            end\n\
    \        end\n        encoded_message *= char\n    end\n    return encoded_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw4r5w74z.jl:38\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpw4r5w74z.jl:38 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpw4r5w74z.jl:37\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbhu6bs7.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbhu6bs7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbhu6bs7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphbhu6bs7.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbhu6bs7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbhu6bs7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphbhu6bs7.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbhu6bs7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbhu6bs7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphbhu6bs7.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphbhu6bs7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphbhu6bs7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphbhu6bs7.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbhu6bs7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9rxoocj.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rxoocj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rxoocj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc9rxoocj.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rxoocj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rxoocj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc9rxoocj.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rxoocj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rxoocj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc9rxoocj.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9rxoocj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9rxoocj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc9rxoocj.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9rxoocj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    new_message = \"\"\n\
    \    for i in message\n        if i in vowels\n            new_message = new_message\
    \ * i\n        else\n            new_message = new_message * i\n    end\n    return\
    \ new_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz_fmg6wg.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz_fmg6wg.jl:1\n\
    in expression starting at /tmp/tmpz_fmg6wg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0b1xqen2.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b1xqen2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b1xqen2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0b1xqen2.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b1xqen2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b1xqen2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0b1xqen2.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b1xqen2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b1xqen2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0b1xqen2.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b1xqen2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b1xqen2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0b1xqen2.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0b1xqen2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp92c1vvbt.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92c1vvbt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92c1vvbt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp92c1vvbt.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92c1vvbt.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92c1vvbt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp92c1vvbt.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92c1vvbt.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92c1vvbt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp92c1vvbt.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92c1vvbt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92c1vvbt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp92c1vvbt.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92c1vvbt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpasjqd6u2.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasjqd6u2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasjqd6u2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpasjqd6u2.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasjqd6u2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasjqd6u2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpasjqd6u2.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasjqd6u2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasjqd6u2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpasjqd6u2.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasjqd6u2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasjqd6u2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpasjqd6u2.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpasjqd6u2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcmw2g246.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpcmw2g246.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcmw2g246.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcmw2g246.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpcmw2g246.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpcmw2g246.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcmw2g246.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnnabxt8w.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpnnabxt8w.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnnabxt8w.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnnabxt8w.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    \"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\n    vowels = \"aeiou\"\n    encoded\
    \ = \"\"\n    for c in message\n        if c in vowels\n            index = findfirst(vowels,\
    \ c)\n            encoded *= vowels[(index + 2) % 5]\n        elseif c in uppercase(c)\n\
    \            encoded *= lowercase(c)\n        else\n            encoded *= uppercase(c)\n\
    \        end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb3vggwjo.jl:47\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"test\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpb3vggwjo.jl:47 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpb3vggwjo.jl:46\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp80mrhg4f.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp80mrhg4f.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80mrhg4f.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp80mrhg4f.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    message = uppercase(message)\n    vowels = [\"A\", \"E\", \"I\", \"O\"\
    , \"U\"]\n    for i in 1:length(message)\n        if message[i] in vowels\n  \
    \          message[i] = vowels[mod(findfirst(vowels, message[i]) + 2, 5)]\n  \
    \      else\n            message[i] = lowercase(message[i])\n        end\n   \
    \ end\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwvohdu7l.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching setindex!(::String, ::Char, ::Int64)\\n  Stacktrace:\\n   [1]\
    \ encode(message::String)\\n     @ Main /tmp/tmpwvohdu7l.jl:21\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwvohdu7l.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwvohdu7l.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpwvohdu7l.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpwvohdu7l.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwvohdu7l.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwvohdu7l.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpwvohdu7l.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpwvohdu7l.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwvohdu7l.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwvohdu7l.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpwvohdu7l.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  MethodEr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn7tf_58e.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7tf_58e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7tf_58e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn7tf_58e.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7tf_58e.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7tf_58e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn7tf_58e.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7tf_58e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7tf_58e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn7tf_58e.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn7tf_58e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn7tf_58e.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn7tf_58e.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn7tf_58e.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2r5upkdq.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2r5upkdq.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2r5upkdq.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2r5upkdq.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprp5ujz5b.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmprp5ujz5b.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprp5ujz5b.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprp5ujz5b.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp0yxm59d.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpp0yxm59d.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp0yxm59d.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp0yxm59d.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg1zy1ebv.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpg1zy1ebv.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg1zy1ebv.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg1zy1ebv.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpg1zy1ebv.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpg1zy1ebv.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg1zy1ebv.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswa5br2t.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswa5br2t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswa5br2t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpswa5br2t.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswa5br2t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswa5br2t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpswa5br2t.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswa5br2t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswa5br2t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpswa5br2t.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswa5br2t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswa5br2t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpswa5br2t.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswa5br2t.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxaaq42s4.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxaaq42s4.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxaaq42s4.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxaaq42s4.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu9__dmdu.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpu9__dmdu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu9__dmdu.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu9__dmdu.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    alphabet = [\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    encoded = \"\"\n    for letter in message\n        if\
    \ letter in vowels\n            index = findfirst(vowels, letter)\n          \
    \  encoded = encoded * alphabet[index + 2]\n        else\n            encoded\
    \ = encoded * letter\n        end\n    end\n    return encoded\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp784paog5.jl:33\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp784paog5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp784paog5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp784paog5.jl:34\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp784paog5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp784paog5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp784paog5.jl:35\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp784paog5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp784paog5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp784paog5.jl:36\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp784paog5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp784paog5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp784paog5.jl:37\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp784paog5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    message = uppercase(message)\n    vowels = \"AEIOU\"\n    for i in 1:length(message)\n\
    \        if message[i] in vowels\n            message[i] = vowels[(findfirst(vowels,\
    \ message[i]) + 2) % 5]\n        end\n    end\n    return lowercase(message)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl_egbvri.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n \
    \   findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractString, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpl_egbvri.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl_egbvri.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl_egbvri.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpl_egbvri.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpl_egbvri.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl_egbvri.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl_egbvri.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpatz956x7.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpatz956x7.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpatz956x7.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpatz956x7.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    letters = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ encoded = \"\"\n    for c in message\n        if c in letters\n            if\
    \ c in vowels\n                encoded *= letters[(findfirst(vowels, c) + 2) %\
    \ 5]\n            else\n                encoded *= c\n        else\n         \
    \   encoded *= c\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpbfnup0rm.jl:20 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbfnup0rm.jl:24\n\
    in expression starting at /tmp/tmpbfnup0rm.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8ddalui.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8ddalui.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8ddalui.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8ddalui.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8ddalui.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8ddalui.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8ddalui.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8ddalui.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8ddalui.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8ddalui.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8ddalui.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8ddalui.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8ddalui.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8ddalui.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # TODO: Implement me!\n    return \"TGST\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxu5aovf7.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxu5aovf7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxu5aovf7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxu5aovf7.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxu5aovf7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxu5aovf7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxu5aovf7.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxu5aovf7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxu5aovf7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxu5aovf7.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxu5aovf7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxu5aovf7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxu5aovf7.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxu5aovf7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmqahy2ik.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmqahy2ik.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmqahy2ik.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmqahy2ik.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn8q68k_x.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn8q68k_x.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn8q68k_x.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn8q68k_x.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpn8q68k_x.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn8q68k_x.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn8q68k_x.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpybbrd_ha.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpybbrd_ha.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpybbrd_ha.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpybbrd_ha.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg1_0ha9b.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpg1_0ha9b.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg1_0ha9b.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg1_0ha9b.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = \"aeiou\"\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  encoded = \"\"\n    for c in message\n        if c in vowels\n            index\
    \ = findfirst(vowels, c)\n            encoded *= alphabet[index + 2]\n       \
    \ elseif c in alphabet\n            index = findfirst(alphabet, c)\n         \
    \   encoded *= alphabet[index + 2]\n        else\n            encoded *= c\n \
    \       end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4c6dkc0f.jl:36\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp4c6dkc0f.jl:36 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp4c6dkc0f.jl:35\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl7wuhm09.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpl7wuhm09.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl7wuhm09.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl7wuhm09.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g_k95pm.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g_k95pm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g_k95pm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3g_k95pm.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g_k95pm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g_k95pm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3g_k95pm.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g_k95pm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g_k95pm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3g_k95pm.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g_k95pm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g_k95pm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3g_k95pm.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g_k95pm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpowgxvlz9.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpowgxvlz9.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpowgxvlz9.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpowgxvlz9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpowgxvlz9.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpowgxvlz9.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpowgxvlz9.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20a9d4x4.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20a9d4x4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20a9d4x4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20a9d4x4.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20a9d4x4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20a9d4x4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20a9d4x4.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20a9d4x4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20a9d4x4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20a9d4x4.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20a9d4x4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20a9d4x4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20a9d4x4.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20a9d4x4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7ct2z2s8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp7ct2z2s8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ct2z2s8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ct2z2s8.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4o40vgin.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp4o40vgin.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4o40vgin.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4o40vgin.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkxejlbro.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxejlbro.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxejlbro.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkxejlbro.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxejlbro.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxejlbro.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkxejlbro.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxejlbro.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxejlbro.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkxejlbro.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxejlbro.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxejlbro.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkxejlbro.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkxejlbro.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp80fu3_h8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp80fu3_h8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80fu3_h8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp80fu3_h8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp80fu3_h8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp80fu3_h8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp80fu3_h8.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wk648yw.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk648yw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk648yw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1wk648yw.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk648yw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk648yw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1wk648yw.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk648yw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk648yw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1wk648yw.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wk648yw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wk648yw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1wk648yw.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wk648yw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp08x65hqx.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp08x65hqx.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp08x65hqx.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp08x65hqx.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp08x65hqx.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp08x65hqx.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp08x65hqx.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa8naumak.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpa8naumak.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpa8naumak.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa8naumak.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsinnf9t0.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpsinnf9t0.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsinnf9t0.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsinnf9t0.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsinnf9t0.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpsinnf9t0.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsinnf9t0.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp12wplaph.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp12wplaph.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp12wplaph.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp12wplaph.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp12wplaph.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp12wplaph.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp12wplaph.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp12wplaph.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp12wplaph.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp12wplaph.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp12wplaph.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp12wplaph.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp12wplaph.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12wplaph.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4a8niqjk.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp4a8niqjk.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4a8niqjk.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4a8niqjk.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_5uk9svl.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_5uk9svl.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_5uk9svl.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_5uk9svl.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded = \"\"\n   \
    \ for char in message\n        if char in vowels\n            encoded *= encode_vowel(char)\n\
    \        else\n            encoded *= encode_consonant(char)\n        end\n  \
    \  end\n    return encoded\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1a_999m2.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ encode_consonant not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmp1a_999m2.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1a_999m2.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1a_999m2.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp1a_999m2.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: encode_consonant not\
    \ defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1a_999m2.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1a_999m2.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1a_999m2.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp1a_999m2.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: encode_consonant not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp1a_999m2.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1a_999m2.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1a_999m2.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp1a_999m2.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ encode_consonant not defined\\n  Stacktrace:\\n   [1] encode(message::"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpck6ahpav.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpck6ahpav.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpck6ahpav.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpck6ahpav.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpixj51bzl.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpixj51bzl.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpixj51bzl.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpixj51bzl.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpixj51bzl.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpixj51bzl.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpixj51bzl.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # TODO: implement this function\n    return \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp20j7jkes.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j7jkes.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j7jkes.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20j7jkes.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j7jkes.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j7jkes.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20j7jkes.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j7jkes.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j7jkes.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20j7jkes.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp20j7jkes.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp20j7jkes.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp20j7jkes.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp20j7jkes.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encoded_message = \"\"\n    for char in message\n        if char in vowels\n\
    \            index = findfirst(vowels, char)\n            encoded_message *= alphabet[index\
    \ + 2]\n        elseif char in alphabet\n            index = findfirst(alphabet,\
    \ char)\n            encoded_message *= alphabet[index + 2]\n        else\n  \
    \          encoded_message *= char\n        end\n    end\n    return uppercase(encoded_message)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcbd9xega.jl:36\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpcbd9xega.jl:36 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpcbd9xega.jl:35\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp94y4todz.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94y4todz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94y4todz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp94y4todz.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94y4todz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94y4todz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp94y4todz.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94y4todz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94y4todz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp94y4todz.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94y4todz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94y4todz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp94y4todz.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94y4todz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    new_message = \"\"\n    for i in message\n        if i in \"aeiou\"\n\
    \            new_message = new_message * i[2:]\n        elseif i in \"AEIOU\"\n\
    \            new_message = new_message * i[2:]\n        else\n            new_message\
    \ = new_message * i\n        end\n    end\n    return new_message\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4xuopx8l.jl:18\nin expression\
    \ starting at /tmp/tmp4xuopx8l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppqomb8tc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppqomb8tc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppqomb8tc.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppqomb8tc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmppqomb8tc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppqomb8tc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppqomb8tc.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj3xoheqj.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3xoheqj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3xoheqj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpj3xoheqj.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3xoheqj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3xoheqj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpj3xoheqj.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3xoheqj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3xoheqj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpj3xoheqj.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3xoheqj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3xoheqj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpj3xoheqj.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj3xoheqj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp99zujhf2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp99zujhf2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp99zujhf2.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp99zujhf2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp99zujhf2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp99zujhf2.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp99zujhf2.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvhapkgi0.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvhapkgi0.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvhapkgi0.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvhapkgi0.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvhapkgi0.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvhapkgi0.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvhapkgi0.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvntvv1ti.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvntvv1ti.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvntvv1ti.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvntvv1ti.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvntvv1ti.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpvntvv1ti.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvntvv1ti.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzk6_vch6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpzk6_vch6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzk6_vch6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzk6_vch6.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpzk6_vch6.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpzk6_vch6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzk6_vch6.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmapdsjlp.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmapdsjlp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmapdsjlp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmapdsjlp.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmapdsjlp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmapdsjlp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmapdsjlp.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmapdsjlp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmapdsjlp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmapdsjlp.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmapdsjlp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmapdsjlp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmapdsjlp.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmapdsjlp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdb33l06h.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb33l06h.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb33l06h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdb33l06h.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb33l06h.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb33l06h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdb33l06h.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb33l06h.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb33l06h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdb33l06h.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb33l06h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb33l06h.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdb33l06h.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdb33l06h.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2_20k585.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2_20k585.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2_20k585.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2_20k585.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp2_20k585.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2_20k585.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2_20k585.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu9jb1cz9.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9jb1cz9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9jb1cz9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu9jb1cz9.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9jb1cz9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9jb1cz9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu9jb1cz9.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9jb1cz9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9jb1cz9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu9jb1cz9.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu9jb1cz9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu9jb1cz9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu9jb1cz9.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9jb1cz9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\n    return \"TGST\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphsciwppv.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsciwppv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsciwppv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphsciwppv.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsciwppv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsciwppv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphsciwppv.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsciwppv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsciwppv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphsciwppv.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphsciwppv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphsciwppv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphsciwppv.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphsciwppv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpri23s7v6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpri23s7v6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpri23s7v6.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpri23s7v6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpri23s7v6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpri23s7v6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpri23s7v6.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpri23s7v6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfrpgziik.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpfrpgziik.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfrpgziik.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfrpgziik.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfrpgziik.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpfrpgziik.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfrpgziik.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfrpgziik.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkwg7k0oh.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkwg7k0oh.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwg7k0oh.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwg7k0oh.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpkwg7k0oh.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkwg7k0oh.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwg7k0oh.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkwg7k0oh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl5e3wq1f.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpl5e3wq1f.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl5e3wq1f.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl5e3wq1f.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpl5e3wq1f.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpl5e3wq1f.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl5e3wq1f.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5e3wq1f.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm14un_10.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpm14un_10.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm14un_10.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm14un_10.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpm14un_10.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpm14un_10.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm14un_10.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm14un_10.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp62qbvhcn.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp62qbvhcn.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp62qbvhcn.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp62qbvhcn.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp62qbvhcn.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp62qbvhcn.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp62qbvhcn.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp62qbvhcn.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\"\
    )\n    \"tHKS KS C MGSSCGG\"\n    \"\"\"\nfunction encode(message::String)::String\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkkti860_.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkkti860_.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkti860_.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkti860_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpkkti860_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkkti860_.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkti860_.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkti860_.jl:19\n"
  exit_code: 1
  status: SyntaxError

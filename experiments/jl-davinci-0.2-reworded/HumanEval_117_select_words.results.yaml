language: jl
name: HumanEval_117_select_words
results:
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvkj_53f8.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpvkj_53f8.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpvkj_53f8.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpvkj_53f8.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkj_53f8.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpvkj_53f8.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpvkj_53f8.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpvkj_53f8.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkj_53f8.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpvkj_53f8.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpvkj_53f8.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpvkj_53f8.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvkj_53f8.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpvkj_53f8.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp_3mirg3l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp_3mirg3l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp_3mirg3l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp_3mirg3l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_3mirg3l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp_3mirg3l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp_3mirg3l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp_3mirg3l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_3mirg3l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp_3mirg3l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp_3mirg3l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp_3mirg3l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_3mirg3l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp_3mirg3l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpwtrfwveg.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpwtrfwveg.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpwtrfwveg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpwtrfwveg.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtrfwveg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwtrfwveg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpwtrfwveg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpwtrfwveg.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtrfwveg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwtrfwveg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpwtrfwveg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpwtrfwveg.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwtrfwveg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwtrfwveg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpagqeosuh.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpagqeosuh.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpagqeosuh.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpagqeosuh.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpagqeosuh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpagqeosuh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpagqeosuh.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpagqeosuh.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpagqeosuh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpagqeosuh.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpagqeosuh.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpagqeosuh.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpagqeosuh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpagqeosuh.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp59sc71sw.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp59sc71sw.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp59sc71sw.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp59sc71sw.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59sc71sw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp59sc71sw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp59sc71sw.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp59sc71sw.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59sc71sw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp59sc71sw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp59sc71sw.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp59sc71sw.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59sc71sw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp59sc71sw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpc07zskoq.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpc07zskoq.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpc07zskoq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpc07zskoq.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc07zskoq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpc07zskoq.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpc07zskoq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpc07zskoq.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc07zskoq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpc07zskoq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpc07zskoq.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpc07zskoq.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc07zskoq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpc07zskoq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpf44hw48t.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpf44hw48t.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpf44hw48t.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpf44hw48t.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf44hw48t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpf44hw48t.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpf44hw48t.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpf44hw48t.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf44hw48t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpf44hw48t.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpf44hw48t.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpf44hw48t.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf44hw48t.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpf44hw48t.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmppcb37k3f.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmppcb37k3f.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmppcb37k3f.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmppcb37k3f.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppcb37k3f.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppcb37k3f.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmppcb37k3f.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmppcb37k3f.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppcb37k3f.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppcb37k3f.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmppcb37k3f.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmppcb37k3f.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppcb37k3f.jl:32\ntest set:\
    \ Error During Test at /tmp/tmppcb37k3f.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpzqk8asjp.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpzqk8asjp.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpzqk8asjp.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpzqk8asjp.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzqk8asjp.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpzqk8asjp.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpzqk8asjp.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpzqk8asjp.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzqk8asjp.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpzqk8asjp.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpzqk8asjp.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpzqk8asjp.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzqk8asjp.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpzqk8asjp.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpk1jz7ds6.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpk1jz7ds6.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpk1jz7ds6.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpk1jz7ds6.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk1jz7ds6.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk1jz7ds6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpk1jz7ds6.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpk1jz7ds6.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk1jz7ds6.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk1jz7ds6.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpk1jz7ds6.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpk1jz7ds6.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk1jz7ds6.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpk1jz7ds6.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptjn9yq60.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmptjn9yq60.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmptjn9yq60.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmptjn9yq60.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptjn9yq60.jl:32\ntest set:\
    \ Error During Test at /tmp/tmptjn9yq60.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmptjn9yq60.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmptjn9yq60.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptjn9yq60.jl:32\ntest set:\
    \ Error During Test at /tmp/tmptjn9yq60.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmptjn9yq60.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmptjn9yq60.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptjn9yq60.jl:32\ntest set:\
    \ Error During Test at /tmp/tmptjn9yq60.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp71olscl1.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp71olscl1.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp71olscl1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp71olscl1.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp71olscl1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp71olscl1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp71olscl1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp71olscl1.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp71olscl1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp71olscl1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp71olscl1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp71olscl1.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp71olscl1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp71olscl1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpt6ifq282.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpt6ifq282.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpt6ifq282.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpt6ifq282.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt6ifq282.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpt6ifq282.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpt6ifq282.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpt6ifq282.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt6ifq282.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpt6ifq282.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpt6ifq282.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpt6ifq282.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt6ifq282.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpt6ifq282.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp1gkn9mek.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp1gkn9mek.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp1gkn9mek.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp1gkn9mek.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gkn9mek.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1gkn9mek.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp1gkn9mek.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp1gkn9mek.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gkn9mek.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1gkn9mek.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp1gkn9mek.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp1gkn9mek.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1gkn9mek.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1gkn9mek.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpo88ayuz9.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpo88ayuz9.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpo88ayuz9.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpo88ayuz9.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo88ayuz9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo88ayuz9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpo88ayuz9.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpo88ayuz9.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo88ayuz9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo88ayuz9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpo88ayuz9.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpo88ayuz9.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo88ayuz9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpo88ayuz9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpmiboikgy.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpmiboikgy.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpmiboikgy.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpmiboikgy.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiboikgy.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmiboikgy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpmiboikgy.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpmiboikgy.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiboikgy.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmiboikgy.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpmiboikgy.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpmiboikgy.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiboikgy.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpmiboikgy.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7rav7g_l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp7rav7g_l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpjloq1aac.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpjloq1aac.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpjloq1aac.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpjloq1aac.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjloq1aac.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpjloq1aac.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpjloq1aac.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpjloq1aac.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjloq1aac.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpjloq1aac.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpjloq1aac.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpjloq1aac.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjloq1aac.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpjloq1aac.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpypyav3ng.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpypyav3ng.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypyav3ng.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypyav3ng.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpypyav3ng.jl:41\n  Expression: candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: String[] == [\"Mary\", \"\
    lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypyav3ng.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypyav3ng.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpypyav3ng.jl:43\n  Expression: candidate(\"Hello world\", 4)\
    \ == [\"world\"]\n   Evaluated: String[] == [\"world\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypyav3ng.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypyav3ng.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpypyav3ng.jl:44\n  Expression: candidate(\"Uncle sam\", 3)\
    \ == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypyav3ng.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypyav3ng.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpypyav3ng.jl:46\n  Expression: candidate(\"a b c d e f\", 1)\
    \ == [\"b\", \""
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    result = []\n    for word in words\n        count = 0\n        for letter\
    \ in word\n            if letter in consonants\n                count += 1\n \
    \           end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulg5evre.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpulg5evre.jl:41\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulg5evre.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulg5evre.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    res = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(res, word)\n\
    \        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpxqpa_xhr.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpxqpa_xhr.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    # your code here\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp7rr38bih.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp7rr38bih.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{String}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] select_words(s::String, n::Int64)\n     @ Main\
    \ /tmp/tmp7rr38bih.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7rr38bih.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rr38bih.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7rr38bih.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{String}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] select_words(s::String, n::Int64)\n     @ Main\
    \ /tmp/tmp7rr38bih.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/jul"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        consonants = 0\n        for letter in word\n \
    \           if letter in \"bcdfghjklmnpqrstvwxyz\"\n                consonants\
    \ += 1\n            end\n        end\n        if consonants == n\n           \
    \ push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcef1ajg2.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpcef1ajg2.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcef1ajg2.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcef1ajg2.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    result = []\n\
    \    for word in words\n        count = 0\n        for letter in word\n      \
    \      if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjn6tyw8m.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpjn6tyw8m.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:41\n  Expression: candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: String[] == [\"Mary\", \"\
    lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:43\n  Expression: candidate(\"Hello world\", 4)\
    \ == [\"world\"]\n   Evaluated: String[] == [\"world\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:44\n  Expression: candidate(\"Uncle sam\", 3)\
    \ == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:46\n  Expression: candidate(\"a b c d e f\", 1)\
    \ == [\"b\", \""
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, r\"\\s+\")\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxaqwirm1.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpxaqwirm1.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxaqwirm1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxaqwirm1.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxaqwirm1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxaqwirm1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxaqwirm1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxaqwirm1.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxaqwirm1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxaqwirm1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxaqwirm1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxaqwirm1.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxaqwirm1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxaqwirm1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    words_with_n_consonants\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(words_with_n_consonants, word)\n        end\n    end\n    return\
    \ words_with_n_consonants\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpoy4ll9hg.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpoy4ll9hg.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpoy4ll9hg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpoy4ll9hg.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoy4ll9hg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoy4ll9hg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpoy4ll9hg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpoy4ll9hg.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoy4ll9hg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoy4ll9hg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpoy4ll9hg.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpoy4ll9hg.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoy4ll9hg.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpoy4ll9hg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7rav7g_l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp7rav7g_l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    res = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(res, word)\n\
    \        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpxqpa_xhr.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpxqpa_xhr.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        consonants = 0\n        for letter in word\n            if\
    \ letter in \"bcdfghjklmnpqrstvwxyz\"\n                consonants += 1\n     \
    \       end\n        end\n        if consonants == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe7629ksa.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpe7629ksa.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe7629ksa.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe7629ksa.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7rav7g_l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp7rav7g_l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    result = []\n    for word in words\n        count = 0\n        for letter\
    \ in word\n            if letter in consonants\n                count += 1\n \
    \           end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulg5evre.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpulg5evre.jl:41\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulg5evre.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulg5evre.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if n == count_consonants(word)\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpy73ppq3b.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpy73ppq3b.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpy73ppq3b.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpy73ppq3b.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy73ppq3b.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpy73ppq3b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpy73ppq3b.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpy73ppq3b.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy73ppq3b.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpy73ppq3b.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpy73ppq3b.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpy73ppq3b.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy73ppq3b.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpy73ppq3b.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7rav7g_l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp7rav7g_l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, r\"\\s+\")\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n      \
    \  if length(filter(x -> x in consonants, word)) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvqt1ubhm.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpvqt1ubhm.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqt1ubhm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqt1ubhm.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    result = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph7grzdiu.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmph7grzdiu.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmph7grzdiu.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmph7grzdiu.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph7grzdiu.jl:32\ntest set:\
    \ Error During Test at /tmp/tmph7grzdiu.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s, \" \")\n    selected = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected,\
    \ word)\n        end\n    end\n    return selected\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqovz89_1.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpqovz89_1.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpqovz89_1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpqovz89_1.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqovz89_1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpqovz89_1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpqovz89_1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpqovz89_1.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqovz89_1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpqovz89_1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpqovz89_1.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpqovz89_1.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqovz89_1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpqovz89_1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    res = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(res, word)\n\
    \        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpxqpa_xhr.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmpxqpa_xhr.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpxqpa_xhr.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpxqpa_xhr.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqpa_xhr.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqpa_xhr.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3)\
    \ == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7rav7g_l.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp7rav7g_l.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp7rav7g_l.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp7rav7g_l.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7rav7g_l.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp7rav7g_l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    # Your code here\n    words = split(s)\n   \
    \ result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpeyaq82jj.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpeyaq82jj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpeyaq82jj.jl:23\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpeyaq82jj.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyaq82jj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyaq82jj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpeyaq82jj.jl:23\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpeyaq82jj.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyaq82jj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyaq82jj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmpeyaq82jj.jl:23\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpeyaq82jj.jl:36 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyaq82jj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpeyaq82jj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    # Your code here\n    return []\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary\
    \ had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
    , 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"\
    ])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\"\
    , 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\",\
    \ \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3s1anpsi.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp3s1anpsi.jl:27\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3s1anpsi.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3s1anpsi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3s1anpsi.jl:28\n  Expression: candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: String[] == [\"Mary\", \"\
    lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3s1anpsi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3s1anpsi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3s1anpsi.jl:30\n  Expression: candidate(\"Hello world\", 4)\
    \ == [\"world\"]\n   Evaluated: String[] == [\"world\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3s1anpsi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3s1anpsi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3s1anpsi.jl:31\n  Expression: candidate(\"Uncle sam\", 3)\
    \ == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3s1anpsi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3s1anpsi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3s1anpsi.jl:33\n  Expression: candidate(\"a b c d e f\", 1)\
    \ == [\"b\", \""
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    result = []\n    for word in words\n        count = 0\n        for letter\
    \ in word\n            if letter in consonants\n                count += 1\n \
    \           end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpulg5evre.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpulg5evre.jl:41\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulg5evre.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulg5evre.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    result = []\n\
    \    for word in words\n        count = 0\n        for letter in word\n      \
    \      if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjn6tyw8m.jl:37

    '
  stdout: "test set: Test Failed at /tmp/tmpjn6tyw8m.jl:40\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:41\n  Expression: candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: String[] == [\"Mary\", \"\
    lamb\"]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:43\n  Expression: candidate(\"Hello world\", 4)\
    \ == [\"world\"]\n   Evaluated: String[] == [\"world\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:44\n  Expression: candidate(\"Uncle sam\", 3)\
    \ == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjn6tyw8m.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjn6tyw8m.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpjn6tyw8m.jl:46\n  Expression: candidate(\"a b c d e f\", 1)\
    \ == [\"b\", \""
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"
- exit_code: 1
  program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a vector of all words from string s\
    \ that contain exactly \n    n consonants, in order these words appear in the\
    \ string s.\n    If the string s is empty then the function should return an empty\
    \ vector.\n    Note: you may assume the input string contains only letters and\
    \ spaces.\n    Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n\
    \    [\"little\"]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"\
    Mary\", \"lamb\"]\n    >>> select_words(\"simple white space\", 2)\n    []\n \
    \   >>> select_words(\"Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"\
    Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String,\
    \ n::Int64)::Vector{String} \n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9ifmk73x.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp9ifmk73x.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:33 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:34 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"simple white space\", 2) == Vector{String}([])\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(s::String,\
    \ n::Int64)\n     @ Main /tmp/tmp9ifmk73x.jl:22\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp9ifmk73x.jl:35 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9ifmk73x.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp9ifmk73x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants\
    \ not"

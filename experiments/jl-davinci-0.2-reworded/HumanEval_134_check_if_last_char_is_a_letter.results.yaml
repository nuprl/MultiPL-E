name: HumanEval_134_check_if_last_char_is_a_letter
language: jl
results:
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpao4wxgvm.jl:21\nin expression\
    \ starting at /tmp/tmpao4wxgvm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpcv_9m3g0.jl:24\nin expression\
    \ starting at /tmp/tmpcv_9m3g0.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpgwyx962h.jl:24\nin expression\
    \ starting at /tmp/tmpgwyx962h.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdcq2_gwt.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpdcq2_gwt.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdcq2_gwt.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdcq2_gwt.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpdcq2_gwt.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpdcq2_gwt.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdcq2_gwt.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdcq2_gwt.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpdcq2_gwt.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpdcq2_gwt.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdcq2_gwt.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdcq2_gwt.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpdcq2_gwt.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpoifgbqpl.jl:24\nin expression\
    \ starting at /tmp/tmpoifgbqpl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if txt == \" \"\n        return false\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpozefysnp.jl:30\\n  Expression: candidate(\"\
    apple\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpozefysnp.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpozefysnp.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpozefysnp.jl:32\\n  Expression: candidate(\"eeeee\") == false\\\
    n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpozefysnp.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpozefysnp.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpozefysnp.jl:34\\n  Expression: candidate(\"Pumpkin pie \"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpozefysnp.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpozefysnp.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpozefysnp.jl:35\\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpozefysnp.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpozefysnp.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpkp8xdq66.jl:21\nin expression\
    \ starting at /tmp/tmpkp8xdq66.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo842umrn.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpo842umrn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo842umrn.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo842umrn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpo842umrn.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpo842umrn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo842umrn.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo842umrn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpo842umrn.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpo842umrn.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo842umrn.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo842umrn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpo842umrn.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp845ugdyh.jl:24\nin expression\
    \ starting at /tmp/tmp845ugdyh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10644hqg.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp10644hqg.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10644hqg.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10644hqg.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp10644hqg.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp10644hqg.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10644hqg.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10644hqg.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp10644hqg.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp10644hqg.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10644hqg.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10644hqg.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp10644hqg.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if isalpha(txt[end])\n        return\
    \ true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6x_jexr7.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp6x_jexr7.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6x_jexr7.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6x_jexr7.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp6x_jexr7.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp6x_jexr7.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6x_jexr7.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6x_jexr7.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp6x_jexr7.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp6x_jexr7.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6x_jexr7.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6x_jexr7.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp6x_jexr7.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpkeewp4qq.jl:24\nin expression\
    \ starting at /tmp/tmpkeewp4qq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end-1] == ' '\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9yzrkjan.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"A\") == true\\n  BoundsError: attempt\
    \ to access 1-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp9yzrkjan.jl:24\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp9yzrkjan.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp9yzrkjan.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmp9yzrkjan.jl:39\\n  Expression: candidate(\"Pumpkin pie\
    \ 1\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp9yzrkjan.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp9yzrkjan.jl:33\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpapmuqik_.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpapmuqik_.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpapmuqik_.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpapmuqik_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpapmuqik_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpapmuqik_.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpapmuqik_.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpapmuqik_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpapmuqik_.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpapmuqik_.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpapmuqik_.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpapmuqik_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpapmuqik_.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp7m28zo01.jl:24\nin expression\
    \ starting at /tmp/tmp7m28zo01.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5q2g_6vu.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp5q2g_6vu.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5q2g_6vu.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5q2g_6vu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5q2g_6vu.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp5q2g_6vu.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5q2g_6vu.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5q2g_6vu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5q2g_6vu.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp5q2g_6vu.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5q2g_6vu.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5q2g_6vu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5q2g_6vu.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpll0hmfhi.jl:24\nin expression\
    \ starting at /tmp/tmpll0hmfhi.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end]\n  \
    \  if txt == \" \"\n        return false\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr46yyvsi.jl:32\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr46yyvsi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr46yyvsi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr46yyvsi.jl:34\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr46yyvsi.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr46yyvsi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr46yyvsi.jl:36\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr46yyvsi.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr46yyvsi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr46yyvsi.jl:37\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr46yyvsi.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr46yyvsi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr46yyvsi.jl:39\n  Expression: candidate(\"eeeee e \") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr46yyvsi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpeoj_wid2.jl:24\nin expression\
    \ starting at /tmp/tmpeoj_wid2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmps38c3_ni.jl:24\nin expression\
    \ starting at /tmp/tmps38c3_ni.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo8e3uwg7.jl:21\nin expression\
    \ starting at /tmp/tmpo8e3uwg7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7ietgcot.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp7ietgcot.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ietgcot.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ietgcot.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ietgcot.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp7ietgcot.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ietgcot.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ietgcot.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ietgcot.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp7ietgcot.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ietgcot.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ietgcot.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ietgcot.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpde80k05j.jl:24\nin expression\
    \ starting at /tmp/tmpde80k05j.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp5_1qyqxa.jl:24\nin expression\
    \ starting at /tmp/tmp5_1qyqxa.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp6hazgz5x.jl:24\nin expression\
    \ starting at /tmp/tmp6hazgz5x.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmps9w5wasc.jl:24\nin expression\
    \ starting at /tmp/tmps9w5wasc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = strip(txt)\n    if length(txt) == 0\n        return false\n    end\n\
    \    if isalpha(txt[end]) && !isspace(txt[end-1])\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9u21vbcb.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp9u21vbcb.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9u21vbcb.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9u21vbcb.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp9u21vbcb.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp9u21vbcb.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9u21vbcb.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9u21vbcb.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp9u21vbcb.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp9u21vbcb.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9u21vbcb.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9u21vbcb.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp9u21vbcb.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ txt[end-1] == ' '\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9oe3gu5l.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp9oe3gu5l.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9oe3gu5l.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9oe3gu5l.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp9oe3gu5l.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp9oe3gu5l.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9oe3gu5l.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9oe3gu5l.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp9oe3gu5l.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp9oe3gu5l.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9oe3gu5l.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9oe3gu5l.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp9oe3gu5l.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8cnt3fdy.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp8cnt3fdy.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8cnt3fdy.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8cnt3fdy.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8cnt3fdy.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp8cnt3fdy.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8cnt3fdy.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8cnt3fdy.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8cnt3fdy.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp8cnt3fdy.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8cnt3fdy.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8cnt3fdy.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8cnt3fdy.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpikrj_cj0.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpikrj_cj0.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpikrj_cj0.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpikrj_cj0.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpikrj_cj0.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpikrj_cj0.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpikrj_cj0.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpikrj_cj0.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpikrj_cj0.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpikrj_cj0.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpikrj_cj0.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpikrj_cj0.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpikrj_cj0.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxd0sy294.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpxd0sy294.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxd0sy294.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxd0sy294.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxd0sy294.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpxd0sy294.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxd0sy294.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxd0sy294.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxd0sy294.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpxd0sy294.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxd0sy294.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxd0sy294.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxd0sy294.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpvixfyv64.jl:21\nin expression\
    \ starting at /tmp/tmpvixfyv64.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end-1] == ' '\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3gb62tza.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"A\") == true\\n  BoundsError: attempt\
    \ to access 1-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp3gb62tza.jl:24\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp3gb62tza.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp3gb62tza.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmp3gb62tza.jl:39\\n  Expression: candidate(\"Pumpkin pie\
    \ 1\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3gb62tza.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3gb62tza.jl:33\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    last_char = txt[end]\n\
    \    if last_char in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmplx8mqowg.jl:22\nin expression\
    \ starting at /tmp/tmplx8mqowg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp2zqj_t5y.jl:21\nin expression\
    \ starting at /tmp/tmp2zqj_t5y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpt1vh74xa.jl:24\nin expression\
    \ starting at /tmp/tmpt1vh74xa.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !(txt[end-1] in \" \")\n        return false\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq2ubl38p.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpq2ubl38p.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpq2ubl38p.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpq2ubl38p.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpq2ubl38p.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpq2ubl38p.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpq2ubl38p.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpq2ubl38p.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpq2ubl38p.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpq2ubl38p.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpq2ubl38p.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpq2ubl38p.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpq2ubl38p.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpdvnc5vms.jl:21\nin expression\
    \ starting at /tmp/tmpdvnc5vms.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5bc_axs3.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp5bc_axs3.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5bc_axs3.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5bc_axs3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5bc_axs3.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp5bc_axs3.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5bc_axs3.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5bc_axs3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5bc_axs3.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp5bc_axs3.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5bc_axs3.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5bc_axs3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp5bc_axs3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpp8o9pv6h.jl:24\nin expression\
    \ starting at /tmp/tmpp8o9pv6h.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpydmd59_k.jl:21\nin expression\
    \ starting at /tmp/tmpydmd59_k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpq7esat1e.jl:24\nin expression\
    \ starting at /tmp/tmpq7esat1e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if txt[end-1] == ' '\n            return true\n        else\n       \
    \     return false\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpna_b40xl.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpna_b40xl.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpna_b40xl.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpna_b40xl.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpna_b40xl.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpna_b40xl.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpna_b40xl.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpna_b40xl.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpna_b40xl.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpna_b40xl.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpna_b40xl.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpna_b40xl.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpna_b40xl.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = split(txt, \" \")\n    if length(txt) == 0\n        return false\n\
    \    end\n    if length(txt[end]) == 1\n        return true\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdvr8kx0w.jl:37\n  Expression: candidate(\"\
    Pumpkin pie 1\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvr8kx0w.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvr8kx0w.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvr8kx0w.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp84fepcfx.jl:21\nin expression\
    \ starting at /tmp/tmp84fepcfx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp7u42v5b8.jl:21\nin expression\
    \ starting at /tmp/tmp7u42v5b8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpe5loqqih.jl:21\nin expression\
    \ starting at /tmp/tmpe5loqqih.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxh3mdlv5.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpxh3mdlv5.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxh3mdlv5.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxh3mdlv5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxh3mdlv5.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpxh3mdlv5.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxh3mdlv5.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxh3mdlv5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxh3mdlv5.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpxh3mdlv5.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxh3mdlv5.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxh3mdlv5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxh3mdlv5.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = strip(txt)\n    if length(txt) == 0\n        return false\n    end\n\
    \    if isalpha(txt[end]) && !isspace(txt[end-1])\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpujxv_mz3.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpujxv_mz3.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpujxv_mz3.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpujxv_mz3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpujxv_mz3.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpujxv_mz3.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpujxv_mz3.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpujxv_mz3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpujxv_mz3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpujxv_mz3.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpujxv_mz3.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpujxv_mz3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpujxv_mz3.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphhf8lcwg.jl:21\nin expression\
    \ starting at /tmp/tmphhf8lcwg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7wtjpcz7.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp7wtjpcz7.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7wtjpcz7.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7wtjpcz7.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7wtjpcz7.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp7wtjpcz7.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7wtjpcz7.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7wtjpcz7.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7wtjpcz7.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp7wtjpcz7.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7wtjpcz7.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7wtjpcz7.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7wtjpcz7.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpooh06fk4.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpooh06fk4.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpooh06fk4.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpooh06fk4.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpooh06fk4.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpooh06fk4.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpooh06fk4.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpooh06fk4.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpooh06fk4.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpooh06fk4.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpooh06fk4.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpooh06fk4.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpooh06fk4.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isletter(txt[end-1])\n            return false\n        end\n        return\
    \ true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    last_char = txt[end]\n\
    \    if last_char in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if last_char in txt[1:end-1]\n            return false\n        else\n\
    \            return true\n        end\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpebhkjd9s.jl:22\nin expression\
    \ starting at /tmp/tmpebhkjd9s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp94idrts8.jl:21\nin expression\
    \ starting at /tmp/tmp94idrts8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt.strip()\n    if txt == \"\"\n        return false\n    end\n\
    \    if txt[end] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj5c29pmu.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  type String has\
    \ no field strip\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpj5c29pmu.jl:18\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpj5c29pmu.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpj5c29pmu.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpj5c29pmu.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  type String has no field strip\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpj5c29pmu.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpj5c29pmu.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpj5c29pmu.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpj5c29pmu.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  type String has no field strip\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpj5c29pmu.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpj5c29pmu.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpj5c29pmu.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpj5c29pmu.jl:36\\n  Te"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyqidnwla.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpyqidnwla.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyqidnwla.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyqidnwla.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpyqidnwla.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpyqidnwla.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyqidnwla.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyqidnwla.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpyqidnwla.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpyqidnwla.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyqidnwla.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyqidnwla.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpyqidnwla.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isspace(txt[end-1])\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1ljr9wx2.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp1ljr9wx2.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ljr9wx2.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ljr9wx2.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp1ljr9wx2.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp1ljr9wx2.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ljr9wx2.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ljr9wx2.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp1ljr9wx2.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp1ljr9wx2.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ljr9wx2.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ljr9wx2.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp1ljr9wx2.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isletter(txt[end-1])\n            return false\n        end\n        return\
    \ true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp_xx2qe41.jl:21\nin expression\
    \ starting at /tmp/tmp_xx2qe41.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    if txt[end] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmptud3kl6t.jl:24\nin expression\
    \ starting at /tmp/tmptud3kl6t.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpm126zbe9.jl:24\nin expression\
    \ starting at /tmp/tmpm126zbe9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if isalpha(txt[end-1])\n            return false\n        else\n    \
    \        return true\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2f3107hy.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp2f3107hy.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2f3107hy.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2f3107hy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp2f3107hy.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp2f3107hy.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2f3107hy.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2f3107hy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp2f3107hy.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp2f3107hy.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2f3107hy.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2f3107hy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp2f3107hy.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp7hknc456.jl:21\nin expression\
    \ starting at /tmp/tmp7hknc456.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptauh2f4o.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmptauh2f4o.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptauh2f4o.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptauh2f4o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmptauh2f4o.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmptauh2f4o.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptauh2f4o.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptauh2f4o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmptauh2f4o.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmptauh2f4o.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptauh2f4o.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptauh2f4o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmptauh2f4o.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpz_dunifn.jl:24\nin expression\
    \ starting at /tmp/tmpz_dunifn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo42wan1p.jl:24\nin expression\
    \ starting at /tmp/tmpo42wan1p.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf79ghh3.jl:24\nin expression\
    \ starting at /tmp/tmpxf79ghh3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj_3mwd4v.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpj_3mwd4v.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj_3mwd4v.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj_3mwd4v.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpj_3mwd4v.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpj_3mwd4v.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj_3mwd4v.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj_3mwd4v.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpj_3mwd4v.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpj_3mwd4v.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj_3mwd4v.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj_3mwd4v.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpj_3mwd4v.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if length(txt)\
    \ == 1\n            return true\n        end\n        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        end\n        return true\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpm534_5hl.jl:21\nin expression\
    \ starting at /tmp/tmpm534_5hl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        if txt[end-1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3jqy86a6.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmp3jqy86a6.jl:22\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3jqy86a6.jl:39 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3jqy86a6.jl:35\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jqy86a6.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpechv1wd5.jl:24\nin expression\
    \ starting at /tmp/tmpechv1wd5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppw_clhrr.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmppw_clhrr.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppw_clhrr.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppw_clhrr.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppw_clhrr.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmppw_clhrr.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppw_clhrr.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppw_clhrr.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppw_clhrr.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmppw_clhrr.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppw_clhrr.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppw_clhrr.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppw_clhrr.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpgg57m_1r.jl:21\nin expression\
    \ starting at /tmp/tmpgg57m_1r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9_f34xn1.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp9_f34xn1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9_f34xn1.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9_f34xn1.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp9_f34xn1.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp9_f34xn1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9_f34xn1.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9_f34xn1.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp9_f34xn1.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp9_f34xn1.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9_f34xn1.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9_f34xn1.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp9_f34xn1.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp107wurql.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp107wurql.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp107wurql.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp107wurql.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp107wurql.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp107wurql.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp107wurql.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp107wurql.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp107wurql.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp107wurql.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp107wurql.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp107wurql.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp107wurql.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp9_jwnjze.jl:21\nin expression\
    \ starting at /tmp/tmp9_jwnjze.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmprigyihz4.jl:21\nin expression\
    \ starting at /tmp/tmprigyihz4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if length(txt)\
    \ == 1\n            return true\n        end\n        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        end\n        return true\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp23v2q44m.jl:21\nin expression\
    \ starting at /tmp/tmp23v2q44m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpw3t5jw6g.jl:21\nin expression\
    \ starting at /tmp/tmpw3t5jw6g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if txt == \" \"\n        return false\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdpqci9t0.jl:30\\n  Expression: candidate(\"\
    apple\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpdpqci9t0.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpdpqci9t0.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpdpqci9t0.jl:32\\n  Expression: candidate(\"eeeee\") == false\\\
    n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpdpqci9t0.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpdpqci9t0.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpdpqci9t0.jl:34\\n  Expression: candidate(\"Pumpkin pie \"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpdpqci9t0.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpdpqci9t0.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpdpqci9t0.jl:35\\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpdpqci9t0.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpdpqci9t0.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpxzd2hlvm.jl:21\nin expression\
    \ starting at /tmp/tmpxzd2hlvm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpbbcclmgd.jl:21\nin expression\
    \ starting at /tmp/tmpbbcclmgd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmprha9a9is.jl:24\nin expression\
    \ starting at /tmp/tmprha9a9is.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpg1bdykkn.jl:24\nin expression\
    \ starting at /tmp/tmpg1bdykkn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = split(txt, \" \")\n    if length(txt) == 0\n        return false\n\
    \    end\n    if isalpha(txt[end]) && !isalpha(txt[end-1])\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphqz19nq8.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmphqz19nq8.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphqz19nq8.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphqz19nq8.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmphqz19nq8.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmphqz19nq8.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphqz19nq8.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphqz19nq8.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmphqz19nq8.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmphqz19nq8.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphqz19nq8.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphqz19nq8.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmphqz19nq8.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphhio_8p7.jl:24\nin expression\
    \ starting at /tmp/tmphhio_8p7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if txt == \" \"\n        return false\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqimcrxqz.jl:30\\n  Expression: candidate(\"\
    apple\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpqimcrxqz.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpqimcrxqz.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpqimcrxqz.jl:32\\n  Expression: candidate(\"eeeee\") == false\\\
    n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpqimcrxqz.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpqimcrxqz.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpqimcrxqz.jl:34\\n  Expression: candidate(\"Pumpkin pie \"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpqimcrxqz.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpqimcrxqz.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpqimcrxqz.jl:35\\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpqimcrxqz.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpqimcrxqz.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmptqufu3tm.jl:21\nin expression\
    \ starting at /tmp/tmptqufu3tm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpw7ytcozy.jl:24\nin expression\
    \ starting at /tmp/tmpw7ytcozy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpq1_shq58.jl:24\nin expression\
    \ starting at /tmp/tmpq1_shq58.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpk339xnfr.jl:21\nin expression\
    \ starting at /tmp/tmpk339xnfr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end-1] == ' '\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp77x4gamf.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"A\") == true\\n  BoundsError: attempt\
    \ to access 1-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp77x4gamf.jl:24\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp77x4gamf.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp77x4gamf.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmp77x4gamf.jl:39\\n  Expression: candidate(\"Pumpkin pie\
    \ 1\") == false\\n   Evaluated: true == false'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp45ye598b.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp45ye598b.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp45ye598b.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp45ye598b.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp45ye598b.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp45ye598b.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp45ye598b.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp45ye598b.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp45ye598b.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp45ye598b.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp45ye598b.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp45ye598b.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp45ye598b.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    # check if the last character is an alphabetical character\n    # and\
    \ is not a part of a word\n    # return true if the last character is an alphabetical\
    \ character\n    # and is not a part of a word, and false otherwise\n    # YOUR\
    \ CODE HERE\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjb_hgups.jl:31\n  Expression: candidate(\"\
    apple pi e\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjb_hgups.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjb_hgups.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjb_hgups.jl:33\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjb_hgups.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjb_hgups.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjb_hgups.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpqdxl5wbe.jl:24\nin expression\
    \ starting at /tmp/tmpqdxl5wbe.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end]\n  \
    \  if txt == \" \"\n        return false\n    end\n    if txt in \"abcdefghijklmnopqrstuvwxyz\"\
    \n        return true\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\"\
    ) == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbip13ls_.jl:35\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbip13ls_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbip13ls_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbip13ls_.jl:37\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbip13ls_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbip13ls_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbip13ls_.jl:38\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbip13ls_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbip13ls_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbip13ls_.jl:43\n  Expression: candidate(\"apple pie\") ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbip13ls_.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbip13ls_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbip13ls_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    last_char = txt[end]\n\
    \    if last_char in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if last_char in txt[1:end-1]\n            return false\n        else\n\
    \            return true\n        end\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpio5irh6e.jl:22\nin expression\
    \ starting at /tmp/tmpio5irh6e.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp37rq3he9.jl:21\nin expression\
    \ starting at /tmp/tmp37rq3he9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end]\n  \
    \  if txt == \" \"\n        return false\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5_etho23.jl:32\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_etho23.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_etho23.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp5_etho23.jl:34\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_etho23.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_etho23.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp5_etho23.jl:36\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_etho23.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_etho23.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp5_etho23.jl:37\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5_etho23.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5_etho23.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp5_etho23.jl:39\n  Expression: candidate(\"eeeee e \") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_etho23.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp4jrpxwl3.jl:21\nin expression\
    \ starting at /tmp/tmp4jrpxwl3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprqbjfgbz.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmprqbjfgbz.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprqbjfgbz.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprqbjfgbz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprqbjfgbz.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmprqbjfgbz.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprqbjfgbz.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprqbjfgbz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprqbjfgbz.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmprqbjfgbz.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprqbjfgbz.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprqbjfgbz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprqbjfgbz.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isalpha(txt[end-1])\n            return false\n        end\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7z69ftjv.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp7z69ftjv.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7z69ftjv.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7z69ftjv.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7z69ftjv.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp7z69ftjv.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7z69ftjv.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7z69ftjv.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7z69ftjv.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp7z69ftjv.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7z69ftjv.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7z69ftjv.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7z69ftjv.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ ['a':'z', 'A':'Z']\n        if txt[end-1] in ['a':'z', 'A':'Z']\n          \
    \  return false\n        else\n            return true\n        end\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0b_1zet3.jl:37\n  Expression: candidate(\"\
    apple pi e\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b_1zet3.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b_1zet3.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp0b_1zet3.jl:39\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b_1zet3.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b_1zet3.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0b_1zet3.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpnyom5m8k.jl:21\nin expression\
    \ starting at /tmp/tmpnyom5m8k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp4go7v2ov.jl:21\nin expression\
    \ starting at /tmp/tmp4go7v2ov.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr2o9x6jn.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpr2o9x6jn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2o9x6jn.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2o9x6jn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpr2o9x6jn.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpr2o9x6jn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2o9x6jn.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2o9x6jn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpr2o9x6jn.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpr2o9x6jn.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2o9x6jn.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2o9x6jn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpr2o9x6jn.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp8fiwoea8.jl:24\nin expression\
    \ starting at /tmp/tmp8fiwoea8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplcqes6mp.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmplcqes6mp.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplcqes6mp.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplcqes6mp.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmplcqes6mp.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmplcqes6mp.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplcqes6mp.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplcqes6mp.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmplcqes6mp.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmplcqes6mp.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplcqes6mp.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplcqes6mp.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmplcqes6mp.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpaa82b47w.jl:21\nin expression\
    \ starting at /tmp/tmpaa82b47w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphyw_krhm.jl:21\nin expression\
    \ starting at /tmp/tmphyw_krhm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpgszy0f1i.jl:24\nin expression\
    \ starting at /tmp/tmpgszy0f1i.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp3dw3j2pb.jl:21\nin expression\
    \ starting at /tmp/tmp3dw3j2pb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpank5k0y8.jl:21\nin expression\
    \ starting at /tmp/tmpank5k0y8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\
    \ && !isletter(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgabo9kvh.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmpgabo9kvh.jl:21\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgabo9kvh.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgabo9kvh.jl:31\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgabo9kvh.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmputx1j_uq.jl:21\nin expression\
    \ starting at /tmp/tmputx1j_uq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if length(txt)\
    \ == 1\n            return true\n        end\n        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        end\n        return true\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp2n9sb12o.jl:21\nin expression\
    \ starting at /tmp/tmp2n9sb12o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpwsm98i51.jl:21\nin expression\
    \ starting at /tmp/tmpwsm98i51.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp4cx5qo8e.jl:21\nin expression\
    \ starting at /tmp/tmp4cx5qo8e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpogjiul0d.jl:24\nin expression\
    \ starting at /tmp/tmpogjiul0d.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if length(txt)\
    \ == 1\n        return isletter(txt[1])\n    end\n    if isletter(txt[end]) &&\
    \ !isletter(txt[end-1])\n        return true\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpitd5_ioi.jl:21\nin expression\
    \ starting at /tmp/tmpitd5_ioi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcd2f2m1w.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpcd2f2m1w.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcd2f2m1w.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcd2f2m1w.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpcd2f2m1w.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpcd2f2m1w.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcd2f2m1w.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcd2f2m1w.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpcd2f2m1w.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpcd2f2m1w.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcd2f2m1w.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcd2f2m1w.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpcd2f2m1w.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ == ' '\n            return true\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpnpmzgwvz.jl:21\nin expression\
    \ starting at /tmp/tmpnpmzgwvz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if isalpha(txt)\n        return true\n    else\n \
    \       return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps27oc4mu.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmps27oc4mu.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps27oc4mu.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps27oc4mu.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmps27oc4mu.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmps27oc4mu.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps27oc4mu.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps27oc4mu.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmps27oc4mu.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmps27oc4mu.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps27oc4mu.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps27oc4mu.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmps27oc4mu.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnm412lwk.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpnm412lwk.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnm412lwk.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnm412lwk.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpnm412lwk.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpnm412lwk.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnm412lwk.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnm412lwk.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpnm412lwk.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpnm412lwk.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnm412lwk.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnm412lwk.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpnm412lwk.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpu2izl10k.jl:24\nin expression\
    \ starting at /tmp/tmpu2izl10k.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpll598ziu.jl:21\nin expression\
    \ starting at /tmp/tmpll598ziu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        if txt[end-1]\
    \ in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            return\
    \ false\n        end\n        return true\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkgn_0lzq.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"A\") == true\\n  BoundsError: attempt\
    \ to access 1-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpkgn_0lzq.jl:22\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpkgn_0lzq.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpkgn_0lzq.jl:33\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    9      1     10\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpkgn_0lzq.jl:31\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt == \"\" && return false\n    txt[end] in 'a':'z' && return true\n\
    \    txt[end] in 'A':'Z' && return true\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphthvtq5_.jl:28\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphthvtq5_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphthvtq5_.jl:27\ntest set: Test\
    \ Failed at /tmp/tmphthvtq5_.jl:30\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphthvtq5_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphthvtq5_.jl:27\ntest set: Test\
    \ Failed at /tmp/tmphthvtq5_.jl:36\n  Expression: candidate(\"apple pie\") ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphthvtq5_.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphthvtq5_.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphthvtq5_.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpac0mg0gx.jl:21\nin expression\
    \ starting at /tmp/tmpac0mg0gx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpke3vaizd.jl:21\nin expression\
    \ starting at /tmp/tmpke3vaizd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp84vndnxd.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp84vndnxd.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp84vndnxd.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp84vndnxd.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp84vndnxd.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp84vndnxd.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp84vndnxd.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp84vndnxd.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp84vndnxd.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp84vndnxd.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp84vndnxd.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp84vndnxd.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp84vndnxd.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp4gplub1f.jl:24\nin expression\
    \ starting at /tmp/tmp4gplub1f.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    # check if the last character is a letter\n    if isletter(txt[end])\n\
    \        # check if the last character is a part of a word\n        if isletter(txt[end-1])\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprkayexa1.jl:38\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmprkayexa1.jl:21\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprkayexa1.jl:38 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprkayexa1.jl:34\ntest set:\
    \ Error During Test at /tmp/tmprkayexa1.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == false\n  BoundsError: attempt to access empty String at index\
    \ [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n\
    \   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n\
    \     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmprkayexa1.jl:19\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprkayexa1.jl:41 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprkayexa1.jl:34\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    8      2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkayexa1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8x8rhjd1.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp8x8rhjd1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8x8rhjd1.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8x8rhjd1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8x8rhjd1.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp8x8rhjd1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8x8rhjd1.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8x8rhjd1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8x8rhjd1.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp8x8rhjd1.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8x8rhjd1.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8x8rhjd1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp8x8rhjd1.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = strip(txt)\n    if length(txt) == 0\n        return false\n    end\n\
    \    if isalpha(txt[end]) && !isspace(txt[end-1])\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpphpbp0fh.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpphpbp0fh.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpphpbp0fh.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpphpbp0fh.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpphpbp0fh.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpphpbp0fh.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpphpbp0fh.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpphpbp0fh.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpphpbp0fh.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpphpbp0fh.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpphpbp0fh.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpphpbp0fh.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpphpbp0fh.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4k45y0bz.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp4k45y0bz.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4k45y0bz.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4k45y0bz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp4k45y0bz.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp4k45y0bz.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4k45y0bz.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4k45y0bz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp4k45y0bz.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp4k45y0bz.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4k45y0bz.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4k45y0bz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp4k45y0bz.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end]\n  \
    \  if txt == \" \"\n        return false\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppmx3k5no.jl:32\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmx3k5no.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmx3k5no.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppmx3k5no.jl:34\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmx3k5no.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmx3k5no.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppmx3k5no.jl:36\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmx3k5no.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmx3k5no.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppmx3k5no.jl:37\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppmx3k5no.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppmx3k5no.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppmx3k5no.jl:39\n  Expression: candidate(\"eeeee e \") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppmx3k5no.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if txt[end-1] == ' '\n            return true\n        else\n       \
    \     return false\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmputyim9fx.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmputyim9fx.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmputyim9fx.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmputyim9fx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmputyim9fx.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmputyim9fx.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmputyim9fx.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmputyim9fx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmputyim9fx.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmputyim9fx.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmputyim9fx.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmputyim9fx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmputyim9fx.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvdroz2pn.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpvdroz2pn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvdroz2pn.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvdroz2pn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpvdroz2pn.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpvdroz2pn.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvdroz2pn.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvdroz2pn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpvdroz2pn.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpvdroz2pn.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvdroz2pn.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvdroz2pn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpvdroz2pn.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2emxpruv.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp2emxpruv.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2emxpruv.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2emxpruv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2emxpruv.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp2emxpruv.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2emxpruv.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2emxpruv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2emxpruv.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp2emxpruv.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2emxpruv.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2emxpruv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2emxpruv.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp3xzwylb_.jl:21\nin expression\
    \ starting at /tmp/tmp3xzwylb_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpj3_kl83w.jl:21\nin expression\
    \ starting at /tmp/tmpj3_kl83w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    txt = txt[end]\n  \
    \  if txt == \" \"\n        return false\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"\
    apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"\
    eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin\
    \ pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_2op0sj.jl:32\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_2op0sj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_2op0sj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf_2op0sj.jl:34\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_2op0sj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_2op0sj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf_2op0sj.jl:36\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_2op0sj.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_2op0sj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf_2op0sj.jl:37\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_2op0sj.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_2op0sj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpf_2op0sj.jl:39\n  Expression: candidate(\"eeeee e \") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_2op0sj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp6dviyogl.jl:21\nin expression\
    \ starting at /tmp/tmp6dviyogl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if isletter(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjow0vjf1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmpjow0vjf1.jl:21\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjow0vjf1.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjow0vjf1.jl:31\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjow0vjf1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp47jvz99e.jl:32\\n  Expression: candidate(\"\
    apple\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp47jvz99e.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp47jvz99e.jl:31\\ntest set: Test\
    \ Failed at /tmp/tmp47jvz99e.jl:33\\n  Expression: candidate(\"apple pi e\") ==\
    \ true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp47jvz99e.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp47jvz99e.jl:31\\ntest set: Test\
    \ Failed at /tmp/tmp47jvz99e.jl:34\\n  Expression: candidate(\"eeeee\") == false\\\
    n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp47jvz99e.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp47jvz99e.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmppc1304dx.jl:21\nin expression\
    \ starting at /tmp/tmppc1304dx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmprlcvk4ms.jl:24\nin expression\
    \ starting at /tmp/tmprlcvk4ms.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if txt[end-1] == ' '\n            return true\n        else\n       \
    \     return false\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprp_uisfr.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmprp_uisfr.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprp_uisfr.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprp_uisfr.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmprp_uisfr.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmprp_uisfr.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprp_uisfr.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprp_uisfr.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmprp_uisfr.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmprp_uisfr.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprp_uisfr.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprp_uisfr.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmprp_uisfr.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp3ej75dt1.jl:24\nin expression\
    \ starting at /tmp/tmp3ej75dt1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1r5zb57b.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp1r5zb57b.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1r5zb57b.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1r5zb57b.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1r5zb57b.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp1r5zb57b.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1r5zb57b.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1r5zb57b.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1r5zb57b.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp1r5zb57b.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1r5zb57b.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1r5zb57b.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1r5zb57b.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp33mhqsma.jl:24\nin expression\
    \ starting at /tmp/tmp33mhqsma.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2t_4fqb2.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp2t_4fqb2.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2t_4fqb2.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2t_4fqb2.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2t_4fqb2.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp2t_4fqb2.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2t_4fqb2.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2t_4fqb2.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2t_4fqb2.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp2t_4fqb2.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2t_4fqb2.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2t_4fqb2.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2t_4fqb2.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpir54iikb.jl:24\nin expression\
    \ starting at /tmp/tmpir54iikb.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp_g7k5m1g.jl:21\nin expression\
    \ starting at /tmp/tmp_g7k5m1g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpczwbfbz1.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpczwbfbz1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpczwbfbz1.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpczwbfbz1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpczwbfbz1.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpczwbfbz1.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpczwbfbz1.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpczwbfbz1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpczwbfbz1.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpczwbfbz1.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpczwbfbz1.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpczwbfbz1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpczwbfbz1.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp3_9lixvm.jl:21\nin expression\
    \ starting at /tmp/tmp3_9lixvm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpcqpa_rsb.jl:24\nin expression\
    \ starting at /tmp/tmpcqpa_rsb.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl_g7gu_o.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpl_g7gu_o.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl_g7gu_o.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl_g7gu_o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpl_g7gu_o.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpl_g7gu_o.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl_g7gu_o.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl_g7gu_o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpl_g7gu_o.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpl_g7gu_o.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl_g7gu_o.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl_g7gu_o.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpl_g7gu_o.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp39rd9gvw.jl:24\nin expression\
    \ starting at /tmp/tmp39rd9gvw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpikilin8i.jl:24\nin expression\
    \ starting at /tmp/tmpikilin8i.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in ['a':'z', 'A':'Z']\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphavwvwhi.jl:35\n  Expression: candidate(\"\
    apple pi e\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphavwvwhi.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphavwvwhi.jl:33\ntest set: Test\
    \ Failed at /tmp/tmphavwvwhi.jl:37\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphavwvwhi.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphavwvwhi.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphavwvwhi.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2vsh4kx3.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp2vsh4kx3.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2vsh4kx3.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2vsh4kx3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2vsh4kx3.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp2vsh4kx3.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2vsh4kx3.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2vsh4kx3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2vsh4kx3.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp2vsh4kx3.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2vsh4kx3.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2vsh4kx3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2vsh4kx3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1m3s89_h.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp1m3s89_h.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1m3s89_h.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1m3s89_h.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1m3s89_h.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp1m3s89_h.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1m3s89_h.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1m3s89_h.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1m3s89_h.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp1m3s89_h.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1m3s89_h.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1m3s89_h.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1m3s89_h.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if txt[end-1] == ' '\n            return true\n        else\n       \
    \     return false\n        end\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\t\
    @test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxid9b4m7.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpxid9b4m7.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxid9b4m7.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxid9b4m7.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpxid9b4m7.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpxid9b4m7.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxid9b4m7.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxid9b4m7.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpxid9b4m7.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpxid9b4m7.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxid9b4m7.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxid9b4m7.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpxid9b4m7.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp5od926hu.jl:21\nin expression\
    \ starting at /tmp/tmp5od926hu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end-1] == ' '\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplu5ix2kl.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"A\") == true\\n  BoundsError: attempt\
    \ to access 1-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmplu5ix2kl.jl:24\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmplu5ix2kl.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmplu5ix2kl.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmplu5ix2kl.jl:39\\n  Expression: candidate(\"Pumpkin pie\
    \ 1\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpk4ivg73v.jl:21\nin expression\
    \ starting at /tmp/tmpk4ivg73v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprzrg35ob.jl:32\\n  Expression: candidate(\"\
    apple\") == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmprzrg35ob.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmprzrg35ob.jl:31\\ntest set: Test\
    \ Failed at /tmp/tmprzrg35ob.jl:33\\n  Expression: candidate(\"apple pi e\") ==\
    \ true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmprzrg35ob.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmprzrg35ob.jl:31\\ntest set: Test\
    \ Failed at /tmp/tmprzrg35ob.jl:34\\n  Expression: candidate(\"eeeee\") == false\\\
    n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmprzrg35ob.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmprzrg35ob.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp29fcqubt.jl:24\nin expression\
    \ starting at /tmp/tmp29fcqubt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ww_rljn.jl:32\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ww_rljn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ww_rljn.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1ww_rljn.jl:34\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ww_rljn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ww_rljn.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1ww_rljn.jl:35\n  Expression: candidate(\"A\") == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ww_rljn.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ww_rljn.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1ww_rljn.jl:40\n  Expression: candidate(\"apple pie\") ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1ww_rljn.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ww_rljn.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ww_rljn.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isalpha(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbkvynyyf.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmpbkvynyyf.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbkvynyyf.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbkvynyyf.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpbkvynyyf.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmpbkvynyyf.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbkvynyyf.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbkvynyyf.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpbkvynyyf.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmpbkvynyyf.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbkvynyyf.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbkvynyyf.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpbkvynyyf.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ntwtqxr.jl:24\nin expression\
    \ starting at /tmp/tmp5ntwtqxr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && !isspace(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7ajioclx.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"apple\") == false\\n  UndefVarError: isalpha\
    \ not defined\\n  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\\
    n     @ Main /tmp/tmp7ajioclx.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ajioclx.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ajioclx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ajioclx.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"apple pi e\") == true\\n  UndefVarError: isalpha not defined\\n\
    \  Stacktrace:\\n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main\
    \ /tmp/tmp7ajioclx.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ajioclx.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ajioclx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ajioclx.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eeeee\") == false\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a_letter(txt::String)\\n     @ Main /tmp/tmp7ajioclx.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7ajioclx.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7ajioclx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp7ajioclx.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"A\") == true\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] check_if_last_char_is_a"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp4_y868su.jl:21\nin expression\
    \ starting at /tmp/tmp4_y868su.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpy_ihla5u.jl:21\nin expression\
    \ starting at /tmp/tmpy_ihla5u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ txt[end-1] == ' '\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ia8f_wa.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmp4ia8f_wa.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ia8f_wa.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ia8f_wa.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ia8f_wa.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp4ia8f_wa.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ia8f_wa.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ia8f_wa.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ia8f_wa.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp4ia8f_wa.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ia8f_wa.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ia8f_wa.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ia8f_wa.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmp4ia8f_wa.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ia8f_wa.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpwswyfpdn.jl:21\nin expression\
    \ starting at /tmp/tmpwswyfpdn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpvpxzcx2m.jl:21\nin expression\
    \ starting at /tmp/tmpvpxzcx2m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpk54_s_y2.jl:24\nin expression\
    \ starting at /tmp/tmpk54_s_y2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpxeyfxrks.jl:21\nin expression\
    \ starting at /tmp/tmpxeyfxrks.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmptoxohe_j.jl:21\nin expression\
    \ starting at /tmp/tmptoxohe_j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    txt = txt[end]\n    if txt == \" \"\n        return false\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\t\
    @test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpofml6feo.jl:30\n  Expression: candidate(\"\
    apple\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofml6feo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofml6feo.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpofml6feo.jl:32\n  Expression: candidate(\"eeeee\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofml6feo.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofml6feo.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpofml6feo.jl:34\n  Expression: candidate(\"Pumpkin pie \")\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofml6feo.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofml6feo.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpofml6feo.jl:35\n  Expression: candidate(\"Pumpkin pie 1\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofml6feo.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofml6feo.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpofml6feo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == false\n  BoundsError: attempt to access empty String at index\
    \ [0]\n  Stacktrace:\n   [1] checkbounds"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpofml6feo.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpoefsbc3w.jl:21\nin expression\
    \ starting at /tmp/tmpoefsbc3w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpv13ognua.jl:21\nin expression\
    \ starting at /tmp/tmpv13ognua.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpbe2uwamv.jl:24\nin expression\
    \ starting at /tmp/tmpbe2uwamv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isletter(txt[end])\n\
    \        if length(txt) == 1\n            return true\n        end\n        if\
    \ isspace(txt[end-1])\n            return true\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr7vi7acx.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmpr7vi7acx.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr7vi7acx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr7vi7acx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpr7vi7acx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpr7vi7acx.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr7vi7acx.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr7vi7acx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpr7vi7acx.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpr7vi7acx.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr7vi7acx.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr7vi7acx.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpr7vi7acx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpr7vi7acx.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7vi7acx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpe24cvbmg.jl:24\nin expression\
    \ starting at /tmp/tmpe24cvbmg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpps5098ew.jl:24\nin expression\
    \ starting at /tmp/tmpps5098ew.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpg6yjbrjm.jl:21\nin expression\
    \ starting at /tmp/tmpg6yjbrjm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphs6cjfk6.jl:24\nin expression\
    \ starting at /tmp/tmphs6cjfk6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] ==\
    \ ' '\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") ==\
    \ false)\n\t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\"\
    ) == false)\n\t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie\
    \ \") == false)\n\t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"\
    apple pie\") == false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp13h8ruae.jl:24\nin expression\
    \ starting at /tmp/tmp13h8ruae.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if isalpha(txt[end])\
    \ && txt[end-1] == ' '\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyptgr9sj.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"apple\") == false\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main\
    \ /tmp/tmpyptgr9sj.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyptgr9sj.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyptgr9sj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpyptgr9sj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"apple pi e\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpyptgr9sj.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyptgr9sj.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyptgr9sj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpyptgr9sj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eeeee\") == false\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpyptgr9sj.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyptgr9sj.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyptgr9sj.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpyptgr9sj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"A\") == true\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] check_if_last_char_is_a_letter(txt::String)\n     @ Main /tmp/tmpyptgr9sj.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyptgr9sj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if length(txt) == 0\n        return false\n    end\n    if txt[end] in\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if txt[end-1]\
    \ in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return\
    \ false\n        else\n            return true\n        end\n    else\n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpf07169_e.jl:21\nin expression\
    \ starting at /tmp/tmpf07169_e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if isletter(txt[end])\
    \ && !isletter(txt[end-1])\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplxkviifo.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmplxkviifo.jl:21\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmplxkviifo.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmplxkviifo.jl:31\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxkviifo.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        if txt[end-1] in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return false\n        else\n            return true\n        end\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = check_if_last_char_is_a_letter;\n\t@test(candidate(\"apple\") == false)\n\
    \t@test(candidate(\"apple pi e\") == true)\n\t@test(candidate(\"eeeee\") == false)\n\
    \t@test(candidate(\"A\") == true)\n\t@test(candidate(\"Pumpkin pie \") == false)\n\
    \t@test(candidate(\"Pumpkin pie 1\") == false)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"eeeee e \") == false)\n\t@test(candidate(\"apple pie\") ==\
    \ false)\n\t@test(candidate(\"apple pi e \") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp8w3bl689.jl:21\nin expression\
    \ starting at /tmp/tmp8w3bl689.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Create a function that returns true if the last character\n\
    \    of a given string is an alphabetical character and is not\n    a part of\
    \ a word, and false otherwise.\n    Note: \"word\" is a group of characters separated\
    \ by space.\n\n    Examples:\n    >>> check_if_last_char_is_a_letter(\"apple pie\"\
    )\n    false\n    >>> check_if_last_char_is_a_letter(\"apple pi e\")\n    true\n\
    \    >>> check_if_last_char_is_a_letter(\"apple pi e \")\n    false\n    >>> check_if_last_char_is_a_letter(\"\
    \")\n    false\n    \"\"\"\nfunction check_if_last_char_is_a_letter(txt::String)::Bool\
    \ \n    if txt == \"\"\n        return false\n    end\n    if txt[end] == ' '\n\
    \        return false\n    end\n    if txt[end-1] == ' '\n        return true\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = check_if_last_char_is_a_letter;\n\
    \t@test(candidate(\"apple\") == false)\n\t@test(candidate(\"apple pi e\") == true)\n\
    \t@test(candidate(\"eeeee\") == false)\n\t@test(candidate(\"A\") == true)\n\t\
    @test(candidate(\"Pumpkin pie \") == false)\n\t@test(candidate(\"Pumpkin pie 1\"\
    ) == false)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"eeeee e \"\
    ) == false)\n\t@test(candidate(\"apple pie\") == false)\n\t@test(candidate(\"\
    apple pi e \") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe27ooyvp.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"A\") == true\n  BoundsError: attempt to access 1-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] check_if_last_char_is_a_letter(txt::String)\n\
    \     @ Main /tmp/tmpe27ooyvp.jl:24\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe27ooyvp.jl:37 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe27ooyvp.jl:33\ntest set:\
    \ Test Failed at /tmp/tmpe27ooyvp.jl:39\n  Expression: candidate(\"Pumpkin pie\
    \ 1\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe27ooyvp.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe27ooyvp.jl:33\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    8     1      1     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 1 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe27ooyvp.jl:31\n"
  exit_code: 1
  status: SyntaxError

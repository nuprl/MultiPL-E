name: HumanEval_23_strlen
language: jl
results:
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in 1:length(string)\n        len += 1\n    end\n  \
    \  return len\nend\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in 1:length(string)\n        len += 1\n    end\n  \
    \  return len\nend\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in 1:length(string)\n        len += 1\n    end\n  \
    \  return len\nend\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"\
    asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for i in 1:length(string)\n        len += 1\n    end\n  \
    \  return len\nend\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    len = 0\n    for c in string\n        len += 1\n    end\n    return len\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = strlen;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"x\") == 1)\n\t@test(candidate(\"asdasnakj\") ==\
    \ 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Return length of given string\n    >>> strlen(\"\")\n    0\n  \
    \  >>> strlen(\"abc\")\n    3\n    \"\"\"\nfunction strlen(string::String)::Int64\
    \ \n    return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = strlen;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"x\") == 1)\n\t\
    @test(candidate(\"asdasnakj\") == 9)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK

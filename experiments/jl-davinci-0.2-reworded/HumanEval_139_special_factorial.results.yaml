name: HumanEval_139_special_factorial
language: jl
results:
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpskpoe0r4.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskpoe0r4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskpoe0r4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpskpoe0r4.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskpoe0r4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskpoe0r4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpskpoe0r4.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskpoe0r4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskpoe0r4.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpskpoe0r4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcteyn3pk.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcteyn3pk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcteyn3pk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcteyn3pk.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcteyn3pk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcteyn3pk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcteyn3pk.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcteyn3pk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcteyn3pk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcteyn3pk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3snemoyq.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3snemoyq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3snemoyq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3snemoyq.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3snemoyq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3snemoyq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3snemoyq.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3snemoyq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3snemoyq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3snemoyq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvnvaped.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvnvaped.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvnvaped.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvnvaped.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvnvaped.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvnvaped.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvnvaped.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvnvaped.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvnvaped.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvnvaped.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    factorial = 1\n    for i in 1:n\n        factorial *=\
    \ i\n    end\n    return factorial\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) ==\
    \ 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9hq3h4gp.jl:27\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hq3h4gp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hq3h4gp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9hq3h4gp.jl:28\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hq3h4gp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hq3h4gp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9hq3h4gp.jl:29\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hq3h4gp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hq3h4gp.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hq3h4gp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpos9wrp45.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpos9wrp45.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpos9wrp45.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpos9wrp45.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpos9wrp45.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpos9wrp45.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpos9wrp45.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpos9wrp45.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpos9wrp45.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpos9wrp45.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdx609sju.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx609sju.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx609sju.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdx609sju.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx609sju.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx609sju.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdx609sju.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx609sju.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx609sju.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdx609sju.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxbee1nvr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbee1nvr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbee1nvr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxbee1nvr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbee1nvr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbee1nvr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxbee1nvr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbee1nvr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbee1nvr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxbee1nvr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59hswrs0.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59hswrs0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59hswrs0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp59hswrs0.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59hswrs0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59hswrs0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp59hswrs0.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp59hswrs0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp59hswrs0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59hswrs0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk58zl40t.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk58zl40t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk58zl40t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk58zl40t.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk58zl40t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk58zl40t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk58zl40t.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk58zl40t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk58zl40t.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk58zl40t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdwy7hady.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdwy7hady.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdwy7hady.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdwy7hady.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdwy7hady.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdwy7hady.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdwy7hady.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdwy7hady.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdwy7hady.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwy7hady.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfiugfdou.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiugfdou.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiugfdou.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfiugfdou.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiugfdou.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiugfdou.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfiugfdou.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiugfdou.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiugfdou.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfiugfdou.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgrd2u6wd.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrd2u6wd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrd2u6wd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgrd2u6wd.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrd2u6wd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrd2u6wd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgrd2u6wd.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrd2u6wd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrd2u6wd.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgrd2u6wd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_h4eqaol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h4eqaol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h4eqaol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_h4eqaol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h4eqaol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h4eqaol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_h4eqaol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h4eqaol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h4eqaol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_h4eqaol.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    # YOUR CODE HERE\n\
    \    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppyyhpvbe.jl:21\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 0 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyyhpvbe.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyyhpvbe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppyyhpvbe.jl:22\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 0 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyyhpvbe.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyyhpvbe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppyyhpvbe.jl:23\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 0 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyyhpvbe.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyyhpvbe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppyyhpvbe.jl:24\n  Expression: candidate(1) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyyhpvbe.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyyhpvbe.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppyyhpvbe.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    result = 1\n    for\
    \ i in 1:n\n        result *= factorial(i)\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4l9lqey.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4l9lqey.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4l9lqey.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr4l9lqey.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4l9lqey.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4l9lqey.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr4l9lqey.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4l9lqey.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4l9lqey.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4l9lqey.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    if n == 0\n        return 1\n    end\n    return n *\
    \ special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3dtonuq4.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dtonuq4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dtonuq4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3dtonuq4.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dtonuq4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dtonuq4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3dtonuq4.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dtonuq4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dtonuq4.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dtonuq4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgunbxmam.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgunbxmam.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgunbxmam.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgunbxmam.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgunbxmam.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgunbxmam.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgunbxmam.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgunbxmam.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgunbxmam.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgunbxmam.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8xp230eu.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xp230eu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xp230eu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8xp230eu.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xp230eu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xp230eu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8xp230eu.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xp230eu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xp230eu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8xp230eu.jl:21\n"
  exit_code: 1
  status: SyntaxError

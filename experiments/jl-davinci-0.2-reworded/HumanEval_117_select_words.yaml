name: HumanEval_117_select_words
language: jl
prompt: "\"\"\"Given a string s and a natural number n, you have been tasked to implement\
  \ \n    a function that returns a vector of all words from string s that contain\
  \ exactly \n    n consonants, in order these words appear in the string s.\n   \
  \ If the string s is empty then the function should return an empty vector.\n  \
  \  Note: you may assume the input string contains only letters and spaces.\n   \
  \ Examples:\n    >>> select_words(\"Mary had a little lamb\", 4)\n    [\"little\"\
  ]\n    >>> select_words(\"Mary had a little lamb\", 3)\n    [\"Mary\", \"lamb\"\
  ]\n    >>> select_words(\"simple white space\", 2)\n    []\n    >>> select_words(\"\
  Hello world\", 4)\n    [\"world\"]\n    >>> select_words(\"Uncle sam\", 3)\n   \
  \ [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
  Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
  \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
  , 2) == [])\n\t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"\
  Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == [])\n\t@test(candidate(\"\
  a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
completions: ["    words = split(s, \" \")\n    result = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(result, word)\n   \
    \     end\n    end\n    return result\nend", "    words = split(s, \" \")\n  \
    \  result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code goes here\n    return \"\"\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code goes here\n    return s\nend", "    words = split(s)\n\
    \    words_with_n_consonants = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(words_with_n_consonants, word)\n        end\n    end\n\
    \    return words_with_n_consonants\nend", "    words = split(s, \" \")\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n\
    \    for word in words\n        count = 0\n        for letter in word\n      \
    \      if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend", "    words = split(s)\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    selected_words = []\n    for word in words\n\
    \        consonants = 0\n        for letter in word\n            if letter in\
    \ \"bcdfghjklmnpqrstvwxyz\"\n                consonants += 1\n            end\n\
    \        end\n        if consonants == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n\
    \    for word in words\n        count = 0\n        for letter in word\n      \
    \      if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend", "    words = split(s)\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    for word in words\n        if length(word) ==\
    \ n\n            println(word)\n        end\n    end\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\n    return \"\"\nend", "    words = split(s)\n  \
    \  result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n     \
    \   count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # your code here\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s, r\"\\s+\")\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    res = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(res,\
    \ word)\n        end\n    end\n    return res\nend", "    words = split(s)\n \
    \   result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s, \" \")\n    result = []\n    for w in words\n        if count_consonants(w)\
    \ == n\n            push!(result, w)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if length(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    res = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(res,\
    \ word)\n        end\n    end\n    return res\nend", "    words = split(s, \"\
    \ \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return \"\"\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s, \" \")\n   \
    \ result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\n    return \"\"\nend", "    words = split(s)\n  \
    \  result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return \"\"\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\n    return \"your code here\"\nend", "    words =\
    \ split(s, \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    for i in 1:length(words)\n        if count_consonants(words[i]) == n\n  \
    \          println(words[i])\n        end\n    end\nend", "    words = split(s)\n\
    \    output = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(output, word)\n        end\n    end\n    return output\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    res = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(res, word)\n        end\n    end\n    return res\nend", " \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # your code here\n\
    \    return \"your code here\"\nend", "    words = split(s)\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    s_split = split(s)\n\
    \    s_split_consonants = []\n    for i in s_split\n        if count_consonants(i)\
    \ == n\n            push!(s_split_consonants, i)\n        end\n    end\n    return\
    \ s_split_consonants\nend", "    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"z\"]\n    result = []\n    for word in words\n        count = 0\n     \
    \   for letter in word\n            if letter in consonants\n                count\
    \ += 1\n            end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        consonants\
    \ = 0\n        for letter in word\n            if letter in \"bcdfghjklmnpqrstvwxyz\"\
    \n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ # your code here\nend", "    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ # your code here\nend", "    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"
